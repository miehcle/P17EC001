

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Wed Apr 19 13:54:00 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	dabs	1,0x7E,2
    38  0000                     	;# 
    39  0001                     	;# 
    40  0002                     	;# 
    41  0003                     	;# 
    42  0004                     	;# 
    43  0005                     	;# 
    44  0006                     	;# 
    45  0007                     	;# 
    46  0008                     	;# 
    47  0009                     	;# 
    48  000A                     	;# 
    49  000B                     	;# 
    50  000C                     	;# 
    51  000D                     	;# 
    52  0011                     	;# 
    53  0012                     	;# 
    54  0013                     	;# 
    55  0014                     	;# 
    56  0015                     	;# 
    57  0016                     	;# 
    58  0016                     	;# 
    59  0017                     	;# 
    60  0018                     	;# 
    61  0019                     	;# 
    62  001A                     	;# 
    63  001B                     	;# 
    64  001C                     	;# 
    65  001E                     	;# 
    66  001F                     	;# 
    67  008C                     	;# 
    68  008D                     	;# 
    69  0091                     	;# 
    70  0092                     	;# 
    71  0093                     	;# 
    72  0094                     	;# 
    73  0095                     	;# 
    74  0096                     	;# 
    75  0097                     	;# 
    76  0098                     	;# 
    77  0099                     	;# 
    78  009A                     	;# 
    79  009B                     	;# 
    80  009B                     	;# 
    81  009C                     	;# 
    82  009D                     	;# 
    83  009E                     	;# 
    84  010C                     	;# 
    85  010D                     	;# 
    86  0111                     	;# 
    87  0112                     	;# 
    88  0113                     	;# 
    89  0114                     	;# 
    90  0115                     	;# 
    91  0116                     	;# 
    92  0117                     	;# 
    93  0118                     	;# 
    94  0119                     	;# 
    95  011A                     	;# 
    96  011B                     	;# 
    97  011D                     	;# 
    98  011E                     	;# 
    99  018C                     	;# 
   100  018D                     	;# 
   101  0191                     	;# 
   102  0191                     	;# 
   103  0192                     	;# 
   104  0193                     	;# 
   105  0193                     	;# 
   106  0193                     	;# 
   107  0194                     	;# 
   108  0195                     	;# 
   109  0196                     	;# 
   110  0199                     	;# 
   111  019A                     	;# 
   112  019B                     	;# 
   113  019B                     	;# 
   114  019B                     	;# 
   115  019B                     	;# 
   116  019C                     	;# 
   117  019C                     	;# 
   118  019D                     	;# 
   119  019E                     	;# 
   120  019F                     	;# 
   121  020C                     	;# 
   122  020D                     	;# 
   123  0211                     	;# 
   124  0211                     	;# 
   125  0212                     	;# 
   126  0212                     	;# 
   127  0213                     	;# 
   128  0213                     	;# 
   129  0214                     	;# 
   130  0214                     	;# 
   131  0215                     	;# 
   132  0215                     	;# 
   133  0215                     	;# 
   134  0216                     	;# 
   135  0216                     	;# 
   136  0217                     	;# 
   137  0217                     	;# 
   138  0219                     	;# 
   139  021A                     	;# 
   140  021B                     	;# 
   141  021C                     	;# 
   142  021D                     	;# 
   143  021E                     	;# 
   144  021F                     	;# 
   145  0291                     	;# 
   146  0291                     	;# 
   147  0292                     	;# 
   148  0293                     	;# 
   149  0294                     	;# 
   150  0295                     	;# 
   151  0295                     	;# 
   152  0296                     	;# 
   153  0298                     	;# 
   154  0298                     	;# 
   155  0299                     	;# 
   156  029A                     	;# 
   157  029B                     	;# 
   158  029C                     	;# 
   159  029C                     	;# 
   160  029D                     	;# 
   161  029E                     	;# 
   162  029E                     	;# 
   163  0311                     	;# 
   164  0311                     	;# 
   165  0312                     	;# 
   166  0313                     	;# 
   167  0318                     	;# 
   168  0318                     	;# 
   169  0319                     	;# 
   170  031A                     	;# 
   171  0394                     	;# 
   172  0395                     	;# 
   173  0396                     	;# 
   174  039A                     	;# 
   175  039C                     	;# 
   176  039D                     	;# 
   177  039E                     	;# 
   178  039F                     	;# 
   179  0415                     	;# 
   180  0416                     	;# 
   181  0417                     	;# 
   182  041C                     	;# 
   183  041D                     	;# 
   184  041E                     	;# 
   185  0FE4                     	;# 
   186  0FE5                     	;# 
   187  0FE6                     	;# 
   188  0FE7                     	;# 
   189  0FE8                     	;# 
   190  0FE9                     	;# 
   191  0FEA                     	;# 
   192  0FEB                     	;# 
   193  0FED                     	;# 
   194  0FEE                     	;# 
   195  0FEF                     	;# 
   196  0000                     	;# 
   197  0001                     	;# 
   198  0002                     	;# 
   199  0003                     	;# 
   200  0004                     	;# 
   201  0005                     	;# 
   202  0006                     	;# 
   203  0007                     	;# 
   204  0008                     	;# 
   205  0009                     	;# 
   206  000A                     	;# 
   207  000B                     	;# 
   208  000C                     	;# 
   209  000D                     	;# 
   210  0011                     	;# 
   211  0012                     	;# 
   212  0013                     	;# 
   213  0014                     	;# 
   214  0015                     	;# 
   215  0016                     	;# 
   216  0016                     	;# 
   217  0017                     	;# 
   218  0018                     	;# 
   219  0019                     	;# 
   220  001A                     	;# 
   221  001B                     	;# 
   222  001C                     	;# 
   223  001E                     	;# 
   224  001F                     	;# 
   225  008C                     	;# 
   226  008D                     	;# 
   227  0091                     	;# 
   228  0092                     	;# 
   229  0093                     	;# 
   230  0094                     	;# 
   231  0095                     	;# 
   232  0096                     	;# 
   233  0097                     	;# 
   234  0098                     	;# 
   235  0099                     	;# 
   236  009A                     	;# 
   237  009B                     	;# 
   238  009B                     	;# 
   239  009C                     	;# 
   240  009D                     	;# 
   241  009E                     	;# 
   242  010C                     	;# 
   243  010D                     	;# 
   244  0111                     	;# 
   245  0112                     	;# 
   246  0113                     	;# 
   247  0114                     	;# 
   248  0115                     	;# 
   249  0116                     	;# 
   250  0117                     	;# 
   251  0118                     	;# 
   252  0119                     	;# 
   253  011A                     	;# 
   254  011B                     	;# 
   255  011D                     	;# 
   256  011E                     	;# 
   257  018C                     	;# 
   258  018D                     	;# 
   259  0191                     	;# 
   260  0191                     	;# 
   261  0192                     	;# 
   262  0193                     	;# 
   263  0193                     	;# 
   264  0193                     	;# 
   265  0194                     	;# 
   266  0195                     	;# 
   267  0196                     	;# 
   268  0199                     	;# 
   269  019A                     	;# 
   270  019B                     	;# 
   271  019B                     	;# 
   272  019B                     	;# 
   273  019B                     	;# 
   274  019C                     	;# 
   275  019C                     	;# 
   276  019D                     	;# 
   277  019E                     	;# 
   278  019F                     	;# 
   279  020C                     	;# 
   280  020D                     	;# 
   281  0211                     	;# 
   282  0211                     	;# 
   283  0212                     	;# 
   284  0212                     	;# 
   285  0213                     	;# 
   286  0213                     	;# 
   287  0214                     	;# 
   288  0214                     	;# 
   289  0215                     	;# 
   290  0215                     	;# 
   291  0215                     	;# 
   292  0216                     	;# 
   293  0216                     	;# 
   294  0217                     	;# 
   295  0217                     	;# 
   296  0219                     	;# 
   297  021A                     	;# 
   298  021B                     	;# 
   299  021C                     	;# 
   300  021D                     	;# 
   301  021E                     	;# 
   302  021F                     	;# 
   303  0291                     	;# 
   304  0291                     	;# 
   305  0292                     	;# 
   306  0293                     	;# 
   307  0294                     	;# 
   308  0295                     	;# 
   309  0295                     	;# 
   310  0296                     	;# 
   311  0298                     	;# 
   312  0298                     	;# 
   313  0299                     	;# 
   314  029A                     	;# 
   315  029B                     	;# 
   316  029C                     	;# 
   317  029C                     	;# 
   318  029D                     	;# 
   319  029E                     	;# 
   320  029E                     	;# 
   321  0311                     	;# 
   322  0311                     	;# 
   323  0312                     	;# 
   324  0313                     	;# 
   325  0318                     	;# 
   326  0318                     	;# 
   327  0319                     	;# 
   328  031A                     	;# 
   329  0394                     	;# 
   330  0395                     	;# 
   331  0396                     	;# 
   332  039A                     	;# 
   333  039C                     	;# 
   334  039D                     	;# 
   335  039E                     	;# 
   336  039F                     	;# 
   337  0415                     	;# 
   338  0416                     	;# 
   339  0417                     	;# 
   340  041C                     	;# 
   341  041D                     	;# 
   342  041E                     	;# 
   343  0FE4                     	;# 
   344  0FE5                     	;# 
   345  0FE6                     	;# 
   346  0FE7                     	;# 
   347  0FE8                     	;# 
   348  0FE9                     	;# 
   349  0FEA                     	;# 
   350  0FEB                     	;# 
   351  0FED                     	;# 
   352  0FEE                     	;# 
   353  0FEF                     	;# 
   354  0000                     	;# 
   355  0001                     	;# 
   356  0002                     	;# 
   357  0003                     	;# 
   358  0004                     	;# 
   359  0005                     	;# 
   360  0006                     	;# 
   361  0007                     	;# 
   362  0008                     	;# 
   363  0009                     	;# 
   364  000A                     	;# 
   365  000B                     	;# 
   366  000C                     	;# 
   367  000D                     	;# 
   368  0011                     	;# 
   369  0012                     	;# 
   370  0013                     	;# 
   371  0014                     	;# 
   372  0015                     	;# 
   373  0016                     	;# 
   374  0016                     	;# 
   375  0017                     	;# 
   376  0018                     	;# 
   377  0019                     	;# 
   378  001A                     	;# 
   379  001B                     	;# 
   380  001C                     	;# 
   381  001E                     	;# 
   382  001F                     	;# 
   383  008C                     	;# 
   384  008D                     	;# 
   385  0091                     	;# 
   386  0092                     	;# 
   387  0093                     	;# 
   388  0094                     	;# 
   389  0095                     	;# 
   390  0096                     	;# 
   391  0097                     	;# 
   392  0098                     	;# 
   393  0099                     	;# 
   394  009A                     	;# 
   395  009B                     	;# 
   396  009B                     	;# 
   397  009C                     	;# 
   398  009D                     	;# 
   399  009E                     	;# 
   400  010C                     	;# 
   401  010D                     	;# 
   402  0111                     	;# 
   403  0112                     	;# 
   404  0113                     	;# 
   405  0114                     	;# 
   406  0115                     	;# 
   407  0116                     	;# 
   408  0117                     	;# 
   409  0118                     	;# 
   410  0119                     	;# 
   411  011A                     	;# 
   412  011B                     	;# 
   413  011D                     	;# 
   414  011E                     	;# 
   415  018C                     	;# 
   416  018D                     	;# 
   417  0191                     	;# 
   418  0191                     	;# 
   419  0192                     	;# 
   420  0193                     	;# 
   421  0193                     	;# 
   422  0193                     	;# 
   423  0194                     	;# 
   424  0195                     	;# 
   425  0196                     	;# 
   426  0199                     	;# 
   427  019A                     	;# 
   428  019B                     	;# 
   429  019B                     	;# 
   430  019B                     	;# 
   431  019B                     	;# 
   432  019C                     	;# 
   433  019C                     	;# 
   434  019D                     	;# 
   435  019E                     	;# 
   436  019F                     	;# 
   437  020C                     	;# 
   438  020D                     	;# 
   439  0211                     	;# 
   440  0211                     	;# 
   441  0212                     	;# 
   442  0212                     	;# 
   443  0213                     	;# 
   444  0213                     	;# 
   445  0214                     	;# 
   446  0214                     	;# 
   447  0215                     	;# 
   448  0215                     	;# 
   449  0215                     	;# 
   450  0216                     	;# 
   451  0216                     	;# 
   452  0217                     	;# 
   453  0217                     	;# 
   454  0219                     	;# 
   455  021A                     	;# 
   456  021B                     	;# 
   457  021C                     	;# 
   458  021D                     	;# 
   459  021E                     	;# 
   460  021F                     	;# 
   461  0291                     	;# 
   462  0291                     	;# 
   463  0292                     	;# 
   464  0293                     	;# 
   465  0294                     	;# 
   466  0295                     	;# 
   467  0295                     	;# 
   468  0296                     	;# 
   469  0298                     	;# 
   470  0298                     	;# 
   471  0299                     	;# 
   472  029A                     	;# 
   473  029B                     	;# 
   474  029C                     	;# 
   475  029C                     	;# 
   476  029D                     	;# 
   477  029E                     	;# 
   478  029E                     	;# 
   479  0311                     	;# 
   480  0311                     	;# 
   481  0312                     	;# 
   482  0313                     	;# 
   483  0318                     	;# 
   484  0318                     	;# 
   485  0319                     	;# 
   486  031A                     	;# 
   487  0394                     	;# 
   488  0395                     	;# 
   489  0396                     	;# 
   490  039A                     	;# 
   491  039C                     	;# 
   492  039D                     	;# 
   493  039E                     	;# 
   494  039F                     	;# 
   495  0415                     	;# 
   496  0416                     	;# 
   497  0417                     	;# 
   498  041C                     	;# 
   499  041D                     	;# 
   500  041E                     	;# 
   501  0FE4                     	;# 
   502  0FE5                     	;# 
   503  0FE6                     	;# 
   504  0FE7                     	;# 
   505  0FE8                     	;# 
   506  0FE9                     	;# 
   507  0FEA                     	;# 
   508  0FEB                     	;# 
   509  0FED                     	;# 
   510  0FEE                     	;# 
   511  0FEF                     	;# 
   512  0000                     	;# 
   513  0001                     	;# 
   514  0002                     	;# 
   515  0003                     	;# 
   516  0004                     	;# 
   517  0005                     	;# 
   518  0006                     	;# 
   519  0007                     	;# 
   520  0008                     	;# 
   521  0009                     	;# 
   522  000A                     	;# 
   523  000B                     	;# 
   524  000C                     	;# 
   525  000D                     	;# 
   526  0011                     	;# 
   527  0012                     	;# 
   528  0013                     	;# 
   529  0014                     	;# 
   530  0015                     	;# 
   531  0016                     	;# 
   532  0016                     	;# 
   533  0017                     	;# 
   534  0018                     	;# 
   535  0019                     	;# 
   536  001A                     	;# 
   537  001B                     	;# 
   538  001C                     	;# 
   539  001E                     	;# 
   540  001F                     	;# 
   541  008C                     	;# 
   542  008D                     	;# 
   543  0091                     	;# 
   544  0092                     	;# 
   545  0093                     	;# 
   546  0094                     	;# 
   547  0095                     	;# 
   548  0096                     	;# 
   549  0097                     	;# 
   550  0098                     	;# 
   551  0099                     	;# 
   552  009A                     	;# 
   553  009B                     	;# 
   554  009B                     	;# 
   555  009C                     	;# 
   556  009D                     	;# 
   557  009E                     	;# 
   558  010C                     	;# 
   559  010D                     	;# 
   560  0111                     	;# 
   561  0112                     	;# 
   562  0113                     	;# 
   563  0114                     	;# 
   564  0115                     	;# 
   565  0116                     	;# 
   566  0117                     	;# 
   567  0118                     	;# 
   568  0119                     	;# 
   569  011A                     	;# 
   570  011B                     	;# 
   571  011D                     	;# 
   572  011E                     	;# 
   573  018C                     	;# 
   574  018D                     	;# 
   575  0191                     	;# 
   576  0191                     	;# 
   577  0192                     	;# 
   578  0193                     	;# 
   579  0193                     	;# 
   580  0193                     	;# 
   581  0194                     	;# 
   582  0195                     	;# 
   583  0196                     	;# 
   584  0199                     	;# 
   585  019A                     	;# 
   586  019B                     	;# 
   587  019B                     	;# 
   588  019B                     	;# 
   589  019B                     	;# 
   590  019C                     	;# 
   591  019C                     	;# 
   592  019D                     	;# 
   593  019E                     	;# 
   594  019F                     	;# 
   595  020C                     	;# 
   596  020D                     	;# 
   597  0211                     	;# 
   598  0211                     	;# 
   599  0212                     	;# 
   600  0212                     	;# 
   601  0213                     	;# 
   602  0213                     	;# 
   603  0214                     	;# 
   604  0214                     	;# 
   605  0215                     	;# 
   606  0215                     	;# 
   607  0215                     	;# 
   608  0216                     	;# 
   609  0216                     	;# 
   610  0217                     	;# 
   611  0217                     	;# 
   612  0219                     	;# 
   613  021A                     	;# 
   614  021B                     	;# 
   615  021C                     	;# 
   616  021D                     	;# 
   617  021E                     	;# 
   618  021F                     	;# 
   619  0291                     	;# 
   620  0291                     	;# 
   621  0292                     	;# 
   622  0293                     	;# 
   623  0294                     	;# 
   624  0295                     	;# 
   625  0295                     	;# 
   626  0296                     	;# 
   627  0298                     	;# 
   628  0298                     	;# 
   629  0299                     	;# 
   630  029A                     	;# 
   631  029B                     	;# 
   632  029C                     	;# 
   633  029C                     	;# 
   634  029D                     	;# 
   635  029E                     	;# 
   636  029E                     	;# 
   637  0311                     	;# 
   638  0311                     	;# 
   639  0312                     	;# 
   640  0313                     	;# 
   641  0318                     	;# 
   642  0318                     	;# 
   643  0319                     	;# 
   644  031A                     	;# 
   645  0394                     	;# 
   646  0395                     	;# 
   647  0396                     	;# 
   648  039A                     	;# 
   649  039C                     	;# 
   650  039D                     	;# 
   651  039E                     	;# 
   652  039F                     	;# 
   653  0415                     	;# 
   654  0416                     	;# 
   655  0417                     	;# 
   656  041C                     	;# 
   657  041D                     	;# 
   658  041E                     	;# 
   659  0FE4                     	;# 
   660  0FE5                     	;# 
   661  0FE6                     	;# 
   662  0FE7                     	;# 
   663  0FE8                     	;# 
   664  0FE9                     	;# 
   665  0FEA                     	;# 
   666  0FEB                     	;# 
   667  0FED                     	;# 
   668  0FEE                     	;# 
   669  0FEF                     	;# 
   670  000C                     _PORTA	set	12
   671  000D                     _PORTB	set	13
   672  001B                     _PR2	set	27
   673  001C                     _T2CON	set	28
   674  001A                     _TMR2	set	26
   675  0093                     _BCL1IF	set	147
   676  005F                     _GIE	set	95
   677  005E                     _PEIE	set	94
   678  006B                     _RB3	set	107
   679  008B                     _SSP1IF	set	139
   680  0089                     _TMR2IF	set	137
   681  00E2                     _TMR2ON	set	226
   682  0099                     _TMR4IF	set	153
   683  009D                     _ADCON0	set	157
   684  009E                     _ADCON1	set	158
   685  009C                     _ADRESH	set	156
   686  009B                     _ADRESL	set	155
   687  0099                     _OSCCON	set	153
   688  008C                     _TRISA	set	140
   689  008D                     _TRISB	set	141
   690  0493                     _BCL1IE	set	1171
   691  04E9                     _GO_nDONE	set	1257
   692  048B                     _SSP1IE	set	1163
   693  0489                     _TMR2IE	set	1161
   694  0499                     _TMR4IE	set	1177
   695  018C                     _ANSELA	set	396
   696  018D                     _ANSELB	set	397
   697  0212                     _SSP1ADD	set	530
   698  0211                     _SSP1BUF	set	529
   699  0215                     _SSP1CON1	set	533
   700  0216                     _SSP1CON2	set	534
   701  0216                     _SSP1CON2bits	set	534
   702  0214                     _SSP1STAT	set	532
   703  0214                     _SSP1STATbits	set	532
   704  029E                     _CCPTMRS	set	670
   705  0313                     _CCP3CON	set	787
   706  0313                     _CCP3CONbits	set	787
   707  0312                     _CCPR3H	set	786
   708  0311                     _CCPR3L	set	785
   709  0416                     _PR4	set	1046
   710  0417                     _T4CON	set	1047
   711  0415                     _TMR4	set	1045
   712  20BA                     _TMR4ON	set	8378
   713                           
   714                           	psect	text0
   715  0000                     __ptext0:	
   716                           ; #config settings
   717                           
   718                           
   719                           ;psect for function _I2C_ack_check
   720  0000                     
   721                           	psect	cinit
   722  0015                     start_initialization:	
   723  0015                     __initialization:	
   724                           
   725                           ; Clear objects allocated to BANK0
   726  0015  01DE               	clrf	__pbssBANK0& (0+127)
   727  0016  01DF               	clrf	(__pbssBANK0+1)& (0+127)
   728  0017  01E0               	clrf	(__pbssBANK0+2)& (0+127)
   729  0018  01E1               	clrf	(__pbssBANK0+3)& (0+127)
   730  0019  01E2               	clrf	(__pbssBANK0+4)& (0+127)
   731  001A  01E3               	clrf	(__pbssBANK0+5)& (0+127)
   732  001B  01E4               	clrf	(__pbssBANK0+6)& (0+127)
   733  001C  01E5               	clrf	(__pbssBANK0+7)& (0+127)
   734  001D  01E6               	clrf	(__pbssBANK0+8)& (0+127)
   735  001E                     end_of_initialization:	
   736                           ;End of C runtime variable initialization code
   737                           
   738  001E                     __end_of__initialization:	
   739  001E  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   740  001F  0020               	movlb	0
   741  0020  3185  2D32         	ljmp	_main	;jump to C main() function
   742                           
   743                           	psect	bssBANK0
   744  005E                     __pbssBANK0:	
   745  005E                     D_calc@previous:	
   746  005E                     	ds	2
   747  0060                     I_calc@sum:	
   748  0060                     	ds	2
   749  0062                     _controller_current_limit:	
   750  0062                     	ds	2
   751  0064                     interrupt_I2C@counter:	
   752  0064                     	ds	2
   753  0066                     I2C_slave_interrupt@data_ptr:	
   754  0066                     	ds	1
   755                           
   756                           	psect	cstackBANK1
   757  00A0                     __pcstackBANK1:	
   758  00A0                     ??_loop:	
   759  00A0                     ??_init_I2C_master:	
   760                           ; 0 bytes @ 0x0
   761                           
   762  00A0                     ?_init_adcon:	
   763                           ; 0 bytes @ 0x0
   764                           
   765  00A0                     ??_init_PWM:	
   766                           ; 0 bytes @ 0x0
   767                           
   768  00A0                     ??_init_Timer4:	
   769                           ; 0 bytes @ 0x0
   770                           
   771  00A0                     init_adcon@anselA:	
   772                           ; 0 bytes @ 0x0
   773                           
   774                           
   775                           ; 2 bytes @ 0x0
   776  00A0                     	ds	2
   777  00A2                     init_adcon@anselB:	
   778                           
   779                           ; 2 bytes @ 0x2
   780  00A2                     	ds	2
   781  00A4                     ??_init:	
   782  00A4                     ??_init_adcon:	
   783                           ; 0 bytes @ 0x4
   784                           
   785                           
   786                           ; 0 bytes @ 0x4
   787  00A4                     	ds	1
   788  00A5                     init@i:	
   789                           
   790                           ; 1 bytes @ 0x5
   791  00A5                     	ds	1
   792  00A6                     ?_main:	
   793  00A6                     main@argc:	
   794                           ; 2 bytes @ 0x6
   795                           
   796                           
   797                           ; 2 bytes @ 0x6
   798  00A6                     	ds	2
   799  00A8                     main@argv:	
   800                           
   801                           ; 2 bytes @ 0x8
   802  00A8                     	ds	2
   803  00AA                     ??_main:	
   804                           
   805                           	psect	cstackCOMMON
   806  0070                     __pcstackCOMMON:	
   807                           ; 0 bytes @ 0xA
   808                           
   809  0070                     ?_init:	
   810  0070                     ?_loop:	
   811                           ; 0 bytes @ 0x0
   812                           
   813  0070                     ?_init_I2C_master:	
   814                           ; 0 bytes @ 0x0
   815                           
   816  0070                     ?_init_PWM:	
   817                           ; 0 bytes @ 0x0
   818                           
   819  0070                     ?_interrupt_controller:	
   820                           ; 0 bytes @ 0x0
   821                           
   822  0070                     ?_interrupt_I2C:	
   823                           ; 0 bytes @ 0x0
   824                           
   825  0070                     ?_set_current_limit:	
   826                           ; 0 bytes @ 0x0
   827                           
   828  0070                     ?_init_Timer4:	
   829                           ; 0 bytes @ 0x0
   830                           
   831  0070                     ?_inter:	
   832                           ; 0 bytes @ 0x0
   833                           
   834  0070                     ?_output:	
   835                           ; 0 bytes @ 0x0
   836                           
   837  0070                     ?_I2C_idle_check:	
   838                           ; 0 bytes @ 0x0
   839                           
   840  0070                     ??_I2C_idle_check:	
   841                           ; 0 bytes @ 0x0
   842                           
   843  0070                     ?_adconv:	
   844                           ; 0 bytes @ 0x0
   845                           
   846  0070                     ?_get_current_limit:	
   847                           ; 2 bytes @ 0x0
   848                           
   849  0070                     ?_I2C_ack_check:	
   850                           ; 2 bytes @ 0x0
   851                           
   852  0070                     ?___ftpack:	
   853                           ; 2 bytes @ 0x0
   854                           
   855  0070                     ?___lmul:	
   856                           ; 3 bytes @ 0x0
   857                           
   858  0070                     output@out:	
   859                           ; 4 bytes @ 0x0
   860                           
   861  0070                     set_current_limit@current_limit:	
   862                           ; 2 bytes @ 0x0
   863                           
   864  0070                     adconv@pin_select:	
   865                           ; 2 bytes @ 0x0
   866                           
   867  0070                     ___ftpack@arg:	
   868                           ; 2 bytes @ 0x0
   869                           
   870  0070                     ___lmul@multiplier:	
   871                           ; 3 bytes @ 0x0
   872                           
   873                           
   874                           ; 4 bytes @ 0x0
   875  0070                     	ds	2
   876  0072                     ??_adconv:	
   877  0072                     ??_set_current_limit:	
   878                           ; 0 bytes @ 0x2
   879                           
   880  0072                     ??_output:	
   881                           ; 0 bytes @ 0x2
   882                           
   883  0072                     ??_get_current_limit:	
   884                           ; 0 bytes @ 0x2
   885                           
   886  0072                     ??_I2C_ack_check:	
   887                           ; 0 bytes @ 0x2
   888                           
   889  0072                     I2C_ack_check@i:	
   890                           ; 0 bytes @ 0x2
   891                           
   892                           
   893                           ; 2 bytes @ 0x2
   894  0072                     	ds	1
   895  0073                     ___ftpack@exp:	
   896                           
   897                           ; 1 bytes @ 0x3
   898  0073                     	ds	1
   899  0074                     ?_I2C_send_data:	
   900  0074                     I2C_send_data@data:	
   901                           ; 0 bytes @ 0x4
   902                           
   903  0074                     ___ftpack@sign:	
   904                           ; 1 bytes @ 0x4
   905                           
   906  0074                     ___lmul@multiplicand:	
   907                           ; 1 bytes @ 0x4
   908                           
   909                           
   910                           ; 4 bytes @ 0x4
   911  0074                     	ds	1
   912  0075                     ??___ftpack:	
   913  0075                     I2C_send_data@length:	
   914                           ; 0 bytes @ 0x5
   915                           
   916                           
   917                           ; 2 bytes @ 0x5
   918  0075                     	ds	2
   919  0077                     ??_I2C_send_data:	
   920                           
   921                           ; 0 bytes @ 0x7
   922  0077                     	ds	1
   923  0078                     ??___lmul:	
   924  0078                     ?___awtoft:	
   925                           ; 0 bytes @ 0x8
   926                           
   927  0078                     I2C_send_data@addr:	
   928                           ; 3 bytes @ 0x8
   929                           
   930  0078                     ___awtoft@c:	
   931                           ; 1 bytes @ 0x8
   932                           
   933  0078                     ___lmul@product:	
   934                           ; 2 bytes @ 0x8
   935                           
   936                           
   937                           ; 4 bytes @ 0x8
   938  0078                     	ds	1
   939  0079                     adconv@temp:	
   940  0079                     I2C_send_data@i:	
   941                           ; 2 bytes @ 0x9
   942                           
   943                           
   944                           ; 2 bytes @ 0x9
   945  0079                     	ds	2
   946  007B                     ??_interrupt_I2C:	
   947  007B                     ?_measure:	
   948                           ; 0 bytes @ 0xB
   949                           
   950  007B                     ??___awtoft:	
   951                           ; 0 bytes @ 0xB
   952                           
   953  007B                     measure@pin_select:	
   954                           ; 0 bytes @ 0xB
   955                           
   956                           
   957                           ; 2 bytes @ 0xB
   958  007B                     	ds	1
   959  007C                     ?_current_conversion:	
   960  007C                     current_conversion@measured_value:	
   961                           ; 2 bytes @ 0xC
   962                           
   963                           
   964                           ; 2 bytes @ 0xC
   965  007C                     	ds	1
   966  007D                     ??_measure:	
   967  007D                     measure@value:	
   968                           ; 0 bytes @ 0xD
   969                           
   970  007D                     ___awtoft@sign:	
   971                           ; 1 bytes @ 0xD
   972                           
   973                           
   974                           ; 1 bytes @ 0xD
   975  007D                     	ds	1
   976  007E                     ??_P_calc:	
   977                           
   978                           	psect	cstackBANK0
   979  0020                     __pcstackBANK0:	
   980                           ; 0 bytes @ 0xE
   981                           
   982  0020                     ??_current_conversion:	
   983  0020                     ?___ftmul:	
   984                           ; 0 bytes @ 0x0
   985                           
   986  0020                     interrupt_I2C@data:	
   987                           ; 3 bytes @ 0x0
   988                           
   989  0020                     ___ftmul@f1:	
   990                           ; 2 bytes @ 0x0
   991                           
   992                           
   993                           ; 3 bytes @ 0x0
   994  0020                     	ds	2
   995  0022                     interrupt_I2C@send_data:	
   996                           
   997                           ; 1 bytes @ 0x2
   998  0022                     	ds	1
   999  0023                     ___ftmul@f2:	
  1000                           
  1001                           ; 3 bytes @ 0x3
  1002  0023                     	ds	2
  1003  0025                     current_conversion@current:	
  1004                           
  1005                           ; 2 bytes @ 0x5
  1006  0025                     	ds	1
  1007  0026                     ??___ftmul:	
  1008                           
  1009                           ; 0 bytes @ 0x6
  1010  0026                     	ds	4
  1011  002A                     ___ftmul@exp:	
  1012                           
  1013                           ; 1 bytes @ 0xA
  1014  002A                     	ds	1
  1015  002B                     ___ftmul@f3_as_product:	
  1016                           
  1017                           ; 3 bytes @ 0xB
  1018  002B                     	ds	3
  1019  002E                     ___ftmul@cntr:	
  1020                           
  1021                           ; 1 bytes @ 0xE
  1022  002E                     	ds	1
  1023  002F                     ___ftmul@sign:	
  1024                           
  1025                           ; 1 bytes @ 0xF
  1026  002F                     	ds	1
  1027  0030                     ?___fttol:	
  1028  0030                     ___fttol@f1:	
  1029                           ; 4 bytes @ 0x10
  1030                           
  1031                           
  1032                           ; 3 bytes @ 0x10
  1033  0030                     	ds	4
  1034  0034                     ??___fttol:	
  1035                           
  1036                           ; 0 bytes @ 0x14
  1037  0034                     	ds	4
  1038  0038                     ___fttol@sign1:	
  1039                           
  1040                           ; 1 bytes @ 0x18
  1041  0038                     	ds	1
  1042  0039                     ___fttol@lval:	
  1043                           
  1044                           ; 4 bytes @ 0x19
  1045  0039                     	ds	4
  1046  003D                     ___fttol@exp1:	
  1047                           
  1048                           ; 1 bytes @ 0x1D
  1049  003D                     	ds	1
  1050  003E                     ?_P_calc:	
  1051  003E                     ?_I_calc:	
  1052                           ; 2 bytes @ 0x1E
  1053                           
  1054  003E                     P_calc@res:	
  1055                           ; 2 bytes @ 0x1E
  1056                           
  1057  003E                     I_calc@res:	
  1058                           ; 2 bytes @ 0x1E
  1059                           
  1060                           
  1061                           ; 2 bytes @ 0x1E
  1062  003E                     	ds	2
  1063  0040                     ??_I_calc:	
  1064  0040                     P_calc@temp:	
  1065                           ; 0 bytes @ 0x20
  1066                           
  1067                           
  1068                           ; 2 bytes @ 0x20
  1069  0040                     	ds	1
  1070  0041                     I_calc@temp:	
  1071                           
  1072                           ; 2 bytes @ 0x21
  1073  0041                     	ds	2
  1074  0043                     _I_calc$143:	
  1075                           
  1076                           ; 2 bytes @ 0x23
  1077  0043                     	ds	2
  1078  0045                     _I_calc$144:	
  1079                           
  1080                           ; 2 bytes @ 0x25
  1081  0045                     	ds	2
  1082  0047                     ?_calc:	
  1083  0047                     calc@ref:	
  1084                           ; 0 bytes @ 0x27
  1085                           
  1086                           
  1087                           ; 2 bytes @ 0x27
  1088  0047                     	ds	2
  1089  0049                     calc@mes:	
  1090                           
  1091                           ; 2 bytes @ 0x29
  1092  0049                     	ds	2
  1093  004B                     calc@output:	
  1094                           
  1095                           ; 1 bytes @ 0x2B
  1096  004B                     	ds	1
  1097  004C                     ??_calc:	
  1098                           
  1099                           ; 0 bytes @ 0x2C
  1100  004C                     	ds	2
  1101  004E                     _calc$133:	
  1102                           
  1103                           ; 2 bytes @ 0x2E
  1104  004E                     	ds	2
  1105  0050                     _calc$134:	
  1106                           
  1107                           ; 2 bytes @ 0x30
  1108  0050                     	ds	2
  1109  0052                     _calc$135:	
  1110                           
  1111                           ; 2 bytes @ 0x32
  1112  0052                     	ds	2
  1113  0054                     calc@res:	
  1114                           
  1115                           ; 2 bytes @ 0x34
  1116  0054                     	ds	2
  1117  0056                     ??_interrupt_controller:	
  1118                           
  1119                           ; 0 bytes @ 0x36
  1120  0056                     	ds	1
  1121  0057                     interrupt_controller@volume:	
  1122                           
  1123                           ; 2 bytes @ 0x37
  1124  0057                     	ds	2
  1125  0059                     interrupt_controller@current:	
  1126                           
  1127                           ; 2 bytes @ 0x39
  1128  0059                     	ds	2
  1129  005B                     interrupt_controller@out:	
  1130                           
  1131                           ; 2 bytes @ 0x3B
  1132  005B                     	ds	2
  1133  005D                     ??_inter:	
  1134                           
  1135                           ; 0 bytes @ 0x3D
  1136  005D                     	ds	1
  1137                           
  1138                           	psect	maintext
  1139  0532                     __pmaintext:	
  1140 ;;
  1141 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1142 ;;
  1143 ;; *************** function _main *****************
  1144 ;; Defined at:
  1145 ;;		line 23 in file "main.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;  argc            2    6[BANK1 ] int 
  1148 ;;  argv            2    8[BANK1 ] PTR PTR unsigned char 
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;		None
  1151 ;; Return value:  Size  Location     Type
  1152 ;;                  2    6[BANK1 ] int 
  1153 ;; Registers used:
  1154 ;;		wreg, status,2, status,0, pclath, cstack
  1155 ;; Tracked objects:
  1156 ;;		On entry : 17F/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1160 ;;      Params:         0       0       4       0       0       0
  1161 ;;      Locals:         0       0       0       0       0       0
  1162 ;;      Temps:          0       0       0       0       0       0
  1163 ;;      Totals:         0       0       4       0       0       0
  1164 ;;Total ram usage:        4 bytes
  1165 ;; Hardware stack levels required when called:    9
  1166 ;; This function calls:
  1167 ;;		_init
  1168 ;;		_loop
  1169 ;; This function is called by:
  1170 ;;		Startup code after reset
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174                           
  1175                           ;psect for function _main
  1176  0532                     _main:	
  1177                           
  1178                           ;main.c: 24: init();
  1179                           
  1180                           ;incstack = 0
  1181                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1182  0532  3184  241B  3185   	fcall	_init
  1183  0535                     l1486:	
  1184                           ;main.c: 26: while(1) {
  1185                           
  1186                           
  1187                           ;main.c: 27: loop();
  1188  0535  3185  2539  3185   	fcall	_loop
  1189  0538  2D35               	goto	l1486
  1190  0539                     __end_of_main:	
  1191                           ;main.c: 28: }
  1192                           ;main.c: 30: return (0);
  1193                           ;	Return value of _main is never used
  1194                           
  1195                           
  1196                           	psect	text1
  1197  0539                     __ptext1:	
  1198 ;; *************** function _loop *****************
  1199 ;; Defined at:
  1200 ;;		line 48 in file "main.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;		None
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;		None
  1205 ;; Return value:  Size  Location     Type
  1206 ;;		None               void
  1207 ;; Registers used:
  1208 ;;		None
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1214 ;;      Params:         0       0       0       0       0       0
  1215 ;;      Locals:         0       0       0       0       0       0
  1216 ;;      Temps:          0       0       0       0       0       0
  1217 ;;      Totals:         0       0       0       0       0       0
  1218 ;;Total ram usage:        0 bytes
  1219 ;; Hardware stack levels used:    1
  1220 ;; Hardware stack levels required when called:    6
  1221 ;; This function calls:
  1222 ;;		Nothing
  1223 ;; This function is called by:
  1224 ;;		_main
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227                           
  1228                           
  1229                           ;psect for function _loop
  1230  0539                     _loop:	
  1231                           
  1232                           ;incstack = 0
  1233                           ; Regs used in _loop: []
  1234  0539  0008               	return
  1235  053A                     __end_of_loop:	
  1236                           
  1237                           	psect	text2
  1238  041B                     __ptext2:	
  1239 ;; *************** function _init *****************
  1240 ;; Defined at:
  1241 ;;		line 33 in file "main.c"
  1242 ;; Parameters:    Size  Location     Type
  1243 ;;		None
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;  i               1    5[BANK1 ] unsigned char 
  1246 ;; Return value:  Size  Location     Type
  1247 ;;		None               void
  1248 ;; Registers used:
  1249 ;;		wreg, status,2, status,0, pclath, cstack
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1255 ;;      Params:         0       0       0       0       0       0
  1256 ;;      Locals:         0       0       1       0       0       0
  1257 ;;      Temps:          0       0       1       0       0       0
  1258 ;;      Totals:         0       0       2       0       0       0
  1259 ;;Total ram usage:        2 bytes
  1260 ;; Hardware stack levels used:    1
  1261 ;; Hardware stack levels required when called:    8
  1262 ;; This function calls:
  1263 ;;		_init_I2C_master
  1264 ;;		_init_PWM
  1265 ;;		_init_adcon
  1266 ;; This function is called by:
  1267 ;;		_main
  1268 ;; This function uses a non-reentrant model
  1269 ;;
  1270                           
  1271                           
  1272                           ;psect for function _init
  1273  041B                     _init:	
  1274                           
  1275                           ;main.c: 34: OSCCON = 0b01111010;
  1276                           
  1277                           ;incstack = 0
  1278                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  1279  041B  307A               	movlw	122
  1280  041C  0021               	movlb	1	; select bank1
  1281  041D  0099               	movwf	25	;volatile
  1282                           
  1283                           ;main.c: 35: TRISA = 0x03;
  1284  041E  3003               	movlw	3
  1285  041F  008C               	movwf	12	;volatile
  1286                           
  1287                           ;main.c: 36: TRISB = 0x00;
  1288  0420  018D               	clrf	13	;volatile
  1289                           
  1290                           ;main.c: 37: PORTA = 0x00;
  1291  0421  0020               	movlb	0	; select bank0
  1292  0422  018C               	clrf	12	;volatile
  1293                           
  1294                           ;main.c: 38: PORTB = 0x00;
  1295  0423  018D               	clrf	13	;volatile
  1296                           
  1297                           ;main.c: 39: for(unsigned char i = 0; i < 100; i++){}
  1298  0424  0021               	movlb	1	; select bank1
  1299  0425  01A5               	clrf	init@i^(0+128)
  1300  0426  3064               	movlw	100
  1301  0427  0225               	subwf	init@i^(0+128),w
  1302  0428  1803               	btfsc	3,0
  1303  0429  2C32               	goto	l40
  1304  042A                     l1448:	
  1305  042A  3001               	movlw	1
  1306  042B  00A4               	movwf	??_init^(0+128)
  1307  042C  0824               	movf	??_init^(0+128),w
  1308  042D  07A5               	addwf	init@i^(0+128),f
  1309  042E  3064               	movlw	100
  1310  042F  0225               	subwf	init@i^(0+128),w
  1311  0430  1C03               	skipc
  1312  0431  2C2A               	goto	l1448
  1313  0432                     l40:	
  1314                           
  1315                           ;main.c: 40: GIE = 1;
  1316  0432  178B               	bsf	11,7	;volatile
  1317                           
  1318                           ;main.c: 41: PEIE = 1;
  1319  0433  170B               	bsf	11,6	;volatile
  1320                           
  1321                           ;main.c: 42: init_I2C_master();
  1322  0434  3184  24EF  3184   	fcall	_init_I2C_master
  1323                           
  1324                           ;main.c: 43: init_adcon(0x03,0x00);
  1325  0437  3003               	movlw	3
  1326  0438  0021               	movlb	1	; select bank1
  1327  0439  00A0               	movwf	init_adcon@anselA^(0+128)
  1328  043A  3000               	movlw	0
  1329  043B  00A1               	movwf	(init_adcon@anselA^(0+128)+1)
  1330  043C  3000               	movlw	0
  1331  043D  00A2               	movwf	init_adcon@anselB^(0+128)
  1332  043E  3000               	movlw	0
  1333  043F  00A3               	movwf	(init_adcon@anselB^(0+128)+1)
  1334  0440  3184  24FF  3184   	fcall	_init_adcon
  1335                           
  1336                           ;main.c: 44: init_PWM();
  1337  0443  3184  24CB         	fcall	_init_PWM
  1338                           
  1339                           ;main.c: 45: RB3 = 1;
  1340  0445  0020               	movlb	0	; select bank0
  1341  0446  158D               	bsf	13,3	;volatile
  1342  0447  0008               	return
  1343  0448                     __end_of_init:	
  1344                           
  1345                           	psect	text3
  1346  04FF                     __ptext3:	
  1347 ;; *************** function _init_adcon *****************
  1348 ;; Defined at:
  1349 ;;		line 25 in file "adcon.c"
  1350 ;; Parameters:    Size  Location     Type
  1351 ;;  anselA          2    0[BANK1 ] int 
  1352 ;;  anselB          2    2[BANK1 ] int 
  1353 ;; Auto vars:     Size  Location     Type
  1354 ;;		None
  1355 ;; Return value:  Size  Location     Type
  1356 ;;		None               void
  1357 ;; Registers used:
  1358 ;;		wreg
  1359 ;; Tracked objects:
  1360 ;;		On entry : 0/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1364 ;;      Params:         0       0       4       0       0       0
  1365 ;;      Locals:         0       0       0       0       0       0
  1366 ;;      Temps:          0       0       0       0       0       0
  1367 ;;      Totals:         0       0       4       0       0       0
  1368 ;;Total ram usage:        4 bytes
  1369 ;; Hardware stack levels used:    1
  1370 ;; Hardware stack levels required when called:    6
  1371 ;; This function calls:
  1372 ;;		Nothing
  1373 ;; This function is called by:
  1374 ;;		_init
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           
  1378                           
  1379                           ;psect for function _init_adcon
  1380  04FF                     _init_adcon:	
  1381                           
  1382                           ;adcon.c: 26: ANSELA = anselA;
  1383                           
  1384                           ;incstack = 0
  1385                           ; Regs used in _init_adcon: [wreg]
  1386  04FF  0021               	movlb	1	; select bank1
  1387  0500  0820               	movf	init_adcon@anselA^(0+128),w
  1388  0501  0023               	movlb	3	; select bank3
  1389  0502  008C               	movwf	12	;volatile
  1390                           
  1391                           ;adcon.c: 27: ANSELB = anselB;
  1392  0503  0021               	movlb	1	; select bank1
  1393  0504  0822               	movf	init_adcon@anselB^(0+128),w
  1394  0505  0023               	movlb	3	; select bank3
  1395  0506  008D               	movwf	13	;volatile
  1396                           
  1397                           ;adcon.c: 28: ADCON1 = 0b10010000;
  1398  0507  3090               	movlw	144
  1399  0508  0021               	movlb	1	; select bank1
  1400  0509  009E               	movwf	30	;volatile
  1401                           
  1402                           ;adcon.c: 29: ADCON0 = 0b00000001;
  1403  050A  3001               	movlw	1
  1404  050B  009D               	movwf	29	;volatile
  1405  050C  0008               	return
  1406  050D                     __end_of_init_adcon:	
  1407                           
  1408                           	psect	text4
  1409  04CB                     __ptext4:	
  1410 ;; *************** function _init_PWM *****************
  1411 ;; Defined at:
  1412 ;;		line 82 in file "controller.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;		None
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;		None
  1417 ;; Return value:  Size  Location     Type
  1418 ;;		None               void
  1419 ;; Registers used:
  1420 ;;		wreg, status,2
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1426 ;;      Params:         0       0       0       0       0       0
  1427 ;;      Locals:         0       0       0       0       0       0
  1428 ;;      Temps:          0       0       0       0       0       0
  1429 ;;      Totals:         0       0       0       0       0       0
  1430 ;;Total ram usage:        0 bytes
  1431 ;; Hardware stack levels used:    1
  1432 ;; Hardware stack levels required when called:    6
  1433 ;; This function calls:
  1434 ;;		Nothing
  1435 ;; This function is called by:
  1436 ;;		_init
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           
  1441                           ;psect for function _init_PWM
  1442  04CB                     _init_PWM:	
  1443                           
  1444                           ;controller.c: 83: CCPTMRS = 0b00000000;
  1445                           
  1446                           ;incstack = 0
  1447                           ; Regs used in _init_PWM: [wreg+status,2]
  1448  04CB  0025               	movlb	5	; select bank5
  1449  04CC  019E               	clrf	30	;volatile
  1450                           
  1451                           ;controller.c: 84: CCP3CON = 0b00001100;
  1452  04CD  300C               	movlw	12
  1453  04CE  0026               	movlb	6	; select bank6
  1454  04CF  0093               	movwf	19	;volatile
  1455                           
  1456                           ;controller.c: 85: T2CON = 0b00000000;
  1457  04D0  0020               	movlb	0	; select bank0
  1458  04D1  019C               	clrf	28	;volatile
  1459                           
  1460                           ;controller.c: 86: TMR2IE = 1;
  1461  04D2  0021               	movlb	1	; select bank1
  1462  04D3  1491               	bsf	17,1	;volatile
  1463                           
  1464                           ;controller.c: 87: PR2 = 255;
  1465  04D4  30FF               	movlw	255
  1466  04D5  0020               	movlb	0	; select bank0
  1467  04D6  009B               	movwf	27	;volatile
  1468                           
  1469                           ;controller.c: 88: CCPR3L = 0;
  1470  04D7  0026               	movlb	6	; select bank6
  1471  04D8  0191               	clrf	17	;volatile
  1472                           
  1473                           ;controller.c: 89: CCPR3H = 0;
  1474  04D9  0192               	clrf	18	;volatile
  1475                           
  1476                           ;controller.c: 90: TMR2 = 0;
  1477  04DA  0020               	movlb	0	; select bank0
  1478  04DB  019A               	clrf	26	;volatile
  1479                           
  1480                           ;controller.c: 91: TMR2ON = 1;
  1481  04DC  151C               	bsf	28,2	;volatile
  1482  04DD  0008               	return
  1483  04DE                     __end_of_init_PWM:	
  1484                           
  1485                           	psect	text5
  1486  04EF                     __ptext5:	
  1487 ;; *************** function _init_I2C_master *****************
  1488 ;; Defined at:
  1489 ;;		line 24 in file "I2C.c"
  1490 ;; Parameters:    Size  Location     Type
  1491 ;;		None
  1492 ;; Auto vars:     Size  Location     Type
  1493 ;;		None
  1494 ;; Return value:  Size  Location     Type
  1495 ;;		None               void
  1496 ;; Registers used:
  1497 ;;		wreg, status,2, status,0, pclath, cstack
  1498 ;; Tracked objects:
  1499 ;;		On entry : 0/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1503 ;;      Params:         0       0       0       0       0       0
  1504 ;;      Locals:         0       0       0       0       0       0
  1505 ;;      Temps:          0       0       0       0       0       0
  1506 ;;      Totals:         0       0       0       0       0       0
  1507 ;;Total ram usage:        0 bytes
  1508 ;; Hardware stack levels used:    1
  1509 ;; Hardware stack levels required when called:    7
  1510 ;; This function calls:
  1511 ;;		_init_Timer4
  1512 ;; This function is called by:
  1513 ;;		_init
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517                           
  1518                           ;psect for function _init_I2C_master
  1519  04EF                     _init_I2C_master:	
  1520                           
  1521                           ;I2C.c: 25: SSP1STAT = 0b10000000;
  1522                           
  1523                           ;incstack = 0
  1524                           ; Regs used in _init_I2C_master: [wreg+status,2+status,0+pclath+cstack]
  1525  04EF  3080               	movlw	128
  1526  04F0  0024               	movlb	4	; select bank4
  1527  04F1  0094               	movwf	20	;volatile
  1528                           
  1529                           ;I2C.c: 26: SSP1CON1 = 0b00101000;
  1530  04F2  3028               	movlw	40
  1531  04F3  0095               	movwf	21	;volatile
  1532                           
  1533                           ;I2C.c: 27: SSP1ADD = 0x27;
  1534  04F4  3027               	movlw	39
  1535  04F5  0092               	movwf	18	;volatile
  1536                           
  1537                           ;I2C.c: 28: SSP1IE = 1;
  1538  04F6  0021               	movlb	1	; select bank1
  1539  04F7  1591               	bsf	17,3	;volatile
  1540                           
  1541                           ;I2C.c: 29: BCL1IE = 1;
  1542  04F8  1592               	bsf	18,3	;volatile
  1543                           
  1544                           ;I2C.c: 30: SSP1IF = 0;
  1545  04F9  0020               	movlb	0	; select bank0
  1546  04FA  1191               	bcf	17,3	;volatile
  1547                           
  1548                           ;I2C.c: 31: BCL1IF = 0;
  1549  04FB  1192               	bcf	18,3	;volatile
  1550                           
  1551                           ;I2C.c: 33: init_Timer4();
  1552  04FC  3185  250D         	fcall	_init_Timer4
  1553  04FE  0008               	return
  1554  04FF                     __end_of_init_I2C_master:	
  1555                           
  1556                           	psect	text6
  1557  050D                     __ptext6:	
  1558 ;; *************** function _init_Timer4 *****************
  1559 ;; Defined at:
  1560 ;;		line 156 in file "I2C.c"
  1561 ;; Parameters:    Size  Location     Type
  1562 ;;		None
  1563 ;; Auto vars:     Size  Location     Type
  1564 ;;		None
  1565 ;; Return value:  Size  Location     Type
  1566 ;;		None               void
  1567 ;; Registers used:
  1568 ;;		wreg, status,2
  1569 ;; Tracked objects:
  1570 ;;		On entry : 0/0
  1571 ;;		On exit  : 0/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1574 ;;      Params:         0       0       0       0       0       0
  1575 ;;      Locals:         0       0       0       0       0       0
  1576 ;;      Temps:          0       0       0       0       0       0
  1577 ;;      Totals:         0       0       0       0       0       0
  1578 ;;Total ram usage:        0 bytes
  1579 ;; Hardware stack levels used:    1
  1580 ;; Hardware stack levels required when called:    6
  1581 ;; This function calls:
  1582 ;;		Nothing
  1583 ;; This function is called by:
  1584 ;;		_init_I2C_master
  1585 ;; This function uses a non-reentrant model
  1586 ;;
  1587                           
  1588                           
  1589                           ;psect for function _init_Timer4
  1590  050D                     _init_Timer4:	
  1591                           
  1592                           ;I2C.c: 157: T4CON = 0b00000010;
  1593                           
  1594                           ;incstack = 0
  1595                           ; Regs used in _init_Timer4: [wreg+status,2]
  1596  050D  3002               	movlw	2
  1597  050E  0028               	movlb	8	; select bank8
  1598  050F  0097               	movwf	23	;volatile
  1599                           
  1600                           ;I2C.c: 158: PR4 = 249;
  1601  0510  30F9               	movlw	249
  1602  0511  0096               	movwf	22	;volatile
  1603                           
  1604                           ;I2C.c: 159: TMR4IE = 1;
  1605  0512  0021               	movlb	1	; select bank1
  1606  0513  1493               	bsf	19,1	;volatile
  1607                           
  1608                           ;I2C.c: 160: TMR4 = 0;
  1609  0514  0028               	movlb	8	; select bank8
  1610  0515  0195               	clrf	21	;volatile
  1611                           
  1612                           ;I2C.c: 161: TMR4ON = 1;
  1613  0516  1517               	bsf	23,2	;volatile
  1614  0517  0008               	return
  1615  0518                     __end_of_init_Timer4:	
  1616                           
  1617                           	psect	intentry
  1618  0004                     __pintentry:	
  1619 ;; *************** function _inter *****************
  1620 ;; Defined at:
  1621 ;;		line 53 in file "main.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;		None
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;		None
  1626 ;; Return value:  Size  Location     Type
  1627 ;;		None               void
  1628 ;; Registers used:
  1629 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1635 ;;      Params:         0       0       0       0       0       0
  1636 ;;      Locals:         0       0       0       0       0       0
  1637 ;;      Temps:          0       1       0       0       0       0
  1638 ;;      Totals:         0       1       0       0       0       0
  1639 ;;Total ram usage:        1 bytes
  1640 ;; Hardware stack levels used:    1
  1641 ;; Hardware stack levels required when called:    5
  1642 ;; This function calls:
  1643 ;;		_interrupt_I2C
  1644 ;;		_interrupt_controller
  1645 ;; This function is called by:
  1646 ;;		Interrupt level 1
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650  0004                     _inter:	
  1651                           
  1652                           ;incstack = 0
  1653                           ; Regs used in _inter: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1654  0004  147E               	bsf	126,0	;set compiler interrupt flag
  1655  0005  3180               	pagesel	$
  1656  0006  0020               	movlb	0	; select bank0
  1657  0007  087F               	movf	127,w
  1658  0008  00DD               	movwf	??_inter
  1659                           
  1660                           ;main.c: 54: interrupt_controller();
  1661  0009  3182  22F3  3180   	fcall	_interrupt_controller
  1662                           
  1663                           ;main.c: 55: interrupt_I2C();
  1664  000C  3183  237F         	fcall	_interrupt_I2C
  1665  000E  0020               	movlb	0	; select bank0
  1666  000F  085D               	movf	??_inter,w
  1667  0010  00FF               	movwf	127
  1668  0011  107E               	bcf	126,0	;clear compiler interrupt flag
  1669  0012  0009               	retfie
  1670  0013                     __end_of_inter:	
  1671                           
  1672                           	psect	text8
  1673  02F3                     __ptext8:	
  1674 ;; *************** function _interrupt_controller *****************
  1675 ;; Defined at:
  1676 ;;		line 67 in file "controller.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;		None
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;  out             2   59[BANK0 ] int 
  1681 ;;  current         2   57[BANK0 ] int 
  1682 ;;  volume          2   55[BANK0 ] int 
  1683 ;; Return value:  Size  Location     Type
  1684 ;;		None               void
  1685 ;; Registers used:
  1686 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1692 ;;      Params:         0       0       0       0       0       0
  1693 ;;      Locals:         0       6       0       0       0       0
  1694 ;;      Temps:          0       1       0       0       0       0
  1695 ;;      Totals:         0       7       0       0       0       0
  1696 ;;Total ram usage:        7 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; Hardware stack levels required when called:    4
  1699 ;; This function calls:
  1700 ;;		_calc
  1701 ;;		_current_conversion
  1702 ;;		_measure
  1703 ;;		_output
  1704 ;;		_set_current_limit
  1705 ;; This function is called by:
  1706 ;;		_inter
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710                           
  1711                           ;psect for function _interrupt_controller
  1712  02F3                     _interrupt_controller:	
  1713                           
  1714                           ;controller.c: 68: if(TMR2IF == 1) {
  1715                           
  1716                           ;incstack = 0
  1717                           ; Regs used in _interrupt_controller: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1718  02F3  0020               	movlb	0	; select bank0
  1719  02F4  1C91               	btfss	17,1	;volatile
  1720  02F5  0008               	return
  1721                           
  1722                           ;controller.c: 69: int current;
  1723                           ;controller.c: 70: int volume;
  1724                           ;controller.c: 71: int out;
  1725                           ;controller.c: 72: measure(&current, 0b00000101);
  1726  02F6  3005               	movlw	5
  1727  02F7  00FB               	movwf	measure@pin_select
  1728  02F8  3000               	movlw	0
  1729  02F9  00FC               	movwf	measure@pin_select+1
  1730  02FA  3059               	movlw	interrupt_controller@current& (0+255)
  1731  02FB  3184  24DE  3182   	fcall	_measure
  1732                           
  1733                           ;controller.c: 73: measure(&volume, 0b00000001);
  1734  02FE  3001               	movlw	1
  1735  02FF  00FB               	movwf	measure@pin_select
  1736  0300  3000               	movlw	0
  1737  0301  00FC               	movwf	measure@pin_select+1
  1738  0302  3057               	movlw	interrupt_controller@volume& (0+255)
  1739  0303  3184  24DE  3182   	fcall	_measure
  1740                           
  1741                           ;controller.c: 74: current = current_conversion(current);
  1742  0306  0020               	movlb	0	; select bank0
  1743  0307  085A               	movf	interrupt_controller@current+1,w
  1744  0308  01FD               	clrf	current_conversion@measured_value+1
  1745  0309  07FD               	addwf	current_conversion@measured_value+1,f
  1746  030A  0859               	movf	interrupt_controller@current,w
  1747  030B  01FC               	clrf	current_conversion@measured_value
  1748  030C  07FC               	addwf	current_conversion@measured_value,f
  1749  030D  3182  229A  3182   	fcall	_current_conversion
  1750  0310  087D               	movf	?_current_conversion+1,w
  1751  0311  0020               	movlb	0	; select bank0
  1752  0312  01DA               	clrf	interrupt_controller@current+1
  1753  0313  07DA               	addwf	interrupt_controller@current+1,f
  1754  0314  087C               	movf	?_current_conversion,w
  1755  0315  01D9               	clrf	interrupt_controller@current
  1756  0316  07D9               	addwf	interrupt_controller@current,f
  1757                           
  1758                           ;controller.c: 75: set_current_limit(volume);
  1759  0317  0858               	movf	interrupt_controller@volume+1,w
  1760  0318  01F1               	clrf	set_current_limit@current_limit+1
  1761  0319  07F1               	addwf	set_current_limit@current_limit+1,f
  1762  031A  0857               	movf	interrupt_controller@volume,w
  1763  031B  01F0               	clrf	set_current_limit@current_limit
  1764  031C  07F0               	addwf	set_current_limit@current_limit,f
  1765  031D  3185  2522  3182   	fcall	_set_current_limit
  1766                           
  1767                           ;controller.c: 76: calc(current,volume,&out);
  1768  0320  0020               	movlb	0	; select bank0
  1769  0321  085A               	movf	interrupt_controller@current+1,w
  1770  0322  01C8               	clrf	calc@ref+1
  1771  0323  07C8               	addwf	calc@ref+1,f
  1772  0324  0859               	movf	interrupt_controller@current,w
  1773  0325  01C7               	clrf	calc@ref
  1774  0326  07C7               	addwf	calc@ref,f
  1775  0327  0858               	movf	interrupt_controller@volume+1,w
  1776  0328  01CA               	clrf	calc@mes+1
  1777  0329  07CA               	addwf	calc@mes+1,f
  1778  032A  0857               	movf	interrupt_controller@volume,w
  1779  032B  01C9               	clrf	calc@mes
  1780  032C  07C9               	addwf	calc@mes,f
  1781  032D  305B               	movlw	interrupt_controller@out& (0+255)
  1782  032E  00D6               	movwf	??_interrupt_controller
  1783  032F  0856               	movf	??_interrupt_controller,w
  1784  0330  00CB               	movwf	calc@output
  1785  0331  3181  215D  3182   	fcall	_calc
  1786                           
  1787                           ;controller.c: 77: output(out);
  1788  0334  0020               	movlb	0	; select bank0
  1789  0335  085C               	movf	interrupt_controller@out+1,w
  1790  0336  01F1               	clrf	output@out+1
  1791  0337  07F1               	addwf	output@out+1,f
  1792  0338  085B               	movf	interrupt_controller@out,w
  1793  0339  01F0               	clrf	output@out
  1794  033A  07F0               	addwf	output@out,f
  1795  033B  3184  24B4         	fcall	_output
  1796                           
  1797                           ;controller.c: 78: TMR2IF = 0;
  1798  033D  0020               	movlb	0	; select bank0
  1799  033E  1091               	bcf	17,1	;volatile
  1800  033F  0008               	return
  1801  0340                     __end_of_interrupt_controller:	
  1802                           
  1803                           	psect	text9
  1804  0522                     __ptext9:	
  1805 ;; *************** function _set_current_limit *****************
  1806 ;; Defined at:
  1807 ;;		line 109 in file "controller.c"
  1808 ;; Parameters:    Size  Location     Type
  1809 ;;  current_limi    2    0[COMMON] int 
  1810 ;; Auto vars:     Size  Location     Type
  1811 ;;		None
  1812 ;; Return value:  Size  Location     Type
  1813 ;;		None               void
  1814 ;; Registers used:
  1815 ;;		wreg, status,2, status,0
  1816 ;; Tracked objects:
  1817 ;;		On entry : 0/0
  1818 ;;		On exit  : 0/0
  1819 ;;		Unchanged: 0/0
  1820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1821 ;;      Params:         2       0       0       0       0       0
  1822 ;;      Locals:         0       0       0       0       0       0
  1823 ;;      Temps:          0       0       0       0       0       0
  1824 ;;      Totals:         2       0       0       0       0       0
  1825 ;;Total ram usage:        2 bytes
  1826 ;; Hardware stack levels used:    1
  1827 ;; This function calls:
  1828 ;;		Nothing
  1829 ;; This function is called by:
  1830 ;;		_interrupt_controller
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834                           
  1835                           ;psect for function _set_current_limit
  1836  0522                     _set_current_limit:	
  1837                           
  1838                           ;controller.c: 110: controller_current_limit = current_limit;
  1839                           
  1840                           ;incstack = 0
  1841                           ; Regs used in _set_current_limit: [wreg+status,2+status,0]
  1842  0522  0871               	movf	set_current_limit@current_limit+1,w
  1843  0523  0020               	movlb	0	; select bank0
  1844  0524  01E3               	clrf	_controller_current_limit+1
  1845  0525  07E3               	addwf	_controller_current_limit+1,f
  1846  0526  0870               	movf	set_current_limit@current_limit,w
  1847  0527  01E2               	clrf	_controller_current_limit
  1848  0528  07E2               	addwf	_controller_current_limit,f
  1849  0529  0008               	return
  1850  052A                     __end_of_set_current_limit:	
  1851                           
  1852                           	psect	text10
  1853  04B4                     __ptext10:	
  1854 ;; *************** function _output *****************
  1855 ;; Defined at:
  1856 ;;		line 61 in file "controller.c"
  1857 ;; Parameters:    Size  Location     Type
  1858 ;;  out             2    0[COMMON] int 
  1859 ;; Auto vars:     Size  Location     Type
  1860 ;;		None
  1861 ;; Return value:  Size  Location     Type
  1862 ;;		None               void
  1863 ;; Registers used:
  1864 ;;		wreg, status,2, status,0
  1865 ;; Tracked objects:
  1866 ;;		On entry : 0/0
  1867 ;;		On exit  : 0/0
  1868 ;;		Unchanged: 0/0
  1869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1870 ;;      Params:         2       0       0       0       0       0
  1871 ;;      Locals:         0       0       0       0       0       0
  1872 ;;      Temps:          2       0       0       0       0       0
  1873 ;;      Totals:         4       0       0       0       0       0
  1874 ;;Total ram usage:        4 bytes
  1875 ;; Hardware stack levels used:    1
  1876 ;; This function calls:
  1877 ;;		Nothing
  1878 ;; This function is called by:
  1879 ;;		_interrupt_controller
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883                           
  1884                           ;psect for function _output
  1885  04B4                     _output:	
  1886                           
  1887                           ;controller.c: 62: CCPR3L = out >> 2;
  1888                           
  1889                           ;incstack = 0
  1890                           ; Regs used in _output: [wreg+status,2+status,0]
  1891  04B4  0871               	movf	output@out+1,w
  1892  04B5  00F3               	movwf	??_output+1
  1893  04B6  0870               	movf	output@out,w
  1894  04B7  00F2               	movwf	??_output
  1895  04B8  0D73               	rlf	??_output+1,w
  1896  04B9  0CF3               	rrf	??_output+1,f
  1897  04BA  0CF2               	rrf	??_output,f
  1898  04BB  0D73               	rlf	??_output+1,w
  1899  04BC  0CF3               	rrf	??_output+1,f
  1900  04BD  0CF2               	rrf	??_output,f
  1901  04BE  0872               	movf	??_output,w
  1902  04BF  0026               	movlb	6	; select bank6
  1903  04C0  0091               	movwf	17	;volatile
  1904                           
  1905                           ;controller.c: 63: CCP3CONbits.DC3B = out & 0x03;
  1906  04C1  0870               	movf	output@out,w
  1907  04C2  3903               	andlw	3
  1908  04C3  00F2               	movwf	??_output
  1909  04C4  0EF2               	swapf	??_output,f
  1910  04C5  0813               	movf	19,w	;volatile
  1911  04C6  0672               	xorwf	??_output,w
  1912  04C7  39CF               	andlw	-49
  1913  04C8  0672               	xorwf	??_output,w
  1914  04C9  0093               	movwf	19	;volatile
  1915  04CA  0008               	return
  1916  04CB                     __end_of_output:	
  1917                           
  1918                           	psect	text11
  1919  04DE                     __ptext11:	
  1920 ;; *************** function _measure *****************
  1921 ;; Defined at:
  1922 ;;		line 17 in file "controller.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;  value           1    wreg     PTR int 
  1925 ;;		 -> interrupt_controller@volume(2), interrupt_controller@current(2), 
  1926 ;;  pin_select      2   11[COMMON] int 
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;  value           1   13[COMMON] PTR int 
  1929 ;;		 -> interrupt_controller@volume(2), interrupt_controller@current(2), 
  1930 ;; Return value:  Size  Location     Type
  1931 ;;		None               void
  1932 ;; Registers used:
  1933 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1934 ;; Tracked objects:
  1935 ;;		On entry : 0/0
  1936 ;;		On exit  : 0/0
  1937 ;;		Unchanged: 0/0
  1938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1939 ;;      Params:         2       0       0       0       0       0
  1940 ;;      Locals:         1       0       0       0       0       0
  1941 ;;      Temps:          0       0       0       0       0       0
  1942 ;;      Totals:         3       0       0       0       0       0
  1943 ;;Total ram usage:        3 bytes
  1944 ;; Hardware stack levels used:    1
  1945 ;; Hardware stack levels required when called:    1
  1946 ;; This function calls:
  1947 ;;		_adconv
  1948 ;; This function is called by:
  1949 ;;		_interrupt_controller
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           
  1953                           
  1954                           ;psect for function _measure
  1955  04DE                     _measure:	
  1956                           
  1957                           ;incstack = 0
  1958                           ; Regs used in _measure: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1959                           ;measure@value stored from wreg
  1960  04DE  00FD               	movwf	measure@value
  1961                           
  1962                           ;controller.c: 18: *value = adconv(pin_select);
  1963  04DF  087C               	movf	measure@pin_select+1,w
  1964  04E0  01F1               	clrf	adconv@pin_select+1
  1965  04E1  07F1               	addwf	adconv@pin_select+1,f
  1966  04E2  087B               	movf	measure@pin_select,w
  1967  04E3  01F0               	clrf	adconv@pin_select
  1968  04E4  07F0               	addwf	adconv@pin_select,f
  1969  04E5  3184  2448         	fcall	_adconv
  1970  04E7  087D               	movf	measure@value,w
  1971  04E8  0086               	movwf	6
  1972  04E9  0187               	clrf	7
  1973  04EA  0870               	movf	?_adconv,w
  1974  04EB  3FC0               	movwi [0]fsr1
  1975  04EC  0871               	movf	?_adconv+1,w
  1976  04ED  3FC1               	movwi [1]fsr1
  1977  04EE  0008               	return
  1978  04EF                     __end_of_measure:	
  1979                           
  1980                           	psect	text12
  1981  0448                     __ptext12:	
  1982 ;; *************** function _adconv *****************
  1983 ;; Defined at:
  1984 ;;		line 13 in file "adcon.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;  pin_select      2    0[COMMON] int 
  1987 ;; Auto vars:     Size  Location     Type
  1988 ;;  temp            2    9[COMMON] int 
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  2    0[COMMON] int 
  1991 ;; Registers used:
  1992 ;;		wreg, status,2, status,0
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1998 ;;      Params:         2       0       0       0       0       0
  1999 ;;      Locals:         2       0       0       0       0       0
  2000 ;;      Temps:          7       0       0       0       0       0
  2001 ;;      Totals:        11       0       0       0       0       0
  2002 ;;Total ram usage:       11 bytes
  2003 ;; Hardware stack levels used:    1
  2004 ;; This function calls:
  2005 ;;		Nothing
  2006 ;; This function is called by:
  2007 ;;		_measure
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011                           
  2012                           ;psect for function _adconv
  2013  0448                     _adconv:	
  2014                           
  2015                           ;adcon.c: 14: int temp;
  2016                           ;adcon.c: 16: ADCON0 = pin_select;
  2017                           
  2018                           ;incstack = 0
  2019                           ; Regs used in _adconv: [wreg+status,2+status,0]
  2020  0448  0870               	movf	adconv@pin_select,w
  2021  0449  0021               	movlb	1	; select bank1
  2022  044A  009D               	movwf	29	;volatile
  2023                           
  2024                           ;adcon.c: 17: _delay((unsigned long)((1)*(16000000/4000000.0)));
  2025  044B  3200               	nop2	;2 cycle nop
  2026  044C  3200               	nop2	;2 cycle nop
  2027                           
  2028                           ;adcon.c: 18: GO_nDONE = 1;
  2029  044D  0021               	movlb	1	; select bank1
  2030  044E  149D               	bsf	29,1	;volatile
  2031  044F                     i1l162:	
  2032                           ;adcon.c: 19: while(GO_nDONE);
  2033                           
  2034  044F  189D               	btfsc	29,1	;volatile
  2035  0450  2C4F               	goto	i1l162
  2036                           
  2037                           ;adcon.c: 20: temp = ADRESH;
  2038  0451  081C               	movf	28,w	;volatile
  2039  0452  00F2               	movwf	??_adconv
  2040  0453  01F3               	clrf	??_adconv+1
  2041  0454  0872               	movf	??_adconv,w
  2042  0455  00F9               	movwf	adconv@temp
  2043  0456  0873               	movf	??_adconv+1,w
  2044  0457  00FA               	movwf	adconv@temp+1
  2045                           
  2046                           ;adcon.c: 21: temp = (temp << 8) | ADRESL;
  2047  0458  081B               	movf	27,w	;volatile
  2048  0459  00F2               	movwf	??_adconv
  2049  045A  01F3               	clrf	??_adconv+1
  2050  045B  087A               	movf	adconv@temp+1,w
  2051  045C  00F5               	movwf	??_adconv+3
  2052  045D  0879               	movf	adconv@temp,w
  2053  045E  00F4               	movwf	??_adconv+2
  2054  045F  0874               	movf	??_adconv+2,w
  2055  0460  00F5               	movwf	??_adconv+3
  2056  0461  01F4               	clrf	??_adconv+2
  2057  0462  0872               	movf	??_adconv,w
  2058  0463  0474               	iorwf	??_adconv+2,w
  2059  0464  00F7               	movwf	??_adconv+5
  2060  0465  0873               	movf	??_adconv+1,w
  2061  0466  0475               	iorwf	??_adconv+3,w
  2062  0467  00F8               	movwf	??_adconv+6
  2063  0468  0877               	movf	??_adconv+5,w
  2064  0469  00F9               	movwf	adconv@temp
  2065  046A  0878               	movf	??_adconv+6,w
  2066  046B  00FA               	movwf	adconv@temp+1
  2067                           
  2068                           ;adcon.c: 22: return temp;
  2069  046C  087A               	movf	adconv@temp+1,w
  2070  046D  01F1               	clrf	?_adconv+1
  2071  046E  07F1               	addwf	?_adconv+1,f
  2072  046F  0879               	movf	adconv@temp,w
  2073  0470  01F0               	clrf	?_adconv
  2074  0471  07F0               	addwf	?_adconv,f
  2075  0472  0008               	return
  2076  0473                     __end_of_adconv:	
  2077                           
  2078                           	psect	text13
  2079  029A                     __ptext13:	
  2080 ;; *************** function _current_conversion *****************
  2081 ;; Defined at:
  2082 ;;		line 99 in file "controller.c"
  2083 ;; Parameters:    Size  Location     Type
  2084 ;;  measured_val    2   12[COMMON] int 
  2085 ;; Auto vars:     Size  Location     Type
  2086 ;;  current         2    5[BANK0 ] int 
  2087 ;; Return value:  Size  Location     Type
  2088 ;;                  2   12[COMMON] int 
  2089 ;; Registers used:
  2090 ;;		wreg, status,2, status,0, pclath, cstack
  2091 ;; Tracked objects:
  2092 ;;		On entry : 0/0
  2093 ;;		On exit  : 0/0
  2094 ;;		Unchanged: 0/0
  2095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2096 ;;      Params:         2       0       0       0       0       0
  2097 ;;      Locals:         0       2       0       0       0       0
  2098 ;;      Temps:          0       5       0       0       0       0
  2099 ;;      Totals:         2       7       0       0       0       0
  2100 ;;Total ram usage:        9 bytes
  2101 ;; Hardware stack levels used:    1
  2102 ;; Hardware stack levels required when called:    1
  2103 ;; This function calls:
  2104 ;;		___lmul
  2105 ;; This function is called by:
  2106 ;;		_interrupt_controller
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110                           
  2111                           ;psect for function _current_conversion
  2112  029A                     _current_conversion:	
  2113                           
  2114                           ;controller.c: 104: int current = (((long) (measured_value - 0x0200)) * ((long) 1000) * 
      +                          ((long) 20)) >> 10;
  2115                           
  2116                           ;incstack = 0
  2117                           ; Regs used in _current_conversion: [wreg+status,2+status,0+pclath+cstack]
  2118  029A  087C               	movf	current_conversion@measured_value,w
  2119  029B  3E00               	addlw	0
  2120  029C  00F0               	movwf	___lmul@multiplier
  2121  029D  30FE               	movlw	254
  2122  029E  3D7D               	addwfc	current_conversion@measured_value+1,w
  2123  029F  00F1               	movwf	___lmul@multiplier+1
  2124  02A0  01F2               	clrf	___lmul@multiplier+2
  2125  02A1  1BF1               	btfsc	___lmul@multiplier+1,7
  2126  02A2  03F2               	decf	___lmul@multiplier+2,f
  2127  02A3  0872               	movf	___lmul@multiplier+2,w
  2128  02A4  00F3               	movwf	___lmul@multiplier+3
  2129  02A5  3000               	movlw	0
  2130  02A6  00F7               	movwf	___lmul@multiplicand+3
  2131  02A7  3000               	movlw	0
  2132  02A8  00F6               	movwf	___lmul@multiplicand+2
  2133  02A9  304E               	movlw	78
  2134  02AA  00F5               	movwf	___lmul@multiplicand+1
  2135  02AB  3020               	movlw	32
  2136  02AC  00F4               	movwf	___lmul@multiplicand
  2137  02AD  3183  23EC  3182   	fcall	___lmul
  2138  02B0  0870               	movf	?___lmul,w
  2139  02B1  0020               	movlb	0	; select bank0
  2140  02B2  00A0               	movwf	??_current_conversion
  2141  02B3  0871               	movf	?___lmul+1,w
  2142  02B4  00A1               	movwf	??_current_conversion+1
  2143  02B5  0872               	movf	?___lmul+2,w
  2144  02B6  00A2               	movwf	??_current_conversion+2
  2145  02B7  0873               	movf	?___lmul+3,w
  2146  02B8  00A3               	movwf	??_current_conversion+3
  2147  02B9  300A               	movlw	10
  2148  02BA  00A4               	movwf	??_current_conversion+4
  2149  02BB                     u111_25:	
  2150  02BB  37A3               	asrf	??_current_conversion+3,f
  2151  02BC  0CA2               	rrf	??_current_conversion+2,f
  2152  02BD  0CA1               	rrf	??_current_conversion+1,f
  2153  02BE  0CA0               	rrf	??_current_conversion,f
  2154  02BF  0BA4               	decfsz	??_current_conversion+4,f
  2155  02C0  2ABB               	goto	u111_25
  2156  02C1  0821               	movf	??_current_conversion+1,w
  2157  02C2  01A6               	clrf	current_conversion@current+1
  2158  02C3  07A6               	addwf	current_conversion@current+1,f
  2159  02C4  0820               	movf	??_current_conversion,w
  2160  02C5  01A5               	clrf	current_conversion@current
  2161  02C6  07A5               	addwf	current_conversion@current,f
  2162                           
  2163                           ;controller.c: 106: return ((((long) current) * ((long) 12000)) >> 10);
  2164  02C7  0825               	movf	current_conversion@current,w
  2165  02C8  00F0               	movwf	___lmul@multiplier
  2166  02C9  0826               	movf	current_conversion@current+1,w
  2167  02CA  00F1               	movwf	___lmul@multiplier+1
  2168  02CB  0D89               	rlf	9,f
  2169  02CC  3B89               	subwfb	9,f
  2170  02CD  0989               	comf	9,f
  2171  02CE  00F2               	movwf	___lmul@multiplier+2
  2172  02CF  00F3               	movwf	___lmul@multiplier+3
  2173  02D0  3000               	movlw	0
  2174  02D1  00F7               	movwf	___lmul@multiplicand+3
  2175  02D2  3000               	movlw	0
  2176  02D3  00F6               	movwf	___lmul@multiplicand+2
  2177  02D4  302E               	movlw	46
  2178  02D5  00F5               	movwf	___lmul@multiplicand+1
  2179  02D6  30E0               	movlw	224
  2180  02D7  00F4               	movwf	___lmul@multiplicand
  2181  02D8  3183  23EC  3182   	fcall	___lmul
  2182  02DB  0870               	movf	?___lmul,w
  2183  02DC  0020               	movlb	0	; select bank0
  2184  02DD  00A0               	movwf	??_current_conversion
  2185  02DE  0871               	movf	?___lmul+1,w
  2186  02DF  00A1               	movwf	??_current_conversion+1
  2187  02E0  0872               	movf	?___lmul+2,w
  2188  02E1  00A2               	movwf	??_current_conversion+2
  2189  02E2  0873               	movf	?___lmul+3,w
  2190  02E3  00A3               	movwf	??_current_conversion+3
  2191  02E4  300A               	movlw	10
  2192  02E5  00A4               	movwf	??_current_conversion+4
  2193  02E6                     u112_25:	
  2194  02E6  37A3               	asrf	??_current_conversion+3,f
  2195  02E7  0CA2               	rrf	??_current_conversion+2,f
  2196  02E8  0CA1               	rrf	??_current_conversion+1,f
  2197  02E9  0CA0               	rrf	??_current_conversion,f
  2198  02EA  0BA4               	decfsz	??_current_conversion+4,f
  2199  02EB  2AE6               	goto	u112_25
  2200  02EC  0821               	movf	??_current_conversion+1,w
  2201  02ED  01FD               	clrf	?_current_conversion+1
  2202  02EE  07FD               	addwf	?_current_conversion+1,f
  2203  02EF  0820               	movf	??_current_conversion,w
  2204  02F0  01FC               	clrf	?_current_conversion
  2205  02F1  07FC               	addwf	?_current_conversion,f
  2206  02F2  0008               	return
  2207  02F3                     __end_of_current_conversion:	
  2208                           
  2209                           	psect	text14
  2210  03EC                     __ptext14:	
  2211 ;; *************** function ___lmul *****************
  2212 ;; Defined at:
  2213 ;;		line 15 in file "C:\isaka\application\compiler\xc\xc8\sources\common\Umul32.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;  multiplier      4    0[COMMON] unsigned long 
  2216 ;;  multiplicand    4    4[COMMON] unsigned long 
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;  product         4    8[COMMON] unsigned long 
  2219 ;; Return value:  Size  Location     Type
  2220 ;;                  4    0[COMMON] unsigned long 
  2221 ;; Registers used:
  2222 ;;		wreg, status,2, status,0
  2223 ;; Tracked objects:
  2224 ;;		On entry : 0/0
  2225 ;;		On exit  : 0/0
  2226 ;;		Unchanged: 0/0
  2227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2228 ;;      Params:         8       0       0       0       0       0
  2229 ;;      Locals:         4       0       0       0       0       0
  2230 ;;      Temps:          0       0       0       0       0       0
  2231 ;;      Totals:        12       0       0       0       0       0
  2232 ;;Total ram usage:       12 bytes
  2233 ;; Hardware stack levels used:    1
  2234 ;; This function calls:
  2235 ;;		Nothing
  2236 ;; This function is called by:
  2237 ;;		_current_conversion
  2238 ;; This function uses a non-reentrant model
  2239 ;;
  2240                           
  2241                           
  2242                           ;psect for function ___lmul
  2243  03EC                     ___lmul:	
  2244                           
  2245                           ;incstack = 0
  2246                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2247  03EC  3000               	movlw	0
  2248  03ED  00FB               	movwf	___lmul@product+3
  2249  03EE  3000               	movlw	0
  2250  03EF  00FA               	movwf	___lmul@product+2
  2251  03F0  3000               	movlw	0
  2252  03F1  00F9               	movwf	___lmul@product+1
  2253  03F2  3000               	movlw	0
  2254  03F3  00F8               	movwf	___lmul@product
  2255  03F4                     i1l1322:	
  2256  03F4  1C70               	btfss	___lmul@multiplier,0
  2257  03F5  2BFE               	goto	i1l1326
  2258  03F6  0874               	movf	___lmul@multiplicand,w
  2259  03F7  07F8               	addwf	___lmul@product,f
  2260  03F8  0875               	movf	___lmul@multiplicand+1,w
  2261  03F9  3DF9               	addwfc	___lmul@product+1,f
  2262  03FA  0876               	movf	___lmul@multiplicand+2,w
  2263  03FB  3DFA               	addwfc	___lmul@product+2,f
  2264  03FC  0877               	movf	___lmul@multiplicand+3,w
  2265  03FD  3DFB               	addwfc	___lmul@product+3,f
  2266  03FE                     i1l1326:	
  2267  03FE  3001               	movlw	1
  2268  03FF                     u105_25:	
  2269  03FF  35F4               	lslf	___lmul@multiplicand,f
  2270  0400  0DF5               	rlf	___lmul@multiplicand+1,f
  2271  0401  0DF6               	rlf	___lmul@multiplicand+2,f
  2272  0402  0DF7               	rlf	___lmul@multiplicand+3,f
  2273  0403  0B89               	decfsz	9,f
  2274  0404  2BFF               	goto	u105_25
  2275  0405  3001               	movlw	1
  2276  0406                     u106_25:	
  2277  0406  36F3               	lsrf	___lmul@multiplier+3,f
  2278  0407  0CF2               	rrf	___lmul@multiplier+2,f
  2279  0408  0CF1               	rrf	___lmul@multiplier+1,f
  2280  0409  0CF0               	rrf	___lmul@multiplier,f
  2281  040A  0B89               	decfsz	9,f
  2282  040B  2C06               	goto	u106_25
  2283  040C  0873               	movf	___lmul@multiplier+3,w
  2284  040D  0472               	iorwf	___lmul@multiplier+2,w
  2285  040E  0471               	iorwf	___lmul@multiplier+1,w
  2286  040F  0470               	iorwf	___lmul@multiplier,w
  2287  0410  1D03               	skipz
  2288  0411  2BF4               	goto	i1l1322
  2289  0412  087B               	movf	___lmul@product+3,w
  2290  0413  00F3               	movwf	?___lmul+3
  2291  0414  087A               	movf	___lmul@product+2,w
  2292  0415  00F2               	movwf	?___lmul+2
  2293  0416  0879               	movf	___lmul@product+1,w
  2294  0417  00F1               	movwf	?___lmul+1
  2295  0418  0878               	movf	___lmul@product,w
  2296  0419  00F0               	movwf	?___lmul
  2297  041A  0008               	return
  2298  041B                     __end_of___lmul:	
  2299                           
  2300                           	psect	text15
  2301  015D                     __ptext15:	
  2302 ;; *************** function _calc *****************
  2303 ;; Defined at:
  2304 ;;		line 22 in file "controller.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;  ref             2   39[BANK0 ] int 
  2307 ;;  mes             2   41[BANK0 ] int 
  2308 ;;  output          1   43[BANK0 ] PTR int 
  2309 ;;		 -> interrupt_controller@out(2), 
  2310 ;; Auto vars:     Size  Location     Type
  2311 ;;  res             2   52[BANK0 ] int 
  2312 ;; Return value:  Size  Location     Type
  2313 ;;		None               void
  2314 ;; Registers used:
  2315 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2316 ;; Tracked objects:
  2317 ;;		On entry : 0/0
  2318 ;;		On exit  : 0/0
  2319 ;;		Unchanged: 0/0
  2320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2321 ;;      Params:         0       5       0       0       0       0
  2322 ;;      Locals:         0       8       0       0       0       0
  2323 ;;      Temps:          0       2       0       0       0       0
  2324 ;;      Totals:         0      15       0       0       0       0
  2325 ;;Total ram usage:       15 bytes
  2326 ;; Hardware stack levels used:    1
  2327 ;; Hardware stack levels required when called:    3
  2328 ;; This function calls:
  2329 ;;		_I_calc
  2330 ;;		_P_calc
  2331 ;; This function is called by:
  2332 ;;		_interrupt_controller
  2333 ;; This function uses a non-reentrant model
  2334 ;;
  2335                           
  2336                           
  2337                           ;psect for function _calc
  2338  015D                     _calc:	
  2339                           
  2340                           ;controller.c: 23: int res;
  2341                           ;controller.c: 25: *output = 0;
  2342                           
  2343                           ;incstack = 0
  2344                           ; Regs used in _calc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2345  015D  0020               	movlb	0	; select bank0
  2346  015E  084B               	movf	calc@output,w
  2347  015F  0086               	movwf	6
  2348  0160  0187               	clrf	7
  2349  0161  3000               	movlw	0
  2350  0162  3FC0               	movwi [0]fsr1
  2351  0163  3FC1               	movwi [1]fsr1
  2352                           
  2353                           ;controller.c: 26: res = ref - mes;
  2354  0164  0949               	comf	calc@mes,w
  2355  0165  00CC               	movwf	??_calc
  2356  0166  094A               	comf	calc@mes+1,w
  2357  0167  00CD               	movwf	??_calc+1
  2358  0168  0ACC               	incf	??_calc,f
  2359  0169  1903               	skipnz
  2360  016A  0ACD               	incf	??_calc+1,f
  2361  016B  0847               	movf	calc@ref,w
  2362  016C  074C               	addwf	??_calc,w
  2363  016D  00D4               	movwf	calc@res
  2364  016E  0848               	movf	calc@ref+1,w
  2365  016F  3D4D               	addwfc	??_calc+1,w
  2366  0170  00D5               	movwf	calc@res+1
  2367                           
  2368                           ;controller.c: 27: *output += P_calc(res);
  2369  0171  0855               	movf	calc@res+1,w
  2370  0172  01BF               	clrf	P_calc@res+1
  2371  0173  07BF               	addwf	P_calc@res+1,f
  2372  0174  0854               	movf	calc@res,w
  2373  0175  01BE               	clrf	P_calc@res
  2374  0176  07BE               	addwf	P_calc@res,f
  2375  0177  3183  23BB  3181   	fcall	_P_calc
  2376  017A  0020               	movlb	0	; select bank0
  2377  017B  084B               	movf	calc@output,w
  2378  017C  0086               	movwf	6
  2379  017D  0187               	clrf	7
  2380  017E  083E               	movf	?_P_calc,w
  2381  017F  0781               	addwf	1,f
  2382  0180  3141               	addfsr 1,1
  2383  0181  083F               	movf	?_P_calc+1,w
  2384  0182  3D81               	addwfc	1,f
  2385  0183  317F               	addfsr 1,-1
  2386                           
  2387                           ;controller.c: 28: *output += I_calc(res);
  2388  0184  0855               	movf	calc@res+1,w
  2389  0185  01BF               	clrf	I_calc@res+1
  2390  0186  07BF               	addwf	I_calc@res+1,f
  2391  0187  0854               	movf	calc@res,w
  2392  0188  01BE               	clrf	I_calc@res
  2393  0189  07BE               	addwf	I_calc@res,f
  2394  018A  3181  21D7  3181   	fcall	_I_calc
  2395  018D  0020               	movlb	0	; select bank0
  2396  018E  084B               	movf	calc@output,w
  2397  018F  0086               	movwf	6
  2398  0190  0187               	clrf	7
  2399  0191  083E               	movf	?_I_calc,w
  2400  0192  0781               	addwf	1,f
  2401  0193  3141               	addfsr 1,1
  2402  0194  083F               	movf	?_I_calc+1,w
  2403  0195  3D81               	addwfc	1,f
  2404  0196  317F               	addfsr 1,-1
  2405                           
  2406                           ;controller.c: 30: *output = ((((*output>=0) ? (*output) : (0))<=1023) ? (((*output>=0) 
      +                          ? (*output) : (0))) : (1023));
  2407  0197  084B               	movf	calc@output,w
  2408  0198  0086               	movwf	6
  2409  0199  0187               	clrf	7
  2410  019A  3141               	addfsr 1,1
  2411  019B  1F81               	btfss	1,7
  2412  019C  29A0               	goto	i1l1378
  2413  019D  01D0               	clrf	_calc$134
  2414  019E  01D1               	clrf	_calc$134+1
  2415  019F  29A7               	goto	i1l1380
  2416  01A0                     i1l1378:	
  2417  01A0  084B               	movf	calc@output,w
  2418  01A1  0086               	movwf	6
  2419  01A2  0187               	clrf	7
  2420  01A3  3F40               	moviw [0]fsr1
  2421  01A4  00D0               	movwf	_calc$134
  2422  01A5  3F41               	moviw [1]fsr1
  2423  01A6  00D1               	movwf	_calc$134+1
  2424  01A7                     i1l1380:	
  2425  01A7  0851               	movf	_calc$134+1,w
  2426  01A8  3A80               	xorlw	128
  2427  01A9  00CC               	movwf	??_calc
  2428  01AA  3084               	movlw	132
  2429  01AB  024C               	subwf	??_calc,w
  2430  01AC  1D03               	skipz
  2431  01AD  29B0               	goto	u109_25
  2432  01AE  3000               	movlw	0
  2433  01AF  0250               	subwf	_calc$134,w
  2434  01B0                     u109_25:	
  2435  01B0  1C03               	skipc
  2436  01B1  29B8               	goto	i1l1384
  2437  01B2  30FF               	movlw	255
  2438  01B3  0020               	movlb	0	; select bank0
  2439  01B4  00CE               	movwf	_calc$133
  2440  01B5  3003               	movlw	3
  2441  01B6  00CF               	movwf	_calc$133+1
  2442  01B7  29CF               	goto	i1l1392
  2443  01B8                     i1l1384:	
  2444  01B8  0020               	movlb	0	; select bank0
  2445  01B9  084B               	movf	calc@output,w
  2446  01BA  0086               	movwf	6
  2447  01BB  0187               	clrf	7
  2448  01BC  3141               	addfsr 1,1
  2449  01BD  1F81               	btfss	1,7
  2450  01BE  29C2               	goto	i1l1388
  2451  01BF  01D2               	clrf	_calc$135
  2452  01C0  01D3               	clrf	_calc$135+1
  2453  01C1  29C9               	goto	i1l1390
  2454  01C2                     i1l1388:	
  2455  01C2  084B               	movf	calc@output,w
  2456  01C3  0086               	movwf	6
  2457  01C4  0187               	clrf	7
  2458  01C5  3F40               	moviw [0]fsr1
  2459  01C6  00D2               	movwf	_calc$135
  2460  01C7  3F41               	moviw [1]fsr1
  2461  01C8  00D3               	movwf	_calc$135+1
  2462  01C9                     i1l1390:	
  2463  01C9  0853               	movf	_calc$135+1,w
  2464  01CA  01CF               	clrf	_calc$133+1
  2465  01CB  07CF               	addwf	_calc$133+1,f
  2466  01CC  0852               	movf	_calc$135,w
  2467  01CD  01CE               	clrf	_calc$133
  2468  01CE  07CE               	addwf	_calc$133,f
  2469  01CF                     i1l1392:	
  2470  01CF  084B               	movf	calc@output,w
  2471  01D0  0086               	movwf	6
  2472  01D1  0187               	clrf	7
  2473  01D2  084E               	movf	_calc$133,w
  2474  01D3  3FC0               	movwi [0]fsr1
  2475  01D4  084F               	movf	_calc$133+1,w
  2476  01D5  3FC1               	movwi [1]fsr1
  2477  01D6  0008               	return
  2478  01D7                     __end_of_calc:	
  2479                           
  2480                           	psect	text16
  2481  03BB                     __ptext16:	
  2482 ;; *************** function _P_calc *****************
  2483 ;; Defined at:
  2484 ;;		line 34 in file "controller.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;  res             2   30[BANK0 ] int 
  2487 ;; Auto vars:     Size  Location     Type
  2488 ;;  temp            2   32[BANK0 ] int 
  2489 ;; Return value:  Size  Location     Type
  2490 ;;                  2   30[BANK0 ] int 
  2491 ;; Registers used:
  2492 ;;		wreg, status,2, status,0, pclath, cstack
  2493 ;; Tracked objects:
  2494 ;;		On entry : 0/0
  2495 ;;		On exit  : 0/0
  2496 ;;		Unchanged: 0/0
  2497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2498 ;;      Params:         0       2       0       0       0       0
  2499 ;;      Locals:         0       2       0       0       0       0
  2500 ;;      Temps:          0       0       0       0       0       0
  2501 ;;      Totals:         0       4       0       0       0       0
  2502 ;;Total ram usage:        4 bytes
  2503 ;; Hardware stack levels used:    1
  2504 ;; Hardware stack levels required when called:    2
  2505 ;; This function calls:
  2506 ;;		___awtoft
  2507 ;;		___ftmul
  2508 ;;		___fttol
  2509 ;; This function is called by:
  2510 ;;		_calc
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514                           
  2515                           ;psect for function _P_calc
  2516  03BB                     _P_calc:	
  2517                           
  2518                           ;controller.c: 35: int temp;
  2519                           ;controller.c: 37: temp = (int) (res * 1.0);
  2520                           
  2521                           ;incstack = 0
  2522                           ; Regs used in _P_calc: [wreg+status,2+status,0+pclath+cstack]
  2523  03BB  0020               	movlb	0	; select bank0
  2524  03BC  083F               	movf	P_calc@res+1,w
  2525  03BD  01F9               	clrf	___awtoft@c+1
  2526  03BE  07F9               	addwf	___awtoft@c+1,f
  2527  03BF  083E               	movf	P_calc@res,w
  2528  03C0  01F8               	clrf	___awtoft@c
  2529  03C1  07F8               	addwf	___awtoft@c,f
  2530  03C2  3184  2494  3183   	fcall	___awtoft
  2531  03C5  0878               	movf	?___awtoft,w
  2532  03C6  0020               	movlb	0	; select bank0
  2533  03C7  00A3               	movwf	___ftmul@f2
  2534  03C8  0879               	movf	?___awtoft+1,w
  2535  03C9  00A4               	movwf	___ftmul@f2+1
  2536  03CA  087A               	movf	?___awtoft+2,w
  2537  03CB  00A5               	movwf	___ftmul@f2+2
  2538  03CC  3000               	movlw	0
  2539  03CD  00A0               	movwf	___ftmul@f1
  2540  03CE  3080               	movlw	128
  2541  03CF  00A1               	movwf	___ftmul@f1+1
  2542  03D0  303F               	movlw	63
  2543  03D1  00A2               	movwf	___ftmul@f1+2
  2544  03D2  3180  2022  3183   	fcall	___ftmul
  2545  03D5  0020               	movlb	0	; select bank0
  2546  03D6  0820               	movf	?___ftmul,w
  2547  03D7  00B0               	movwf	___fttol@f1
  2548  03D8  0821               	movf	?___ftmul+1,w
  2549  03D9  00B1               	movwf	___fttol@f1+1
  2550  03DA  0822               	movf	?___ftmul+2,w
  2551  03DB  00B2               	movwf	___fttol@f1+2
  2552  03DC  3180  20D6         	fcall	___fttol
  2553  03DE  0020               	movlb	0	; select bank0
  2554  03DF  0831               	movf	?___fttol+1,w
  2555  03E0  01C1               	clrf	P_calc@temp+1
  2556  03E1  07C1               	addwf	P_calc@temp+1,f
  2557  03E2  0830               	movf	?___fttol,w
  2558  03E3  01C0               	clrf	P_calc@temp
  2559  03E4  07C0               	addwf	P_calc@temp,f
  2560                           
  2561                           ;controller.c: 38: return temp;
  2562  03E5  0841               	movf	P_calc@temp+1,w
  2563  03E6  01BF               	clrf	?_P_calc+1
  2564  03E7  07BF               	addwf	?_P_calc+1,f
  2565  03E8  0840               	movf	P_calc@temp,w
  2566  03E9  01BE               	clrf	?_P_calc
  2567  03EA  07BE               	addwf	?_P_calc,f
  2568  03EB  0008               	return
  2569  03EC                     __end_of_P_calc:	
  2570                           
  2571                           	psect	text17
  2572  01D7                     __ptext17:	
  2573 ;; *************** function _I_calc *****************
  2574 ;; Defined at:
  2575 ;;		line 41 in file "controller.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;  res             2   30[BANK0 ] int 
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;  temp            2   33[BANK0 ] int 
  2580 ;; Return value:  Size  Location     Type
  2581 ;;                  2   30[BANK0 ] int 
  2582 ;; Registers used:
  2583 ;;		wreg, status,2, status,0, pclath, cstack
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2589 ;;      Params:         0       2       0       0       0       0
  2590 ;;      Locals:         0       6       0       0       0       0
  2591 ;;      Temps:          0       1       0       0       0       0
  2592 ;;      Totals:         0       9       0       0       0       0
  2593 ;;Total ram usage:        9 bytes
  2594 ;; Hardware stack levels used:    1
  2595 ;; Hardware stack levels required when called:    2
  2596 ;; This function calls:
  2597 ;;		___awtoft
  2598 ;;		___ftmul
  2599 ;;		___fttol
  2600 ;; This function is called by:
  2601 ;;		_calc
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605                           
  2606                           ;psect for function _I_calc
  2607  01D7                     _I_calc:	
  2608                           
  2609                           ;controller.c: 42: int temp;
  2610                           ;controller.c: 43: static int sum = 0;
  2611                           ;controller.c: 45: sum += res;
  2612                           
  2613                           ;incstack = 0
  2614                           ; Regs used in _I_calc: [wreg+status,2+status,0+pclath+cstack]
  2615  01D7  0020               	movlb	0	; select bank0
  2616  01D8  083E               	movf	I_calc@res,w
  2617  01D9  07E0               	addwf	I_calc@sum,f
  2618  01DA  083F               	movf	I_calc@res+1,w
  2619  01DB  3DE1               	addwfc	I_calc@sum+1,f
  2620                           
  2621                           ;controller.c: 46: sum = ((((sum>=0) ? (sum) : (0))<=1023) ? (((sum>=0) ? (sum) : (0))) 
      +                          : (1023));
  2622  01DC  1FE1               	btfss	I_calc@sum+1,7
  2623  01DD  29E1               	goto	i1l1276
  2624  01DE  01C3               	clrf	_I_calc$143
  2625  01DF  01C4               	clrf	_I_calc$143+1
  2626  01E0  29E7               	goto	i1l1278
  2627  01E1                     i1l1276:	
  2628  01E1  0861               	movf	I_calc@sum+1,w
  2629  01E2  01C4               	clrf	_I_calc$143+1
  2630  01E3  07C4               	addwf	_I_calc$143+1,f
  2631  01E4  0860               	movf	I_calc@sum,w
  2632  01E5  01C3               	clrf	_I_calc$143
  2633  01E6  07C3               	addwf	_I_calc$143,f
  2634  01E7                     i1l1278:	
  2635  01E7  0844               	movf	_I_calc$143+1,w
  2636  01E8  3A80               	xorlw	128
  2637  01E9  00C0               	movwf	??_I_calc
  2638  01EA  3084               	movlw	132
  2639  01EB  0240               	subwf	??_I_calc,w
  2640  01EC  1D03               	skipz
  2641  01ED  29F0               	goto	u98_25
  2642  01EE  3000               	movlw	0
  2643  01EF  0243               	subwf	_I_calc$143,w
  2644  01F0                     u98_25:	
  2645  01F0  1C03               	skipc
  2646  01F1  29F8               	goto	i1l108
  2647  01F2  30FF               	movlw	255
  2648  01F3  0020               	movlb	0	; select bank0
  2649  01F4  00E0               	movwf	I_calc@sum
  2650  01F5  3003               	movlw	3
  2651  01F6  00E1               	movwf	I_calc@sum+1
  2652  01F7  2A0A               	goto	i1l1286
  2653  01F8                     i1l108:	
  2654  01F8  0020               	movlb	0	; select bank0
  2655  01F9  1FE1               	btfss	I_calc@sum+1,7
  2656  01FA  29FE               	goto	i1l1284
  2657  01FB  01C5               	clrf	_I_calc$144
  2658  01FC  01C6               	clrf	_I_calc$144+1
  2659  01FD  2A04               	goto	i1l118
  2660  01FE                     i1l1284:	
  2661  01FE  0861               	movf	I_calc@sum+1,w
  2662  01FF  01C6               	clrf	_I_calc$144+1
  2663  0200  07C6               	addwf	_I_calc$144+1,f
  2664  0201  0860               	movf	I_calc@sum,w
  2665  0202  01C5               	clrf	_I_calc$144
  2666  0203  07C5               	addwf	_I_calc$144,f
  2667  0204                     i1l118:	
  2668  0204  0846               	movf	_I_calc$144+1,w
  2669  0205  01E1               	clrf	I_calc@sum+1
  2670  0206  07E1               	addwf	I_calc@sum+1,f
  2671  0207  0845               	movf	_I_calc$144,w
  2672  0208  01E0               	clrf	I_calc@sum
  2673  0209  07E0               	addwf	I_calc@sum,f
  2674  020A                     i1l1286:	
  2675                           
  2676                           ;controller.c: 47: temp = (int) (sum * 0.01);
  2677  020A  0861               	movf	I_calc@sum+1,w
  2678  020B  01F9               	clrf	___awtoft@c+1
  2679  020C  07F9               	addwf	___awtoft@c+1,f
  2680  020D  0860               	movf	I_calc@sum,w
  2681  020E  01F8               	clrf	___awtoft@c
  2682  020F  07F8               	addwf	___awtoft@c,f
  2683  0210  3184  2494  3181   	fcall	___awtoft
  2684  0213  0878               	movf	?___awtoft,w
  2685  0214  0020               	movlb	0	; select bank0
  2686  0215  00A3               	movwf	___ftmul@f2
  2687  0216  0879               	movf	?___awtoft+1,w
  2688  0217  00A4               	movwf	___ftmul@f2+1
  2689  0218  087A               	movf	?___awtoft+2,w
  2690  0219  00A5               	movwf	___ftmul@f2+2
  2691  021A  30D7               	movlw	215
  2692  021B  00A0               	movwf	___ftmul@f1
  2693  021C  3023               	movlw	35
  2694  021D  00A1               	movwf	___ftmul@f1+1
  2695  021E  303C               	movlw	60
  2696  021F  00A2               	movwf	___ftmul@f1+2
  2697  0220  3180  2022  3181   	fcall	___ftmul
  2698  0223  0020               	movlb	0	; select bank0
  2699  0224  0820               	movf	?___ftmul,w
  2700  0225  00B0               	movwf	___fttol@f1
  2701  0226  0821               	movf	?___ftmul+1,w
  2702  0227  00B1               	movwf	___fttol@f1+1
  2703  0228  0822               	movf	?___ftmul+2,w
  2704  0229  00B2               	movwf	___fttol@f1+2
  2705  022A  3180  20D6         	fcall	___fttol
  2706  022C  0020               	movlb	0	; select bank0
  2707  022D  0831               	movf	?___fttol+1,w
  2708  022E  01C2               	clrf	I_calc@temp+1
  2709  022F  07C2               	addwf	I_calc@temp+1,f
  2710  0230  0830               	movf	?___fttol,w
  2711  0231  01C1               	clrf	I_calc@temp
  2712  0232  07C1               	addwf	I_calc@temp,f
  2713                           
  2714                           ;controller.c: 48: return temp;
  2715  0233  0842               	movf	I_calc@temp+1,w
  2716  0234  01BF               	clrf	?_I_calc+1
  2717  0235  07BF               	addwf	?_I_calc+1,f
  2718  0236  0841               	movf	I_calc@temp,w
  2719  0237  01BE               	clrf	?_I_calc
  2720  0238  07BE               	addwf	?_I_calc,f
  2721  0239  0008               	return
  2722  023A                     __end_of_I_calc:	
  2723                           
  2724                           	psect	text18
  2725  00D6                     __ptext18:	
  2726 ;; *************** function ___fttol *****************
  2727 ;; Defined at:
  2728 ;;		line 44 in file "C:\isaka\application\compiler\xc\xc8\sources\common\fttol.c"
  2729 ;; Parameters:    Size  Location     Type
  2730 ;;  f1              3   16[BANK0 ] float 
  2731 ;; Auto vars:     Size  Location     Type
  2732 ;;  lval            4   25[BANK0 ] unsigned long 
  2733 ;;  exp1            1   29[BANK0 ] unsigned char 
  2734 ;;  sign1           1   24[BANK0 ] unsigned char 
  2735 ;; Return value:  Size  Location     Type
  2736 ;;                  4   16[BANK0 ] long 
  2737 ;; Registers used:
  2738 ;;		wreg, status,2, status,0
  2739 ;; Tracked objects:
  2740 ;;		On entry : 0/0
  2741 ;;		On exit  : 0/0
  2742 ;;		Unchanged: 0/0
  2743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2744 ;;      Params:         0       4       0       0       0       0
  2745 ;;      Locals:         0       6       0       0       0       0
  2746 ;;      Temps:          0       4       0       0       0       0
  2747 ;;      Totals:         0      14       0       0       0       0
  2748 ;;Total ram usage:       14 bytes
  2749 ;; Hardware stack levels used:    1
  2750 ;; This function calls:
  2751 ;;		Nothing
  2752 ;; This function is called by:
  2753 ;;		_P_calc
  2754 ;;		_I_calc
  2755 ;;		_D_calc
  2756 ;; This function uses a non-reentrant model
  2757 ;;
  2758                           
  2759                           
  2760                           ;psect for function ___fttol
  2761  00D6                     ___fttol:	
  2762                           
  2763                           ;incstack = 0
  2764                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2765  00D6  0020               	movlb	0	; select bank0
  2766  00D7  0830               	movf	___fttol@f1,w
  2767  00D8  00B4               	movwf	??___fttol
  2768  00D9  0831               	movf	___fttol@f1+1,w
  2769  00DA  00B5               	movwf	??___fttol+1
  2770  00DB  0832               	movf	___fttol@f1+2,w
  2771  00DC  00B6               	movwf	??___fttol+2
  2772  00DD  1003               	clrc
  2773  00DE  0D35               	rlf	??___fttol+1,w
  2774  00DF  0D36               	rlf	??___fttol+2,w
  2775  00E0  00B7               	movwf	??___fttol+3
  2776  00E1  0837               	movf	??___fttol+3,w
  2777  00E2  00BD               	movwf	___fttol@exp1
  2778  00E3  08BD               	movf	___fttol@exp1,f
  2779  00E4  1D03               	skipz
  2780  00E5  28EF               	goto	i1l1214
  2781  00E6  3000               	movlw	0
  2782  00E7  00B3               	movwf	?___fttol+3
  2783  00E8  3000               	movlw	0
  2784  00E9  00B2               	movwf	?___fttol+2
  2785  00EA  3000               	movlw	0
  2786  00EB  00B1               	movwf	?___fttol+1
  2787  00EC  3000               	movlw	0
  2788  00ED  00B0               	movwf	?___fttol
  2789  00EE  0008               	return
  2790  00EF                     i1l1214:	
  2791  00EF  0830               	movf	___fttol@f1,w
  2792  00F0  00B4               	movwf	??___fttol
  2793  00F1  0831               	movf	___fttol@f1+1,w
  2794  00F2  00B5               	movwf	??___fttol+1
  2795  00F3  0832               	movf	___fttol@f1+2,w
  2796  00F4  00B6               	movwf	??___fttol+2
  2797  00F5  3017               	movlw	23
  2798  00F6                     u87_25:	
  2799  00F6  36B6               	lsrf	??___fttol+2,f
  2800  00F7  0CB5               	rrf	??___fttol+1,f
  2801  00F8  0CB4               	rrf	??___fttol,f
  2802  00F9  0B89               	decfsz	9,f
  2803  00FA  28F6               	goto	u87_25
  2804  00FB  0834               	movf	??___fttol,w
  2805  00FC  00B7               	movwf	??___fttol+3
  2806  00FD  0837               	movf	??___fttol+3,w
  2807  00FE  00B8               	movwf	___fttol@sign1
  2808  00FF  17B1               	bsf	___fttol@f1+1,7
  2809  0100  30FF               	movlw	255
  2810  0101  05B0               	andwf	___fttol@f1,f
  2811  0102  30FF               	movlw	255
  2812  0103  05B1               	andwf	___fttol@f1+1,f
  2813  0104  3000               	movlw	0
  2814  0105  05B2               	andwf	___fttol@f1+2,f
  2815  0106  0830               	movf	___fttol@f1,w
  2816  0107  00B9               	movwf	___fttol@lval
  2817  0108  0831               	movf	___fttol@f1+1,w
  2818  0109  00BA               	movwf	___fttol@lval+1
  2819  010A  0832               	movf	___fttol@f1+2,w
  2820  010B  00BB               	movwf	___fttol@lval+2
  2821  010C  01BC               	clrf	___fttol@lval+3
  2822  010D  308E               	movlw	142
  2823  010E  02BD               	subwf	___fttol@exp1,f
  2824  010F  1FBD               	btfss	___fttol@exp1,7
  2825  0110  292D               	goto	i1l1234
  2826  0111  083D               	movf	___fttol@exp1,w
  2827  0112  3A80               	xorlw	128
  2828  0113  3E8F               	addlw	143
  2829  0114  1803               	skipnc
  2830  0115  291F               	goto	i1l1232
  2831  0116  3000               	movlw	0
  2832  0117  00B3               	movwf	?___fttol+3
  2833  0118  3000               	movlw	0
  2834  0119  00B2               	movwf	?___fttol+2
  2835  011A  3000               	movlw	0
  2836  011B  00B1               	movwf	?___fttol+1
  2837  011C  3000               	movlw	0
  2838  011D  00B0               	movwf	?___fttol
  2839  011E  0008               	return
  2840  011F                     i1l1232:	
  2841  011F  3001               	movlw	1
  2842  0120                     u90_25:	
  2843  0120  36BC               	lsrf	___fttol@lval+3,f
  2844  0121  0CBB               	rrf	___fttol@lval+2,f
  2845  0122  0CBA               	rrf	___fttol@lval+1,f
  2846  0123  0CB9               	rrf	___fttol@lval,f
  2847  0124  0B89               	decfsz	9,f
  2848  0125  2920               	goto	u90_25
  2849  0126  3001               	movlw	1
  2850  0127  00B4               	movwf	??___fttol
  2851  0128  0834               	movf	??___fttol,w
  2852  0129  07BD               	addwf	___fttol@exp1,f
  2853  012A  1903               	btfsc	3,2
  2854  012B  2946               	goto	i1l1244
  2855  012C  291F               	goto	i1l1232
  2856  012D                     i1l1234:	
  2857  012D  3018               	movlw	24
  2858  012E  023D               	subwf	___fttol@exp1,w
  2859  012F  1C03               	skipc
  2860  0130  2943               	goto	i1l1242
  2861  0131  3000               	movlw	0
  2862  0132  00B3               	movwf	?___fttol+3
  2863  0133  3000               	movlw	0
  2864  0134  00B2               	movwf	?___fttol+2
  2865  0135  3000               	movlw	0
  2866  0136  00B1               	movwf	?___fttol+1
  2867  0137  3000               	movlw	0
  2868  0138  00B0               	movwf	?___fttol
  2869  0139  0008               	return
  2870  013A                     i1l1240:	
  2871  013A  3001               	movlw	1
  2872  013B                     u93_25:	
  2873  013B  35B9               	lslf	___fttol@lval,f
  2874  013C  0DBA               	rlf	___fttol@lval+1,f
  2875  013D  0DBB               	rlf	___fttol@lval+2,f
  2876  013E  0DBC               	rlf	___fttol@lval+3,f
  2877  013F  0B89               	decfsz	9,f
  2878  0140  293B               	goto	u93_25
  2879  0141  3001               	movlw	1
  2880  0142  02BD               	subwf	___fttol@exp1,f
  2881  0143                     i1l1242:	
  2882  0143  08BD               	movf	___fttol@exp1,f
  2883  0144  1D03               	skipz
  2884  0145  293A               	goto	i1l1240
  2885  0146                     i1l1244:	
  2886  0146  0838               	movf	___fttol@sign1,w
  2887  0147  1903               	btfsc	3,2
  2888  0148  2954               	goto	i1l1248
  2889  0149  09B9               	comf	___fttol@lval,f
  2890  014A  09BA               	comf	___fttol@lval+1,f
  2891  014B  09BB               	comf	___fttol@lval+2,f
  2892  014C  09BC               	comf	___fttol@lval+3,f
  2893  014D  0AB9               	incf	___fttol@lval,f
  2894  014E  1903               	skipnz
  2895  014F  0ABA               	incf	___fttol@lval+1,f
  2896  0150  1903               	skipnz
  2897  0151  0ABB               	incf	___fttol@lval+2,f
  2898  0152  1903               	skipnz
  2899  0153  0ABC               	incf	___fttol@lval+3,f
  2900  0154                     i1l1248:	
  2901  0154  083C               	movf	___fttol@lval+3,w
  2902  0155  00B3               	movwf	?___fttol+3
  2903  0156  083B               	movf	___fttol@lval+2,w
  2904  0157  00B2               	movwf	?___fttol+2
  2905  0158  083A               	movf	___fttol@lval+1,w
  2906  0159  00B1               	movwf	?___fttol+1
  2907  015A  0839               	movf	___fttol@lval,w
  2908  015B  00B0               	movwf	?___fttol
  2909  015C  0008               	return
  2910  015D                     __end_of___fttol:	
  2911                           
  2912                           	psect	text19
  2913  0022                     __ptext19:	
  2914 ;; *************** function ___ftmul *****************
  2915 ;; Defined at:
  2916 ;;		line 62 in file "C:\isaka\application\compiler\xc\xc8\sources\common\ftmul.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;  f1              3    0[BANK0 ] float 
  2919 ;;  f2              3    3[BANK0 ] float 
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  2922 ;;  sign            1   15[BANK0 ] unsigned char 
  2923 ;;  cntr            1   14[BANK0 ] unsigned char 
  2924 ;;  exp             1   10[BANK0 ] unsigned char 
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  3    0[BANK0 ] float 
  2927 ;; Registers used:
  2928 ;;		wreg, status,2, status,0, pclath, cstack
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2934 ;;      Params:         0       6       0       0       0       0
  2935 ;;      Locals:         0       6       0       0       0       0
  2936 ;;      Temps:          0       4       0       0       0       0
  2937 ;;      Totals:         0      16       0       0       0       0
  2938 ;;Total ram usage:       16 bytes
  2939 ;; Hardware stack levels used:    1
  2940 ;; Hardware stack levels required when called:    1
  2941 ;; This function calls:
  2942 ;;		___ftpack
  2943 ;; This function is called by:
  2944 ;;		_P_calc
  2945 ;;		_I_calc
  2946 ;;		_D_calc
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           
  2951                           ;psect for function ___ftmul
  2952  0022                     ___ftmul:	
  2953                           
  2954                           ;incstack = 0
  2955                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2956  0022  0020               	movlb	0	; select bank0
  2957  0023  0820               	movf	___ftmul@f1,w
  2958  0024  00A6               	movwf	??___ftmul
  2959  0025  0821               	movf	___ftmul@f1+1,w
  2960  0026  00A7               	movwf	??___ftmul+1
  2961  0027  0822               	movf	___ftmul@f1+2,w
  2962  0028  00A8               	movwf	??___ftmul+2
  2963  0029  1003               	clrc
  2964  002A  0D27               	rlf	??___ftmul+1,w
  2965  002B  0D28               	rlf	??___ftmul+2,w
  2966  002C  00A9               	movwf	??___ftmul+3
  2967  002D  0829               	movf	??___ftmul+3,w
  2968  002E  00AA               	movwf	___ftmul@exp
  2969  002F  08AA               	movf	___ftmul@exp,f
  2970  0030  1D03               	skipz
  2971  0031  2839               	goto	i1l1164
  2972  0032  3000               	movlw	0
  2973  0033  00A0               	movwf	?___ftmul
  2974  0034  3000               	movlw	0
  2975  0035  00A1               	movwf	?___ftmul+1
  2976  0036  3000               	movlw	0
  2977  0037  00A2               	movwf	?___ftmul+2
  2978  0038  0008               	return
  2979  0039                     i1l1164:	
  2980  0039  0823               	movf	___ftmul@f2,w
  2981  003A  00A6               	movwf	??___ftmul
  2982  003B  0824               	movf	___ftmul@f2+1,w
  2983  003C  00A7               	movwf	??___ftmul+1
  2984  003D  0825               	movf	___ftmul@f2+2,w
  2985  003E  00A8               	movwf	??___ftmul+2
  2986  003F  1003               	clrc
  2987  0040  0D27               	rlf	??___ftmul+1,w
  2988  0041  0D28               	rlf	??___ftmul+2,w
  2989  0042  00A9               	movwf	??___ftmul+3
  2990  0043  0829               	movf	??___ftmul+3,w
  2991  0044  00AF               	movwf	___ftmul@sign
  2992  0045  08AF               	movf	___ftmul@sign,f
  2993  0046  1D03               	skipz
  2994  0047  284F               	goto	i1l1170
  2995  0048  3000               	movlw	0
  2996  0049  00A0               	movwf	?___ftmul
  2997  004A  3000               	movlw	0
  2998  004B  00A1               	movwf	?___ftmul+1
  2999  004C  3000               	movlw	0
  3000  004D  00A2               	movwf	?___ftmul+2
  3001  004E  0008               	return
  3002  004F                     i1l1170:	
  3003  004F  082F               	movf	___ftmul@sign,w
  3004  0050  3E7B               	addlw	123
  3005  0051  00A6               	movwf	??___ftmul
  3006  0052  0826               	movf	??___ftmul,w
  3007  0053  07AA               	addwf	___ftmul@exp,f
  3008  0054  0820               	movf	___ftmul@f1,w
  3009  0055  00A6               	movwf	??___ftmul
  3010  0056  0821               	movf	___ftmul@f1+1,w
  3011  0057  00A7               	movwf	??___ftmul+1
  3012  0058  0822               	movf	___ftmul@f1+2,w
  3013  0059  00A8               	movwf	??___ftmul+2
  3014  005A  3010               	movlw	16
  3015  005B                     u76_25:	
  3016  005B  36A8               	lsrf	??___ftmul+2,f
  3017  005C  0CA7               	rrf	??___ftmul+1,f
  3018  005D  0CA6               	rrf	??___ftmul,f
  3019  005E  0B89               	decfsz	9,f
  3020  005F  285B               	goto	u76_25
  3021  0060  0826               	movf	??___ftmul,w
  3022  0061  00A9               	movwf	??___ftmul+3
  3023  0062  0829               	movf	??___ftmul+3,w
  3024  0063  00AF               	movwf	___ftmul@sign
  3025  0064  0823               	movf	___ftmul@f2,w
  3026  0065  00A6               	movwf	??___ftmul
  3027  0066  0824               	movf	___ftmul@f2+1,w
  3028  0067  00A7               	movwf	??___ftmul+1
  3029  0068  0825               	movf	___ftmul@f2+2,w
  3030  0069  00A8               	movwf	??___ftmul+2
  3031  006A  3010               	movlw	16
  3032  006B                     u77_25:	
  3033  006B  36A8               	lsrf	??___ftmul+2,f
  3034  006C  0CA7               	rrf	??___ftmul+1,f
  3035  006D  0CA6               	rrf	??___ftmul,f
  3036  006E  0B89               	decfsz	9,f
  3037  006F  286B               	goto	u77_25
  3038  0070  0826               	movf	??___ftmul,w
  3039  0071  00A9               	movwf	??___ftmul+3
  3040  0072  0829               	movf	??___ftmul+3,w
  3041  0073  06AF               	xorwf	___ftmul@sign,f
  3042  0074  3080               	movlw	128
  3043  0075  00A6               	movwf	??___ftmul
  3044  0076  0826               	movf	??___ftmul,w
  3045  0077  05AF               	andwf	___ftmul@sign,f
  3046  0078  17A1               	bsf	___ftmul@f1+1,7
  3047  0079  17A4               	bsf	___ftmul@f2+1,7
  3048  007A  30FF               	movlw	255
  3049  007B  05A3               	andwf	___ftmul@f2,f
  3050  007C  30FF               	movlw	255
  3051  007D  05A4               	andwf	___ftmul@f2+1,f
  3052  007E  3000               	movlw	0
  3053  007F  05A5               	andwf	___ftmul@f2+2,f
  3054  0080  3000               	movlw	0
  3055  0081  00AB               	movwf	___ftmul@f3_as_product
  3056  0082  3000               	movlw	0
  3057  0083  00AC               	movwf	___ftmul@f3_as_product+1
  3058  0084  3000               	movlw	0
  3059  0085  00AD               	movwf	___ftmul@f3_as_product+2
  3060  0086  3007               	movlw	7
  3061  0087  00A6               	movwf	??___ftmul
  3062  0088  0826               	movf	??___ftmul,w
  3063  0089  00AE               	movwf	___ftmul@cntr
  3064  008A                     i1l1182:	
  3065  008A  1C20               	btfss	___ftmul@f1,0
  3066  008B  2892               	goto	i1l1186
  3067  008C  0823               	movf	___ftmul@f2,w
  3068  008D  07AB               	addwf	___ftmul@f3_as_product,f
  3069  008E  0824               	movf	___ftmul@f2+1,w
  3070  008F  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  3071  0090  0825               	movf	___ftmul@f2+2,w
  3072  0091  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  3073  0092                     i1l1186:	
  3074  0092  3001               	movlw	1
  3075  0093                     u79_25:	
  3076  0093  36A2               	lsrf	___ftmul@f1+2,f
  3077  0094  0CA1               	rrf	___ftmul@f1+1,f
  3078  0095  0CA0               	rrf	___ftmul@f1,f
  3079  0096  0B89               	decfsz	9,f
  3080  0097  2893               	goto	u79_25
  3081  0098  3001               	movlw	1
  3082  0099                     u80_25:	
  3083  0099  35A3               	lslf	___ftmul@f2,f
  3084  009A  0DA4               	rlf	___ftmul@f2+1,f
  3085  009B  0DA5               	rlf	___ftmul@f2+2,f
  3086  009C  0B89               	decfsz	9,f
  3087  009D  2899               	goto	u80_25
  3088  009E  3001               	movlw	1
  3089  009F  02AE               	subwf	___ftmul@cntr,f
  3090  00A0  1D03               	btfss	3,2
  3091  00A1  288A               	goto	i1l1182
  3092  00A2  3009               	movlw	9
  3093  00A3  00A6               	movwf	??___ftmul
  3094  00A4  0826               	movf	??___ftmul,w
  3095  00A5  00AE               	movwf	___ftmul@cntr
  3096  00A6                     i1l1194:	
  3097  00A6  1C20               	btfss	___ftmul@f1,0
  3098  00A7  28AE               	goto	i1l1198
  3099  00A8  0823               	movf	___ftmul@f2,w
  3100  00A9  07AB               	addwf	___ftmul@f3_as_product,f
  3101  00AA  0824               	movf	___ftmul@f2+1,w
  3102  00AB  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  3103  00AC  0825               	movf	___ftmul@f2+2,w
  3104  00AD  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  3105  00AE                     i1l1198:	
  3106  00AE  3001               	movlw	1
  3107  00AF                     u83_25:	
  3108  00AF  36A2               	lsrf	___ftmul@f1+2,f
  3109  00B0  0CA1               	rrf	___ftmul@f1+1,f
  3110  00B1  0CA0               	rrf	___ftmul@f1,f
  3111  00B2  0B89               	decfsz	9,f
  3112  00B3  28AF               	goto	u83_25
  3113  00B4  3001               	movlw	1
  3114  00B5                     u84_25:	
  3115  00B5  36AD               	lsrf	___ftmul@f3_as_product+2,f
  3116  00B6  0CAC               	rrf	___ftmul@f3_as_product+1,f
  3117  00B7  0CAB               	rrf	___ftmul@f3_as_product,f
  3118  00B8  0B89               	decfsz	9,f
  3119  00B9  28B5               	goto	u84_25
  3120  00BA  3001               	movlw	1
  3121  00BB  02AE               	subwf	___ftmul@cntr,f
  3122  00BC  1D03               	btfss	3,2
  3123  00BD  28A6               	goto	i1l1194
  3124  00BE  082B               	movf	___ftmul@f3_as_product,w
  3125  00BF  00F0               	movwf	___ftpack@arg
  3126  00C0  082C               	movf	___ftmul@f3_as_product+1,w
  3127  00C1  00F1               	movwf	___ftpack@arg+1
  3128  00C2  082D               	movf	___ftmul@f3_as_product+2,w
  3129  00C3  00F2               	movwf	___ftpack@arg+2
  3130  00C4  082A               	movf	___ftmul@exp,w
  3131  00C5  00A6               	movwf	??___ftmul
  3132  00C6  0826               	movf	??___ftmul,w
  3133  00C7  00F3               	movwf	___ftpack@exp
  3134  00C8  082F               	movf	___ftmul@sign,w
  3135  00C9  00A7               	movwf	??___ftmul+1
  3136  00CA  0827               	movf	??___ftmul+1,w
  3137  00CB  00F4               	movwf	___ftpack@sign
  3138  00CC  3182  223A         	fcall	___ftpack
  3139  00CE  0870               	movf	?___ftpack,w
  3140  00CF  0020               	movlb	0	; select bank0
  3141  00D0  00A0               	movwf	?___ftmul
  3142  00D1  0871               	movf	?___ftpack+1,w
  3143  00D2  00A1               	movwf	?___ftmul+1
  3144  00D3  0872               	movf	?___ftpack+2,w
  3145  00D4  00A2               	movwf	?___ftmul+2
  3146  00D5  0008               	return
  3147  00D6                     __end_of___ftmul:	
  3148                           
  3149                           	psect	text20
  3150  0494                     __ptext20:	
  3151 ;; *************** function ___awtoft *****************
  3152 ;; Defined at:
  3153 ;;		line 32 in file "C:\isaka\application\compiler\xc\xc8\sources\common\awtoft.c"
  3154 ;; Parameters:    Size  Location     Type
  3155 ;;  c               2    8[COMMON] int 
  3156 ;; Auto vars:     Size  Location     Type
  3157 ;;  sign            1   13[COMMON] unsigned char 
  3158 ;; Return value:  Size  Location     Type
  3159 ;;                  3    8[COMMON] float 
  3160 ;; Registers used:
  3161 ;;		wreg, status,2, status,0, pclath, cstack
  3162 ;; Tracked objects:
  3163 ;;		On entry : 0/0
  3164 ;;		On exit  : 0/0
  3165 ;;		Unchanged: 0/0
  3166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3167 ;;      Params:         3       0       0       0       0       0
  3168 ;;      Locals:         1       0       0       0       0       0
  3169 ;;      Temps:          2       0       0       0       0       0
  3170 ;;      Totals:         6       0       0       0       0       0
  3171 ;;Total ram usage:        6 bytes
  3172 ;; Hardware stack levels used:    1
  3173 ;; Hardware stack levels required when called:    1
  3174 ;; This function calls:
  3175 ;;		___ftpack
  3176 ;; This function is called by:
  3177 ;;		_P_calc
  3178 ;;		_I_calc
  3179 ;;		_D_calc
  3180 ;; This function uses a non-reentrant model
  3181 ;;
  3182                           
  3183                           
  3184                           ;psect for function ___awtoft
  3185  0494                     ___awtoft:	
  3186                           
  3187                           ;incstack = 0
  3188                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  3189  0494  01FD               	clrf	___awtoft@sign
  3190  0495  1FF9               	btfss	___awtoft@c+1,7
  3191  0496  2C9E               	goto	i1l1154
  3192  0497  09F8               	comf	___awtoft@c,f
  3193  0498  09F9               	comf	___awtoft@c+1,f
  3194  0499  0AF8               	incf	___awtoft@c,f
  3195  049A  1903               	skipnz
  3196  049B  0AF9               	incf	___awtoft@c+1,f
  3197  049C  01FD               	clrf	___awtoft@sign
  3198  049D  0AFD               	incf	___awtoft@sign,f
  3199  049E                     i1l1154:	
  3200  049E  0878               	movf	___awtoft@c,w
  3201  049F  00F0               	movwf	___ftpack@arg
  3202  04A0  0879               	movf	___awtoft@c+1,w
  3203  04A1  00F1               	movwf	___ftpack@arg+1
  3204  04A2  01F2               	clrf	___ftpack@arg+2
  3205  04A3  308E               	movlw	142
  3206  04A4  00FB               	movwf	??___awtoft
  3207  04A5  087B               	movf	??___awtoft,w
  3208  04A6  00F3               	movwf	___ftpack@exp
  3209  04A7  087D               	movf	___awtoft@sign,w
  3210  04A8  00FC               	movwf	??___awtoft+1
  3211  04A9  087C               	movf	??___awtoft+1,w
  3212  04AA  00F4               	movwf	___ftpack@sign
  3213  04AB  3182  223A         	fcall	___ftpack
  3214  04AD  0870               	movf	?___ftpack,w
  3215  04AE  00F8               	movwf	?___awtoft
  3216  04AF  0871               	movf	?___ftpack+1,w
  3217  04B0  00F9               	movwf	?___awtoft+1
  3218  04B1  0872               	movf	?___ftpack+2,w
  3219  04B2  00FA               	movwf	?___awtoft+2
  3220  04B3  0008               	return
  3221  04B4                     __end_of___awtoft:	
  3222                           
  3223                           	psect	text21
  3224  023A                     __ptext21:	
  3225 ;; *************** function ___ftpack *****************
  3226 ;; Defined at:
  3227 ;;		line 62 in file "C:\isaka\application\compiler\xc\xc8\sources\common\float.c"
  3228 ;; Parameters:    Size  Location     Type
  3229 ;;  arg             3    0[COMMON] unsigned um
  3230 ;;  exp             1    3[COMMON] unsigned char 
  3231 ;;  sign            1    4[COMMON] unsigned char 
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;		None
  3234 ;; Return value:  Size  Location     Type
  3235 ;;                  3    0[COMMON] float 
  3236 ;; Registers used:
  3237 ;;		wreg, status,2, status,0
  3238 ;; Tracked objects:
  3239 ;;		On entry : 0/0
  3240 ;;		On exit  : 0/0
  3241 ;;		Unchanged: 0/0
  3242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3243 ;;      Params:         5       0       0       0       0       0
  3244 ;;      Locals:         0       0       0       0       0       0
  3245 ;;      Temps:          3       0       0       0       0       0
  3246 ;;      Totals:         8       0       0       0       0       0
  3247 ;;Total ram usage:        8 bytes
  3248 ;; Hardware stack levels used:    1
  3249 ;; This function calls:
  3250 ;;		Nothing
  3251 ;; This function is called by:
  3252 ;;		___awtoft
  3253 ;;		___ftmul
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256                           
  3257                           
  3258                           ;psect for function ___ftpack
  3259  023A                     ___ftpack:	
  3260                           
  3261                           ;incstack = 0
  3262                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3263  023A  0873               	movf	___ftpack@exp,w
  3264  023B  1903               	btfsc	3,2
  3265  023C  2A42               	goto	i1l1120
  3266  023D  0872               	movf	___ftpack@arg+2,w
  3267  023E  0471               	iorwf	___ftpack@arg+1,w
  3268  023F  0470               	iorwf	___ftpack@arg,w
  3269  0240  1D03               	skipz
  3270  0241  2A53               	goto	i1l1126
  3271  0242                     i1l1120:	
  3272  0242  3000               	movlw	0
  3273  0243  00F0               	movwf	?___ftpack
  3274  0244  3000               	movlw	0
  3275  0245  00F1               	movwf	?___ftpack+1
  3276  0246  3000               	movlw	0
  3277  0247  00F2               	movwf	?___ftpack+2
  3278  0248  0008               	return
  3279  0249                     i1l1124:	
  3280  0249  3001               	movlw	1
  3281  024A  00F5               	movwf	??___ftpack
  3282  024B  0875               	movf	??___ftpack,w
  3283  024C  07F3               	addwf	___ftpack@exp,f
  3284  024D  3001               	movlw	1
  3285  024E                     u64_25:	
  3286  024E  36F2               	lsrf	___ftpack@arg+2,f
  3287  024F  0CF1               	rrf	___ftpack@arg+1,f
  3288  0250  0CF0               	rrf	___ftpack@arg,f
  3289  0251  0B89               	decfsz	9,f
  3290  0252  2A4E               	goto	u64_25
  3291  0253                     i1l1126:	
  3292  0253  30FE               	movlw	254
  3293  0254  0572               	andwf	___ftpack@arg+2,w
  3294  0255  1903               	btfsc	3,2
  3295  0256  2A6C               	goto	i1l496
  3296  0257  2A49               	goto	i1l1124
  3297  0258                     i1l1128:	
  3298  0258  3001               	movlw	1
  3299  0259  00F5               	movwf	??___ftpack
  3300  025A  0875               	movf	??___ftpack,w
  3301  025B  07F3               	addwf	___ftpack@exp,f
  3302  025C  3001               	movlw	1
  3303  025D  07F0               	addwf	___ftpack@arg,f
  3304  025E  3000               	movlw	0
  3305  025F  1803               	skipnc
  3306  0260  3001               	movlw	1
  3307  0261  07F1               	addwf	___ftpack@arg+1,f
  3308  0262  3000               	movlw	0
  3309  0263  1803               	skipnc
  3310  0264  3001               	movlw	1
  3311  0265  07F2               	addwf	___ftpack@arg+2,f
  3312  0266  3001               	movlw	1
  3313  0267                     u66_25:	
  3314  0267  36F2               	lsrf	___ftpack@arg+2,f
  3315  0268  0CF1               	rrf	___ftpack@arg+1,f
  3316  0269  0CF0               	rrf	___ftpack@arg,f
  3317  026A  0B89               	decfsz	9,f
  3318  026B  2A67               	goto	u66_25
  3319  026C                     i1l496:	
  3320  026C  30FF               	movlw	255
  3321  026D  0572               	andwf	___ftpack@arg+2,w
  3322  026E  1903               	btfsc	3,2
  3323  026F  2A79               	goto	i1l1136
  3324  0270  2A58               	goto	i1l1128
  3325  0271                     i1l1134:	
  3326  0271  3001               	movlw	1
  3327  0272  02F3               	subwf	___ftpack@exp,f
  3328  0273  3001               	movlw	1
  3329  0274                     u68_25:	
  3330  0274  35F0               	lslf	___ftpack@arg,f
  3331  0275  0DF1               	rlf	___ftpack@arg+1,f
  3332  0276  0DF2               	rlf	___ftpack@arg+2,f
  3333  0277  0B89               	decfsz	9,f
  3334  0278  2A74               	goto	u68_25
  3335  0279                     i1l1136:	
  3336  0279  1FF1               	btfss	___ftpack@arg+1,7
  3337  027A  2A71               	goto	i1l1134
  3338  027B  1873               	btfsc	___ftpack@exp,0
  3339  027C  2A83               	goto	i1l502
  3340  027D  30FF               	movlw	255
  3341  027E  05F0               	andwf	___ftpack@arg,f
  3342  027F  307F               	movlw	127
  3343  0280  05F1               	andwf	___ftpack@arg+1,f
  3344  0281  30FF               	movlw	255
  3345  0282  05F2               	andwf	___ftpack@arg+2,f
  3346  0283                     i1l502:	
  3347  0283  1003               	clrc
  3348  0284  0CF3               	rrf	___ftpack@exp,f
  3349  0285  0873               	movf	___ftpack@exp,w
  3350  0286  00F5               	movwf	??___ftpack
  3351  0287  01F6               	clrf	??___ftpack+1
  3352  0288  01F7               	clrf	??___ftpack+2
  3353  0289  3010               	movlw	16
  3354  028A                     u71_25:	
  3355  028A  35F5               	lslf	??___ftpack,f
  3356  028B  0DF6               	rlf	??___ftpack+1,f
  3357  028C  0DF7               	rlf	??___ftpack+2,f
  3358  028D  0B89               	decfsz	9,f
  3359  028E  2A8A               	goto	u71_25
  3360  028F  0875               	movf	??___ftpack,w
  3361  0290  04F0               	iorwf	___ftpack@arg,f
  3362  0291  0876               	movf	??___ftpack+1,w
  3363  0292  04F1               	iorwf	___ftpack@arg+1,f
  3364  0293  0877               	movf	??___ftpack+2,w
  3365  0294  04F2               	iorwf	___ftpack@arg+2,f
  3366  0295  0874               	movf	___ftpack@sign,w
  3367  0296  1903               	btfsc	3,2
  3368  0297  0008               	return
  3369  0298  17F2               	bsf	___ftpack@arg+2,7
  3370  0299  0008               	return
  3371  029A                     __end_of___ftpack:	
  3372                           
  3373                           	psect	text22
  3374  037F                     __ptext22:	
  3375 ;; *************** function _interrupt_I2C *****************
  3376 ;; Defined at:
  3377 ;;		line 89 in file "I2C.c"
  3378 ;; Parameters:    Size  Location     Type
  3379 ;;		None
  3380 ;; Auto vars:     Size  Location     Type
  3381 ;;  data            2    0[BANK0 ] int 
  3382 ;;  send_data       1    2[BANK0 ] unsigned char 
  3383 ;; Return value:  Size  Location     Type
  3384 ;;		None               void
  3385 ;; Registers used:
  3386 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3387 ;; Tracked objects:
  3388 ;;		On entry : 0/0
  3389 ;;		On exit  : 0/0
  3390 ;;		Unchanged: 0/0
  3391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3392 ;;      Params:         0       0       0       0       0       0
  3393 ;;      Locals:         0       3       0       0       0       0
  3394 ;;      Temps:          3       0       0       0       0       0
  3395 ;;      Totals:         3       3       0       0       0       0
  3396 ;;Total ram usage:        6 bytes
  3397 ;; Hardware stack levels used:    1
  3398 ;; Hardware stack levels required when called:    2
  3399 ;; This function calls:
  3400 ;;		_I2C_send_data
  3401 ;;		_get_current_limit
  3402 ;; This function is called by:
  3403 ;;		_inter
  3404 ;; This function uses a non-reentrant model
  3405 ;;
  3406                           
  3407                           
  3408                           ;psect for function _interrupt_I2C
  3409  037F                     _interrupt_I2C:	
  3410                           
  3411                           ;I2C.c: 90: static int counter = 0;
  3412                           ;I2C.c: 91: if (TMR4IF == 1) {
  3413                           
  3414                           ;incstack = 0
  3415                           ; Regs used in _interrupt_I2C: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3416  037F  0020               	movlb	0	; select bank0
  3417  0380  1C93               	btfss	19,1	;volatile
  3418  0381  0008               	return
  3419                           
  3420                           ;I2C.c: 92: if(counter < 250) {
  3421  0382  0865               	movf	interrupt_I2C@counter+1,w
  3422  0383  3A80               	xorlw	128
  3423  0384  00FB               	movwf	??_interrupt_I2C
  3424  0385  3080               	movlw	128
  3425  0386  027B               	subwf	??_interrupt_I2C,w
  3426  0387  1D03               	skipz
  3427  0388  2B8B               	goto	u120_25
  3428  0389  30FA               	movlw	250
  3429  038A  0264               	subwf	interrupt_I2C@counter,w
  3430  038B                     u120_25:	
  3431  038B  1803               	skipnc
  3432  038C  2B93               	goto	i1l1474
  3433                           
  3434                           ;I2C.c: 93: counter++;
  3435  038D  3001               	movlw	1
  3436  038E  0020               	movlb	0	; select bank0
  3437  038F  07E4               	addwf	interrupt_I2C@counter,f
  3438  0390  3000               	movlw	0
  3439  0391  3DE5               	addwfc	interrupt_I2C@counter+1,f
  3440                           
  3441                           ;I2C.c: 94: } else {
  3442  0392  2BB9               	goto	i1l1482
  3443  0393                     i1l1474:	
  3444                           
  3445                           ;I2C.c: 96: int data = get_current_limit();
  3446  0393  3185  252A  3183   	fcall	_get_current_limit
  3447  0396  0871               	movf	?_get_current_limit+1,w
  3448  0397  0020               	movlb	0	; select bank0
  3449  0398  01A1               	clrf	interrupt_I2C@data+1
  3450  0399  07A1               	addwf	interrupt_I2C@data+1,f
  3451  039A  0870               	movf	?_get_current_limit,w
  3452  039B  01A0               	clrf	interrupt_I2C@data
  3453  039C  07A0               	addwf	interrupt_I2C@data,f
  3454                           
  3455                           ;I2C.c: 97: char send_data = data >> 2;
  3456  039D  0821               	movf	interrupt_I2C@data+1,w
  3457  039E  00FC               	movwf	??_interrupt_I2C+1
  3458  039F  0820               	movf	interrupt_I2C@data,w
  3459  03A0  00FB               	movwf	??_interrupt_I2C
  3460  03A1  0D7C               	rlf	??_interrupt_I2C+1,w
  3461  03A2  0CFC               	rrf	??_interrupt_I2C+1,f
  3462  03A3  0CFB               	rrf	??_interrupt_I2C,f
  3463  03A4  0D7C               	rlf	??_interrupt_I2C+1,w
  3464  03A5  0CFC               	rrf	??_interrupt_I2C+1,f
  3465  03A6  0CFB               	rrf	??_interrupt_I2C,f
  3466  03A7  087B               	movf	??_interrupt_I2C,w
  3467  03A8  00FD               	movwf	??_interrupt_I2C+2
  3468  03A9  087D               	movf	??_interrupt_I2C+2,w
  3469  03AA  00A2               	movwf	interrupt_I2C@send_data
  3470                           
  3471                           ;I2C.c: 98: I2C_send_data((0x02), &send_data, 1);
  3472  03AB  3022               	movlw	interrupt_I2C@send_data& (0+255)
  3473  03AC  00FB               	movwf	??_interrupt_I2C
  3474  03AD  087B               	movf	??_interrupt_I2C,w
  3475  03AE  00F4               	movwf	I2C_send_data@data
  3476  03AF  3001               	movlw	1
  3477  03B0  00F5               	movwf	I2C_send_data@length
  3478  03B1  3000               	movlw	0
  3479  03B2  00F6               	movwf	I2C_send_data@length+1
  3480  03B3  3002               	movlw	2
  3481  03B4  3183  2340         	fcall	_I2C_send_data
  3482                           
  3483                           ;I2C.c: 99: counter = 0;
  3484  03B6  0020               	movlb	0	; select bank0
  3485  03B7  01E4               	clrf	interrupt_I2C@counter
  3486  03B8  01E5               	clrf	interrupt_I2C@counter+1
  3487  03B9                     i1l1482:	
  3488                           
  3489                           ;I2C.c: 100: }
  3490                           ;I2C.c: 101: TMR4IF = 0;
  3491  03B9  1093               	bcf	19,1	;volatile
  3492  03BA  0008               	return
  3493  03BB                     __end_of_interrupt_I2C:	
  3494                           
  3495                           	psect	text23
  3496  052A                     __ptext23:	
  3497 ;; *************** function _get_current_limit *****************
  3498 ;; Defined at:
  3499 ;;		line 113 in file "controller.c"
  3500 ;; Parameters:    Size  Location     Type
  3501 ;;		None
  3502 ;; Auto vars:     Size  Location     Type
  3503 ;;		None
  3504 ;; Return value:  Size  Location     Type
  3505 ;;                  2    0[COMMON] int 
  3506 ;; Registers used:
  3507 ;;		wreg, status,2, status,0
  3508 ;; Tracked objects:
  3509 ;;		On entry : 0/0
  3510 ;;		On exit  : 0/0
  3511 ;;		Unchanged: 0/0
  3512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3513 ;;      Params:         2       0       0       0       0       0
  3514 ;;      Locals:         0       0       0       0       0       0
  3515 ;;      Temps:          0       0       0       0       0       0
  3516 ;;      Totals:         2       0       0       0       0       0
  3517 ;;Total ram usage:        2 bytes
  3518 ;; Hardware stack levels used:    1
  3519 ;; This function calls:
  3520 ;;		Nothing
  3521 ;; This function is called by:
  3522 ;;		_interrupt_I2C
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526                           
  3527                           ;psect for function _get_current_limit
  3528  052A                     _get_current_limit:	
  3529                           
  3530                           ;controller.c: 114: return controller_current_limit;
  3531                           
  3532                           ;incstack = 0
  3533                           ; Regs used in _get_current_limit: [wreg+status,2+status,0]
  3534  052A  0020               	movlb	0	; select bank0
  3535  052B  0863               	movf	_controller_current_limit+1,w
  3536  052C  01F1               	clrf	?_get_current_limit+1
  3537  052D  07F1               	addwf	?_get_current_limit+1,f
  3538  052E  0862               	movf	_controller_current_limit,w
  3539  052F  01F0               	clrf	?_get_current_limit
  3540  0530  07F0               	addwf	?_get_current_limit,f
  3541  0531  0008               	return
  3542  0532                     __end_of_get_current_limit:	
  3543                           
  3544                           	psect	text24
  3545  0340                     __ptext24:	
  3546 ;; *************** function _I2C_send_data *****************
  3547 ;; Defined at:
  3548 ;;		line 65 in file "I2C.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;  addr            1    wreg     unsigned char 
  3551 ;;  data            1    4[COMMON] PTR unsigned char 
  3552 ;;		 -> interrupt_I2C@send_data(1), 
  3553 ;;  length          2    5[COMMON] int 
  3554 ;; Auto vars:     Size  Location     Type
  3555 ;;  addr            1    8[COMMON] unsigned char 
  3556 ;;  i               2    9[COMMON] int 
  3557 ;; Return value:  Size  Location     Type
  3558 ;;		None               void
  3559 ;; Registers used:
  3560 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3561 ;; Tracked objects:
  3562 ;;		On entry : 0/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3566 ;;      Params:         3       0       0       0       0       0
  3567 ;;      Locals:         3       0       0       0       0       0
  3568 ;;      Temps:          1       0       0       0       0       0
  3569 ;;      Totals:         7       0       0       0       0       0
  3570 ;;Total ram usage:        7 bytes
  3571 ;; Hardware stack levels used:    1
  3572 ;; Hardware stack levels required when called:    1
  3573 ;; This function calls:
  3574 ;;		_I2C_ack_check
  3575 ;;		_I2C_idle_check
  3576 ;; This function is called by:
  3577 ;;		_interrupt_I2C
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           
  3581                           
  3582                           ;psect for function _I2C_send_data
  3583  0340                     _I2C_send_data:	
  3584                           
  3585                           ;incstack = 0
  3586                           ; Regs used in _I2C_send_data: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3587                           ;I2C_send_data@addr stored from wreg
  3588  0340  00F8               	movwf	I2C_send_data@addr
  3589                           
  3590                           ;I2C.c: 66: I2C_idle_check();
  3591  0341  3185  2518  3183   	fcall	_I2C_idle_check
  3592                           
  3593                           ;I2C.c: 67: SSP1CON2bits.SEN = 1;
  3594  0344  0024               	movlb	4	; select bank4
  3595  0345  1416               	bsf	22,0	;volatile
  3596                           
  3597                           ;I2C.c: 69: I2C_idle_check();
  3598  0346  3185  2518  3183   	fcall	_I2C_idle_check
  3599                           
  3600                           ;I2C.c: 70: SSP1BUF = addr << 1;
  3601  0349  3578               	lslf	I2C_send_data@addr,w
  3602  034A  0024               	movlb	4	; select bank4
  3603  034B  0091               	movwf	17	;volatile
  3604                           
  3605                           ;I2C.c: 72: if (!I2C_ack_check()) { return; }
  3606  034C  3184  2473  3183   	fcall	_I2C_ack_check
  3607  034F  0871               	movf	?_I2C_ack_check+1,w
  3608  0350  0470               	iorwf	?_I2C_ack_check,w
  3609  0351  1903               	btfsc	3,2
  3610  0352  0008               	return
  3611                           
  3612                           ;I2C.c: 74: for(int i = 0; i < length; i++) {
  3613  0353  01F9               	clrf	I2C_send_data@i
  3614  0354  01FA               	clrf	I2C_send_data@i+1
  3615  0355                     i1l226:	
  3616  0355  087A               	movf	I2C_send_data@i+1,w
  3617  0356  3A80               	xorlw	128
  3618  0357  00F7               	movwf	??_I2C_send_data
  3619  0358  0876               	movf	I2C_send_data@length+1,w
  3620  0359  3A80               	xorlw	128
  3621  035A  0277               	subwf	??_I2C_send_data,w
  3622  035B  1D03               	skipz
  3623  035C  2B5F               	goto	u115_25
  3624  035D  0875               	movf	I2C_send_data@length,w
  3625  035E  0279               	subwf	I2C_send_data@i,w
  3626  035F                     u115_25:	
  3627  035F  1803               	btfsc	3,0
  3628  0360  2B7A               	goto	i1l1432
  3629                           
  3630                           ;I2C.c: 75: I2C_idle_check();
  3631  0361  3185  2518  3183   	fcall	_I2C_idle_check
  3632                           
  3633                           ;I2C.c: 76: SSP1BUF = *data;
  3634  0364  0874               	movf	I2C_send_data@data,w
  3635  0365  0086               	movwf	6
  3636  0366  0187               	clrf	7
  3637  0367  0801               	movf	1,w
  3638  0368  0024               	movlb	4	; select bank4
  3639  0369  0091               	movwf	17	;volatile
  3640                           
  3641                           ;I2C.c: 77: data++;
  3642  036A  3001               	movlw	1
  3643  036B  00F7               	movwf	??_I2C_send_data
  3644  036C  0877               	movf	??_I2C_send_data,w
  3645  036D  07F4               	addwf	I2C_send_data@data,f
  3646                           
  3647                           ;I2C.c: 79: if (!I2C_ack_check()) { return; }
  3648  036E  3184  2473  3183   	fcall	_I2C_ack_check
  3649  0371  0871               	movf	?_I2C_ack_check+1,w
  3650  0372  0470               	iorwf	?_I2C_ack_check,w
  3651  0373  1903               	btfsc	3,2
  3652  0374  0008               	return
  3653  0375  3001               	movlw	1
  3654  0376  07F9               	addwf	I2C_send_data@i,f
  3655  0377  3000               	movlw	0
  3656  0378  3DFA               	addwfc	I2C_send_data@i+1,f
  3657  0379  2B55               	goto	i1l226
  3658  037A                     i1l1432:	
  3659                           
  3660                           ;I2C.c: 80: }
  3661                           ;I2C.c: 82: I2C_idle_check();
  3662  037A  3185  2518         	fcall	_I2C_idle_check
  3663                           
  3664                           ;I2C.c: 83: SSP1CON2bits.PEN = 1;
  3665  037C  0024               	movlb	4	; select bank4
  3666  037D  1516               	bsf	22,2	;volatile
  3667  037E  0008               	return
  3668  037F                     __end_of_I2C_send_data:	
  3669                           
  3670                           	psect	text25
  3671  0518                     __ptext25:	
  3672 ;; *************** function _I2C_idle_check *****************
  3673 ;; Defined at:
  3674 ;;		line 39 in file "I2C.c"
  3675 ;; Parameters:    Size  Location     Type
  3676 ;;		None
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;		None
  3679 ;; Return value:  Size  Location     Type
  3680 ;;		None               void
  3681 ;; Registers used:
  3682 ;;		wreg, status,2, status,0
  3683 ;; Tracked objects:
  3684 ;;		On entry : 0/0
  3685 ;;		On exit  : 0/0
  3686 ;;		Unchanged: 0/0
  3687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3688 ;;      Params:         0       0       0       0       0       0
  3689 ;;      Locals:         0       0       0       0       0       0
  3690 ;;      Temps:          1       0       0       0       0       0
  3691 ;;      Totals:         1       0       0       0       0       0
  3692 ;;Total ram usage:        1 bytes
  3693 ;; Hardware stack levels used:    1
  3694 ;; This function calls:
  3695 ;;		Nothing
  3696 ;; This function is called by:
  3697 ;;		_I2C_send_data
  3698 ;; This function uses a non-reentrant model
  3699 ;;
  3700                           
  3701                           
  3702                           ;psect for function _I2C_idle_check
  3703  0518                     _I2C_idle_check:	
  3704  0518                     i1l1302:	
  3705                           ;I2C.c: 40: while (( SSP1CON2 & 0x1F ) | (SSP1STAT & 0x05)) ;
  3706                           
  3707                           ;incstack = 0
  3708                           ; Regs used in _I2C_idle_check: [wreg+status,2+status,0]
  3709                           
  3710  0518  3005               	movlw	5
  3711  0519  0024               	movlb	4	; select bank4
  3712  051A  0514               	andwf	20,w	;volatile
  3713  051B  00F0               	movwf	??_I2C_idle_check
  3714  051C  0816               	movf	22,w	;volatile
  3715  051D  391F               	andlw	31
  3716  051E  0470               	iorwf	??_I2C_idle_check,w
  3717  051F  1903               	btfsc	3,2
  3718  0520  0008               	return
  3719  0521  2D18               	goto	i1l1302
  3720  0522                     __end_of_I2C_idle_check:	
  3721                           
  3722                           	psect	text26
  3723  0473                     __ptext26:	
  3724 ;; *************** function _I2C_ack_check *****************
  3725 ;; Defined at:
  3726 ;;		line 49 in file "I2C.c"
  3727 ;; Parameters:    Size  Location     Type
  3728 ;;		None
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;  i               2    2[COMMON] unsigned int 
  3731 ;; Return value:  Size  Location     Type
  3732 ;;                  2    0[COMMON] int 
  3733 ;; Registers used:
  3734 ;;		wreg, status,2
  3735 ;; Tracked objects:
  3736 ;;		On entry : 0/0
  3737 ;;		On exit  : 0/0
  3738 ;;		Unchanged: 0/0
  3739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3740 ;;      Params:         2       0       0       0       0       0
  3741 ;;      Locals:         2       0       0       0       0       0
  3742 ;;      Temps:          0       0       0       0       0       0
  3743 ;;      Totals:         4       0       0       0       0       0
  3744 ;;Total ram usage:        4 bytes
  3745 ;; Hardware stack levels used:    1
  3746 ;; This function calls:
  3747 ;;		Nothing
  3748 ;; This function is called by:
  3749 ;;		_I2C_send_data
  3750 ;; This function uses a non-reentrant model
  3751 ;;
  3752                           
  3753                           
  3754                           ;psect for function _I2C_ack_check
  3755  0473                     _I2C_ack_check:	
  3756                           
  3757                           ;I2C.c: 50: unsigned int i;
  3758                           ;I2C.c: 51: for (i = 0; i < 65535; i++) {
  3759                           
  3760                           ;incstack = 0
  3761                           ; Regs used in _I2C_ack_check: [wreg+status,2]
  3762  0473  01F2               	clrf	I2C_ack_check@i
  3763  0474  01F3               	clrf	I2C_ack_check@i+1
  3764  0475  30FF               	movlw	255
  3765  0476  0673               	xorwf	I2C_ack_check@i+1,w
  3766  0477  1D03               	skipz
  3767  0478  2C7B               	goto	u101_25
  3768  0479  30FF               	movlw	255
  3769  047A  0672               	xorwf	I2C_ack_check@i,w
  3770  047B                     u101_25:	
  3771  047B  1903               	btfsc	3,2
  3772  047C  2C91               	goto	i1l1316
  3773  047D                     i1l218:	
  3774                           
  3775                           ;I2C.c: 52: if (SSP1CON2bits.ACKSTAT == 1) {
  3776  047D  0024               	movlb	4	; select bank4
  3777  047E  1F16               	btfss	22,6	;volatile
  3778  047F  2C85               	goto	i1l1314
  3779                           
  3780                           ;I2C.c: 53: return 1;
  3781  0480  3001               	movlw	1
  3782  0481  00F0               	movwf	?_I2C_ack_check
  3783  0482  3000               	movlw	0
  3784  0483  00F1               	movwf	?_I2C_ack_check+1
  3785  0484  0008               	return
  3786  0485                     i1l1314:	
  3787  0485  3001               	movlw	1
  3788  0486  07F2               	addwf	I2C_ack_check@i,f
  3789  0487  3000               	movlw	0
  3790  0488  3DF3               	addwfc	I2C_ack_check@i+1,f
  3791  0489  30FF               	movlw	255
  3792  048A  0673               	xorwf	I2C_ack_check@i+1,w
  3793  048B  1D03               	skipz
  3794  048C  2C8F               	goto	u103_25
  3795  048D  30FF               	movlw	255
  3796  048E  0672               	xorwf	I2C_ack_check@i,w
  3797  048F                     u103_25:	
  3798  048F  1D03               	skipz
  3799  0490  2C7D               	goto	i1l218
  3800  0491                     i1l1316:	
  3801                           
  3802                           ;I2C.c: 54: }
  3803                           ;I2C.c: 55: }
  3804                           ;I2C.c: 56: return 0;
  3805  0491  01F0               	clrf	?_I2C_ack_check
  3806  0492  01F1               	clrf	?_I2C_ack_check+1
  3807  0493  0008               	return
  3808  0494                     __end_of_I2C_ack_check:	
  3809  007E                     btemp	set	126	;btemp
  3810  007E                     pic14e$flags	set	126
  3811  007E                     wtemp	set	126
  3812  007E                     wtemp0	set	126
  3813  0080                     wtemp1	set	128
  3814  0082                     wtemp2	set	130
  3815  0084                     wtemp3	set	132
  3816  0086                     wtemp4	set	134
  3817  0088                     wtemp5	set	136
  3818  007F                     wtemp6	set	127
  3819  007E                     ttemp	set	126
  3820  007E                     ttemp0	set	126
  3821  0081                     ttemp1	set	129
  3822  0084                     ttemp2	set	132
  3823  0087                     ttemp3	set	135
  3824  007F                     ttemp4	set	127
  3825  007E                     ltemp	set	126
  3826  007E                     ltemp0	set	126
  3827  0082                     ltemp1	set	130
  3828  0086                     ltemp2	set	134
  3829  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     62      71
    BANK1            80     10      10
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    I2C_slave_interrupt@data_ptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_send_data@data	PTR unsigned char  size(1) Largest target is 1
		 -> interrupt_I2C@send_data(BANK0[1]), 

    calc@output	PTR int  size(1) Largest target is 2
		 -> interrupt_controller@out(BANK0[2]), 

    measure@value	PTR int  size(1) Largest target is 2
		 -> interrupt_controller@volume(BANK0[2]), interrupt_controller@current(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _inter in COMMON

    _inter->_interrupt_I2C
    _interrupt_controller->_current_conversion
    _interrupt_controller->_measure
    _measure->_adconv
    _current_conversion->___lmul
    _P_calc->___awtoft
    _I_calc->___awtoft
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    _interrupt_I2C->_I2C_send_data
    _I2C_send_data->_I2C_ack_check

Critical Paths under _main in BANK0

    None.

Critical Paths under _inter in BANK0

    _inter->_interrupt_controller
    _interrupt_controller->_calc
    _calc->_I_calc
    _P_calc->___fttol
    _I_calc->___fttol
    ___fttol->___ftmul

Critical Paths under _main in BANK1

    _main->_init
    _init->_init_adcon

Critical Paths under _inter in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _inter in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _inter in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _inter in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4     218
                                              6 BANK1      4     0      4
                               _init
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0     218
                                              4 BANK1      2     2      0
                    _init_I2C_master
                           _init_PWM
                         _init_adcon
 ---------------------------------------------------------------------------------
 (2) _init_adcon                                           4     0      4     172
                                              0 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (2) _init_PWM                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_I2C_master                                      0     0      0       0
                        _init_Timer4
 ---------------------------------------------------------------------------------
 (3) _init_Timer4                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _inter                                                1     1      0   13085
                                             61 BANK0      1     1      0
                      _interrupt_I2C
               _interrupt_controller
 ---------------------------------------------------------------------------------
 (5) _interrupt_controller                                 7     7      0   12773
                                             54 BANK0      7     7      0
                               _calc
                 _current_conversion
                            _measure
                             _output
                  _set_current_limit
 ---------------------------------------------------------------------------------
 (6) _set_current_limit                                    2     0      2      86
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _output                                               4     2      2     108
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (6) _measure                                              3     1      2     380
                                             11 COMMON     3     1      2
                             _adconv
 ---------------------------------------------------------------------------------
 (7) _adconv                                              11     9      2     132
                                              0 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (6) _current_conversion                                   9     7      2     457
                                             12 COMMON     2     0      2
                                              0 BANK0      7     7      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) ___lmul                                              12     4      8     348
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (6) _calc                                                15    10      5   11549
                                             39 BANK0     15    10      5
                             _I_calc
                             _P_calc
 ---------------------------------------------------------------------------------
 (7) _P_calc                                               4     2      2    5486
                                             30 BANK0      4     2      2
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (7) _I_calc                                               9     7      2    5534
                                             30 BANK0      9     7      2
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (8) ___fttol                                             14    10      4     444
                                             16 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___ftmul                                             16    10      6    2680
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (8) ___awtoft                                             6     3      3    2253
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (9) ___ftpack                                             8     3      5    1970
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (5) _interrupt_I2C                                        6     6      0     312
                                             11 COMMON     3     3      0
                                              0 BANK0      3     3      0
                      _I2C_send_data
                  _get_current_limit
 ---------------------------------------------------------------------------------
 (6) _get_current_limit                                    2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _I2C_send_data                                        7     4      3     265
                                              4 COMMON     7     4      3
                      _I2C_ack_check
                     _I2C_idle_check
 ---------------------------------------------------------------------------------
 (7) _I2C_idle_check                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C_ack_check                                        4     2      2      46
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _init_I2C_master
       _init_Timer4
     _init_PWM
     _init_adcon
   _loop

 _inter (ROOT)
   _interrupt_I2C
     _I2C_send_data
       _I2C_ack_check
       _I2C_idle_check
     _get_current_limit
   _interrupt_controller
     _calc
       _I_calc
         ___awtoft
           ___ftpack
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
       _P_calc
         ___awtoft
           ___ftpack
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
     _current_conversion
       ___lmul
     _measure
       _adconv
     _output
     _set_current_limit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      5F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     3E      47       6       88.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      A       A       8       12.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      5F      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Wed Apr 19 13:54:00 2017

              _current_conversion 029A             __end_of_interrupt_I2C 03BB                  ??_I2C_idle_check 0070  
                     __CFG_CP$OFF 0000                                l40 0432               ?_current_conversion 007C  
                             _GIE 005F                               _RB3 006B                               _PR2 001B  
                             _PR4 0416                      __CFG_CPD$OFF 0000                      __CFG_BORV$HI 0000  
                             wreg 0009                        _I_calc$143 0043                        _I_calc$144 0045  
                    __CFG_LVP$OFF 0000                              l1448 042A                              l1486 0535  
                            _PEIE 005E                              _TMR2 001A                              _TMR4 0415  
                    __CFG_WRT$OFF 0000                              _calc 015D                              _main 0532  
                    ___ftpack@arg 0070                              _init 041B              ??_current_conversion 0020  
                            _loop 0539                      ___ftpack@exp 0073                              fsr1h 0007  
                            indf1 0001                              fsr1l 0006                              btemp 007E  
                   __CFG_BOREN$ON 0000                              ltemp 007E        __size_of_get_current_limit 0008  
      __size_of_set_current_limit 0008                              start 0013                              ttemp 007E  
                            wtemp 007E                     __CFG_IESO$OFF 0000                      ___ftmul@cntr 002E  
                    ___ftmul@sign 002F                      ___fttol@exp1 003D                      ___fttol@lval 0039  
                    ?_init_Timer4 0070                             ?_calc 0047                             ?_main 00A6  
                           ?_init 0070                             ?_loop 0070                     __CFG_WDTE$OFF 0000  
   __size_of_interrupt_controller 004D                   __end_of___ftmul 00D6                   __end_of___fttol 015D  
                           _T2CON 001C                             _T4CON 0417                             i1l108 01F8  
                           i1l118 0204                             i1l218 047D                             i1l226 0355  
                           i1l162 044F                             i1l502 0283                             i1l496 026C  
                           _PORTA 000C                             _PORTB 000D                             u71_25 028A  
                           u64_25 024E                             u80_25 0099                             _TRISA 008C  
                           _TRISB 008D                             u66_25 0267                             u90_25 0120  
                           u83_25 00AF                             u68_25 0274                             u84_25 00B5  
                           u76_25 005B                             u77_25 006B                             u93_25 013B  
                           u79_25 0093                             u87_25 00F6                             u98_25 01F0  
             ___lmul@multiplicand 0074                     __CFG_PWRTE$ON 0000                    __CFG_FCMEN$OFF 0000  
                   ___awtoft@sign 007D                   __end_of_measure 04EF                             _inter 0004  
                   ___ftpack@sign 0074                             init@i 00A5                             ltemp0 007E  
                           ltemp1 0082                             ltemp2 0086                             ltemp3 0080  
                           ttemp0 007E                             ttemp1 0081                             ttemp2 0084  
                           ttemp3 0087                             ttemp4 007F                             status 0003  
                           wtemp0 007E                             wtemp1 0080                             wtemp2 0082  
                           wtemp3 0084                             wtemp4 0086                             wtemp5 0088  
                           wtemp6 007F                    __CFG_MCLRE$OFF 0000                   __initialization 0015  
                    __end_of_calc 01D7                      __end_of_main 0539                      __end_of_init 0448  
                    __end_of_loop 053A                            ??_calc 004C                            ??_main 00AA  
                   ___fttol@sign1 0038                            ??_init 00A4                            ??_loop 00A0  
                  __CFG_PLLEN$OFF 0000                            _BCL1IE 0493                            _BCL1IF 0093  
                          _ADCON0 009D                            _ADCON1 009E                            ?_inter 0070  
                          _ADRESH 009C                            _ADRESL 009B                            _CCPR3H 0312  
                          _CCPR3L 0311         current_conversion@current 0025                  __end_of___awtoft 04B4  
                          _ANSELA 018C                            _ANSELB 018D                  __end_of___ftpack 029A  
          __size_of_I2C_ack_check 0021                            u101_25 047B                            i1l1120 0242  
                          i1l1124 0249                            i1l1302 0518                            i1l1134 0271  
                          i1l1126 0253                            i1l1214 00EF                            i1l1136 0279  
                          i1l1128 0258                            i1l1240 013A                            i1l1232 011F  
                          i1l1314 0485                            i1l1154 049E                            i1l1170 004F  
                          i1l1242 0143                            i1l1234 012D                            i1l1322 03F4  
                          i1l1316 0491                            i1l1164 0039                            i1l1244 0146  
                          u103_25 048F                            u111_25 02BB                            i1l1182 008A  
                          i1l1326 03FE                            i1l1432 037A                            i1l1248 0154  
                          i1l1194 00A6                            i1l1186 0092                            i1l1284 01FE  
                          i1l1276 01E1                            i1l1380 01A7                            u120_25 038B  
                          u112_25 02E6                            i1l1198 00AE                            i1l1286 020A  
                          i1l1278 01E7                            i1l1390 01C9                            i1l1392 01CF  
                          i1l1384 01B8                            i1l1482 03B9                            i1l1474 0393  
                          i1l1378 01A0                            i1l1388 01C2                            u105_25 03FF  
                          u106_25 0406                            u115_25 035F                            u109_25 01B0  
                          _OSCCON 0099                            _TMR2IE 0489                            _TMR2IF 0089  
                          _TMR4IE 0499                            _TMR4IF 0099                            _TMR2ON 00E2  
                          _TMR4ON 20BA                            _SSP1IE 048B                            _SSP1IF 008B  
        _controller_current_limit 0062                 measure@pin_select 007B                            _I_calc 01D7  
                          _P_calc 03BB                            ___lmul 03EC                            _adconv 0448  
                  __CFG_STVREN$ON 0000                         ??___ftmul 0026                         ??___fttol 0034  
                __end_of_init_PWM 04DE                            _output 04B4             ___ftmul@f3_as_product 002B  
      interrupt_controller@volume 0057                         ??_measure 007D          __size_of_init_I2C_master 0010  
         __end_of__initialization 001E            __size_of_I2C_send_data 003F                        ___awtoft@c 0078  
                      ___ftmul@f1 0020                        ___ftmul@f2 0023                        ___fttol@f1 0030  
                  __pcstackCOMMON 0070                     _I2C_ack_check 0473                     __end_of_inter 0013  
            __size_of_init_Timer4 000B                           ??_inter 005D                        __pbssBANK0 005E  
                         ?_I_calc 003E                           ?_P_calc 003E                        __pmaintext 0532  
                         ?___lmul 0070                    ?_I2C_ack_check 0070                           ?_adconv 0070  
                      __pintentry 0004                           _CCP3CON 0313                    ___lmul@product 0078  
                       ?___awtoft 0078                         ?___ftpack 0070                           _CCPTMRS 029E  
                    measure@value 007D                        calc@output 004B                           ?_output 0070  
     I2C_slave_interrupt@data_ptr 0066                     _I2C_send_data 0340                        adconv@temp 0079  
                         _SSP1ADD 0212                           _SSP1BUF 0211               I2C_send_data@length 0075  
          __size_of_interrupt_I2C 003C                 ??_init_I2C_master 00A0      __end_of_interrupt_controller 0340  
                       ?_init_PWM 0070       __size_of_current_conversion 0059                   __size_of_I_calc 0063  
                 __size_of_P_calc 0031                   __size_of___lmul 002F                   __size_of_adconv 002B  
                         ___ftmul 0022                           ___fttol 00D6                        _init_adcon 04FF  
                      ??___awtoft 007B                        ??___ftpack 0075                           calc@mes 0049  
                         calc@ref 0047                           calc@res 0054              interrupt_I2C@counter 0064  
                         __ptext0 0000                           __ptext1 0539                           __ptext2 041B  
                         __ptext3 04FF                           __ptext4 04CB                           __ptext5 04EF  
                         __ptext6 050D                           __ptext8 02F3                           __ptext9 0522  
                 __size_of_output 0017                    ?_I2C_send_data 0074                           _measure 04DE  
         __size_of_I2C_idle_check 000A           interrupt_controller@out 005B       interrupt_controller@current 0059  
                       I_calc@res 003E                         I_calc@sum 0060              end_of_initialization 001E  
                      ??_init_PWM 00A0                   ??_I2C_ack_check 0072                  adconv@pin_select 0070  
                   _interrupt_I2C 037F                  __CFG_FOSC$INTOSC 0000                         P_calc@res 003E  
current_conversion@measured_value 007C                       _CCP3CONbits 0313                    __end_of_I_calc 023A  
                     ___ftmul@exp 002A                    __end_of_P_calc 03EC                    ?_interrupt_I2C 0070  
                     ?_init_adcon 00A0                    __end_of___lmul 041B                    __end_of_adconv 0473  
                 ??_I2C_send_data 0077                 interrupt_I2C@data 0020              _interrupt_controller 02F3  
                  __end_of_output 04CB               start_initialization 0015    set_current_limit@current_limit 0070  
                        ??_I_calc 0040                          ??_P_calc 007E                          ??___lmul 0078  
                        ??_adconv 0072                  init_adcon@anselA 00A0                  init_adcon@anselB 00A2  
                   ??_init_Timer4 00A0             ?_interrupt_controller 0070                          ??_output 0072  
                 _init_I2C_master 04EF                 __size_of___awtoft 0020                 __size_of___ftpack 0060  
                  _I2C_idle_check 0518                         ___latbits 0001                     __pcstackBANK0 0020  
                   __pcstackBANK1 00A0                    I2C_ack_check@i 0072               __size_of_init_adcon 000E  
               __size_of_init_PWM 0013                   ??_interrupt_I2C 007B                          ?___ftmul 0020  
                        ?___fttol 0030                    D_calc@previous 005E            __end_of_I2C_idle_check 0522  
                        ?_measure 007B               __end_of_init_Timer4 0518            interrupt_I2C@send_data 0022  
                  __size_of_inter 000F        __end_of_current_conversion 02F3                          _GO_nDONE 04E9  
                        _SSP1CON1 0215                          _SSP1CON2 0216           __end_of_init_I2C_master 04FF  
                        _SSP1STAT 0214            ??_interrupt_controller 0056                   ?_I2C_idle_check 0070  
               ___lmul@multiplier 0070             __end_of_I2C_ack_check 0494                      ??_init_adcon 00A4  
                        _calc$133 004E                          _calc$134 0050                          _calc$135 0052  
                __size_of___ftmul 00B4                  __size_of___fttol 0087                       _init_Timer4 050D  
                        ___awtoft 0494                          ___ftpack 023A                  __size_of_measure 0011  
                        __ptext10 04B4                          __ptext11 04DE                          __ptext20 0494  
                        __ptext12 0448                          __ptext21 023A                          __ptext13 029A  
                        __ptext22 037F                          __ptext14 03EC                          __ptext23 052A  
                        __ptext15 015D                          __ptext24 0340                          __ptext16 03BB  
                        __ptext25 0518                          __ptext17 01D7                          __ptext26 0473  
                        __ptext18 00D6                          __ptext19 0022                      _SSP1CON2bits 0216  
               I2C_send_data@addr 0078                 I2C_send_data@data 0074                          _init_PWM 04CB  
              __end_of_init_adcon 050D                     __size_of_calc 007A                     __size_of_main 0007  
                   __size_of_init 002D                     __size_of_loop 0001                 _get_current_limit 052A  
               _set_current_limit 0522                ?_get_current_limit 0070                ?_set_current_limit 0070  
                ?_init_I2C_master 0070                        I_calc@temp 0041                          main@argc 00A6  
                        main@argv 00A8                      _SSP1STATbits 0214             __end_of_I2C_send_data 037F  
             ??_get_current_limit 0072               ??_set_current_limit 0072                       pic14e$flags 007E  
                        intlevel1 0000                         output@out 0070                 __CFG_CLKOUTEN$OFF 0000  
       __end_of_get_current_limit 0532         __end_of_set_current_limit 052A                    I2C_send_data@i 0079  
                      P_calc@temp 0040  
