

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Thu Mar 16 11:12:14 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	dabs	1,0x7E,2
    38  0000                     	;# 
    39  0001                     	;# 
    40  0002                     	;# 
    41  0003                     	;# 
    42  0004                     	;# 
    43  0005                     	;# 
    44  0006                     	;# 
    45  0007                     	;# 
    46  0008                     	;# 
    47  0009                     	;# 
    48  000A                     	;# 
    49  000B                     	;# 
    50  000C                     	;# 
    51  000D                     	;# 
    52  0011                     	;# 
    53  0012                     	;# 
    54  0013                     	;# 
    55  0014                     	;# 
    56  0015                     	;# 
    57  0016                     	;# 
    58  0016                     	;# 
    59  0017                     	;# 
    60  0018                     	;# 
    61  0019                     	;# 
    62  001A                     	;# 
    63  001B                     	;# 
    64  001C                     	;# 
    65  001E                     	;# 
    66  001F                     	;# 
    67  008C                     	;# 
    68  008D                     	;# 
    69  0091                     	;# 
    70  0092                     	;# 
    71  0093                     	;# 
    72  0094                     	;# 
    73  0095                     	;# 
    74  0096                     	;# 
    75  0097                     	;# 
    76  0098                     	;# 
    77  0099                     	;# 
    78  009A                     	;# 
    79  009B                     	;# 
    80  009B                     	;# 
    81  009C                     	;# 
    82  009D                     	;# 
    83  009E                     	;# 
    84  010C                     	;# 
    85  010D                     	;# 
    86  0111                     	;# 
    87  0112                     	;# 
    88  0113                     	;# 
    89  0114                     	;# 
    90  0115                     	;# 
    91  0116                     	;# 
    92  0117                     	;# 
    93  0118                     	;# 
    94  0119                     	;# 
    95  011A                     	;# 
    96  011B                     	;# 
    97  011D                     	;# 
    98  011E                     	;# 
    99  018C                     	;# 
   100  018D                     	;# 
   101  0191                     	;# 
   102  0191                     	;# 
   103  0192                     	;# 
   104  0193                     	;# 
   105  0193                     	;# 
   106  0193                     	;# 
   107  0194                     	;# 
   108  0195                     	;# 
   109  0196                     	;# 
   110  0199                     	;# 
   111  019A                     	;# 
   112  019B                     	;# 
   113  019B                     	;# 
   114  019B                     	;# 
   115  019B                     	;# 
   116  019C                     	;# 
   117  019C                     	;# 
   118  019D                     	;# 
   119  019E                     	;# 
   120  019F                     	;# 
   121  020C                     	;# 
   122  020D                     	;# 
   123  0211                     	;# 
   124  0211                     	;# 
   125  0212                     	;# 
   126  0212                     	;# 
   127  0213                     	;# 
   128  0213                     	;# 
   129  0214                     	;# 
   130  0214                     	;# 
   131  0215                     	;# 
   132  0215                     	;# 
   133  0215                     	;# 
   134  0216                     	;# 
   135  0216                     	;# 
   136  0217                     	;# 
   137  0217                     	;# 
   138  0219                     	;# 
   139  021A                     	;# 
   140  021B                     	;# 
   141  021C                     	;# 
   142  021D                     	;# 
   143  021E                     	;# 
   144  021F                     	;# 
   145  0291                     	;# 
   146  0291                     	;# 
   147  0292                     	;# 
   148  0293                     	;# 
   149  0294                     	;# 
   150  0295                     	;# 
   151  0295                     	;# 
   152  0296                     	;# 
   153  0298                     	;# 
   154  0298                     	;# 
   155  0299                     	;# 
   156  029A                     	;# 
   157  029B                     	;# 
   158  029C                     	;# 
   159  029C                     	;# 
   160  029D                     	;# 
   161  029E                     	;# 
   162  029E                     	;# 
   163  0311                     	;# 
   164  0311                     	;# 
   165  0312                     	;# 
   166  0313                     	;# 
   167  0318                     	;# 
   168  0318                     	;# 
   169  0319                     	;# 
   170  031A                     	;# 
   171  0394                     	;# 
   172  0395                     	;# 
   173  0396                     	;# 
   174  039A                     	;# 
   175  039C                     	;# 
   176  039D                     	;# 
   177  039E                     	;# 
   178  039F                     	;# 
   179  0415                     	;# 
   180  0416                     	;# 
   181  0417                     	;# 
   182  041C                     	;# 
   183  041D                     	;# 
   184  041E                     	;# 
   185  0FE4                     	;# 
   186  0FE5                     	;# 
   187  0FE6                     	;# 
   188  0FE7                     	;# 
   189  0FE8                     	;# 
   190  0FE9                     	;# 
   191  0FEA                     	;# 
   192  0FEB                     	;# 
   193  0FED                     	;# 
   194  0FEE                     	;# 
   195  0FEF                     	;# 
   196  0000                     	;# 
   197  0001                     	;# 
   198  0002                     	;# 
   199  0003                     	;# 
   200  0004                     	;# 
   201  0005                     	;# 
   202  0006                     	;# 
   203  0007                     	;# 
   204  0008                     	;# 
   205  0009                     	;# 
   206  000A                     	;# 
   207  000B                     	;# 
   208  000C                     	;# 
   209  000D                     	;# 
   210  0011                     	;# 
   211  0012                     	;# 
   212  0013                     	;# 
   213  0014                     	;# 
   214  0015                     	;# 
   215  0016                     	;# 
   216  0016                     	;# 
   217  0017                     	;# 
   218  0018                     	;# 
   219  0019                     	;# 
   220  001A                     	;# 
   221  001B                     	;# 
   222  001C                     	;# 
   223  001E                     	;# 
   224  001F                     	;# 
   225  008C                     	;# 
   226  008D                     	;# 
   227  0091                     	;# 
   228  0092                     	;# 
   229  0093                     	;# 
   230  0094                     	;# 
   231  0095                     	;# 
   232  0096                     	;# 
   233  0097                     	;# 
   234  0098                     	;# 
   235  0099                     	;# 
   236  009A                     	;# 
   237  009B                     	;# 
   238  009B                     	;# 
   239  009C                     	;# 
   240  009D                     	;# 
   241  009E                     	;# 
   242  010C                     	;# 
   243  010D                     	;# 
   244  0111                     	;# 
   245  0112                     	;# 
   246  0113                     	;# 
   247  0114                     	;# 
   248  0115                     	;# 
   249  0116                     	;# 
   250  0117                     	;# 
   251  0118                     	;# 
   252  0119                     	;# 
   253  011A                     	;# 
   254  011B                     	;# 
   255  011D                     	;# 
   256  011E                     	;# 
   257  018C                     	;# 
   258  018D                     	;# 
   259  0191                     	;# 
   260  0191                     	;# 
   261  0192                     	;# 
   262  0193                     	;# 
   263  0193                     	;# 
   264  0193                     	;# 
   265  0194                     	;# 
   266  0195                     	;# 
   267  0196                     	;# 
   268  0199                     	;# 
   269  019A                     	;# 
   270  019B                     	;# 
   271  019B                     	;# 
   272  019B                     	;# 
   273  019B                     	;# 
   274  019C                     	;# 
   275  019C                     	;# 
   276  019D                     	;# 
   277  019E                     	;# 
   278  019F                     	;# 
   279  020C                     	;# 
   280  020D                     	;# 
   281  0211                     	;# 
   282  0211                     	;# 
   283  0212                     	;# 
   284  0212                     	;# 
   285  0213                     	;# 
   286  0213                     	;# 
   287  0214                     	;# 
   288  0214                     	;# 
   289  0215                     	;# 
   290  0215                     	;# 
   291  0215                     	;# 
   292  0216                     	;# 
   293  0216                     	;# 
   294  0217                     	;# 
   295  0217                     	;# 
   296  0219                     	;# 
   297  021A                     	;# 
   298  021B                     	;# 
   299  021C                     	;# 
   300  021D                     	;# 
   301  021E                     	;# 
   302  021F                     	;# 
   303  0291                     	;# 
   304  0291                     	;# 
   305  0292                     	;# 
   306  0293                     	;# 
   307  0294                     	;# 
   308  0295                     	;# 
   309  0295                     	;# 
   310  0296                     	;# 
   311  0298                     	;# 
   312  0298                     	;# 
   313  0299                     	;# 
   314  029A                     	;# 
   315  029B                     	;# 
   316  029C                     	;# 
   317  029C                     	;# 
   318  029D                     	;# 
   319  029E                     	;# 
   320  029E                     	;# 
   321  0311                     	;# 
   322  0311                     	;# 
   323  0312                     	;# 
   324  0313                     	;# 
   325  0318                     	;# 
   326  0318                     	;# 
   327  0319                     	;# 
   328  031A                     	;# 
   329  0394                     	;# 
   330  0395                     	;# 
   331  0396                     	;# 
   332  039A                     	;# 
   333  039C                     	;# 
   334  039D                     	;# 
   335  039E                     	;# 
   336  039F                     	;# 
   337  0415                     	;# 
   338  0416                     	;# 
   339  0417                     	;# 
   340  041C                     	;# 
   341  041D                     	;# 
   342  041E                     	;# 
   343  0FE4                     	;# 
   344  0FE5                     	;# 
   345  0FE6                     	;# 
   346  0FE7                     	;# 
   347  0FE8                     	;# 
   348  0FE9                     	;# 
   349  0FEA                     	;# 
   350  0FEB                     	;# 
   351  0FED                     	;# 
   352  0FEE                     	;# 
   353  0FEF                     	;# 
   354                           
   355                           	psect	idataBANK0
   356  0377                     __pidataBANK0:	
   357                           
   358                           ;initializer for error2@F2802
   359  0377  340B               	retlw	11
   360  0378  3400               	retlw	0
   361  0379  340B               	retlw	11
   362  037A  3400               	retlw	0
   363                           
   364                           ;initializer for error2@F2804
   365  037B  3401               	retlw	1
   366  037C  3400               	retlw	0
   367  037D  3401               	retlw	1
   368  037E  3400               	retlw	0
   369  000C                     _PORTA	set	12
   370  000D                     _PORTB	set	13
   371  0093                     _BCL1IF	set	147
   372  005F                     _GIE	set	95
   373  005E                     _PEIE	set	94
   374  0060                     _RA0	set	96
   375  0061                     _RA1	set	97
   376  0062                     _RA2	set	98
   377  0063                     _RA3	set	99
   378  0066                     _RA6	set	102
   379  0067                     _RA7	set	103
   380  006A                     _RB2	set	106
   381  006D                     _RB5	set	109
   382  006E                     _RB6	set	110
   383  006F                     _RB7	set	111
   384  008B                     _SSP1IF	set	139
   385  0099                     _TMR4IF	set	153
   386  0099                     _OSCCON	set	153
   387  008C                     _TRISA	set	140
   388  008D                     _TRISB	set	141
   389  0493                     _BCL1IE	set	1171
   390  048B                     _SSP1IE	set	1163
   391  0499                     _TMR4IE	set	1177
   392  018C                     _ANSELA	set	396
   393  018D                     _ANSELB	set	397
   394  0212                     _SSP1ADD	set	530
   395  0211                     _SSP1BUF	set	529
   396  0215                     _SSP1CON1	set	533
   397  0215                     _SSP1CON1bits	set	533
   398  0216                     _SSP1CON2bits	set	534
   399  0214                     _SSP1STAT	set	532
   400  0214                     _SSP1STATbits	set	532
   401  0416                     _PR4	set	1046
   402  0417                     _T4CON	set	1047
   403  0415                     _TMR4	set	1045
   404  20BA                     _TMR4ON	set	8378
   405                           
   406                           ; #config settings
   407  0000                     
   408                           	psect	cinit
   409  0028                     start_initialization:	
   410  0028                     __initialization:	
   411                           
   412                           ; Initialize objects allocated to BANK0
   413  0028  3077               	movlw	low __pidataBANK0
   414  0029  0084               	movwf	4
   415  002A  3083               	movlw	(high __pidataBANK0)| (0+128)
   416  002B  0085               	movwf	5
   417  002C  3040               	movlw	low __pdataBANK0
   418  002D  0086               	movwf	6
   419  002E  3000               	movlw	high __pdataBANK0
   420  002F  0087               	movwf	7
   421  0030  3008               	movlw	8
   422  0031  3183  23BF         	fcall	init_ram
   423                           
   424                           ; Clear objects allocated to COMMON
   425  0033  01F9               	clrf	__pbssCOMMON& (0+127)
   426                           
   427                           ; Clear objects allocated to BANK0
   428  0034  01C8               	clrf	__pbssBANK0& (0+127)
   429  0035                     end_of_initialization:	
   430                           ;End of C runtime variable initialization code
   431                           
   432  0035                     __end_of__initialization:	
   433  0035  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   434  0036  0020               	movlb	0
   435  0037  3183  2B5E         	ljmp	_main	;jump to C main() function
   436                           
   437                           	psect	bssCOMMON
   438  0079                     __pbssCOMMON:	
   439  0079                     _counter:	
   440  0079                     	ds	1
   441                           
   442                           	psect	bssBANK0
   443  0048                     __pbssBANK0:	
   444  0048                     _received_data:	
   445  0048                     	ds	1
   446                           
   447                           	psect	dataBANK0
   448  0040                     __pdataBANK0:	
   449  0040                     error2@F2802:	
   450  0040                     	ds	4
   451  0044                     error2@F2804:	
   452  0044                     	ds	4
   453                           
   454                           	psect	inittext
   455  03BF                     init_ram:	
   456  03BF  00FE               	movwf	126
   457  03C0                     initloop:	
   458  03C0  0012               	moviw fsr0++
   459  03C1  001E               	movwi fsr1++
   460  03C2  0BFE               	decfsz	126,f
   461  03C3  2BC0               	goto	initloop
   462  03C4  3400               	retlw	0
   463                           
   464                           	psect	cstackCOMMON
   465  0070                     __pcstackCOMMON:	
   466  0070                     ?_init:	
   467  0070                     ?_init_Timer4:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0070                     ?_init_I2C_slave:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  0070                     ?_loop:	
   474                           ; 1 bytes @ 0x0
   475                           
   476  0070                     ?_error2:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0070                     ?_close2:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0070                     ?_interrupt_I2C:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  0070                     ??_interrupt_I2C:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0070                     ?_interruption:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  0070                     ?_main:	
   492                           ; 1 bytes @ 0x0
   493                           
   494                           
   495                           ; 1 bytes @ 0x0
   496  0070                     	ds	1
   497  0071                     interrupt_I2C@x:	
   498                           
   499                           ; 1 bytes @ 0x1
   500  0071                     	ds	1
   501  0072                     ??_interruption:	
   502                           
   503                           ; 1 bytes @ 0x2
   504  0072                     	ds	2
   505  0074                     ??_init:	
   506  0074                     ??_init_Timer4:	
   507                           ; 1 bytes @ 0x4
   508                           
   509  0074                     ??_init_I2C_slave:	
   510                           ; 1 bytes @ 0x4
   511                           
   512  0074                     ?_open2:	
   513                           ; 1 bytes @ 0x4
   514                           
   515  0074                     ?_wait:	
   516                           ; 1 bytes @ 0x4
   517                           
   518  0074                     ??_close2:	
   519                           ; 1 bytes @ 0x4
   520                           
   521  0074                     ?_set_a:	
   522                           ; 1 bytes @ 0x4
   523                           
   524  0074                     ?_set_b:	
   525                           ; 1 bytes @ 0x4
   526                           
   527  0074                     ?_set_c:	
   528                           ; 1 bytes @ 0x4
   529                           
   530  0074                     ?_set_d:	
   531                           ; 1 bytes @ 0x4
   532                           
   533  0074                     ?_set_e:	
   534                           ; 1 bytes @ 0x4
   535                           
   536  0074                     ?_set_f:	
   537                           ; 1 bytes @ 0x4
   538                           
   539  0074                     ?_set_g:	
   540                           ; 1 bytes @ 0x4
   541                           
   542  0074                     ?_set_p:	
   543                           ; 1 bytes @ 0x4
   544                           
   545  0074                     ?___wmul:	
   546                           ; 1 bytes @ 0x4
   547                           
   548  0074                     init_I2C_slave@addr:	
   549                           ; 2 bytes @ 0x4
   550                           
   551  0074                     set_a@on_off:	
   552                           ; 1 bytes @ 0x4
   553                           
   554  0074                     set_b@on_off:	
   555                           ; 2 bytes @ 0x4
   556                           
   557  0074                     set_c@on_off:	
   558                           ; 2 bytes @ 0x4
   559                           
   560  0074                     set_d@on_off:	
   561                           ; 2 bytes @ 0x4
   562                           
   563  0074                     set_e@on_off:	
   564                           ; 2 bytes @ 0x4
   565                           
   566  0074                     set_f@on_off:	
   567                           ; 2 bytes @ 0x4
   568                           
   569  0074                     set_g@on_off:	
   570                           ; 2 bytes @ 0x4
   571                           
   572  0074                     set_p@on_off:	
   573                           ; 2 bytes @ 0x4
   574                           
   575  0074                     open2@digit_select:	
   576                           ; 2 bytes @ 0x4
   577                           
   578  0074                     wait@wait_time:	
   579                           ; 2 bytes @ 0x4
   580                           
   581  0074                     ___wmul@multiplier:	
   582                           ; 2 bytes @ 0x4
   583                           
   584                           
   585                           ; 2 bytes @ 0x4
   586  0074                     	ds	2
   587  0076                     ?_set_num:	
   588  0076                     ??_open2:	
   589                           ; 1 bytes @ 0x6
   590                           
   591  0076                     ??_wait:	
   592                           ; 1 bytes @ 0x6
   593                           
   594  0076                     ??_set_a:	
   595                           ; 1 bytes @ 0x6
   596                           
   597  0076                     ??_set_b:	
   598                           ; 1 bytes @ 0x6
   599                           
   600  0076                     ??_set_c:	
   601                           ; 1 bytes @ 0x6
   602                           
   603  0076                     ??_set_d:	
   604                           ; 1 bytes @ 0x6
   605                           
   606  0076                     ??_set_e:	
   607                           ; 1 bytes @ 0x6
   608                           
   609  0076                     ??_set_f:	
   610                           ; 1 bytes @ 0x6
   611                           
   612  0076                     ??_set_g:	
   613                           ; 1 bytes @ 0x6
   614                           
   615  0076                     ??_set_p:	
   616                           ; 1 bytes @ 0x6
   617                           
   618  0076                     set_num@num:	
   619                           ; 1 bytes @ 0x6
   620                           
   621  0076                     ___wmul@multiplicand:	
   622                           ; 2 bytes @ 0x6
   623                           
   624                           
   625                           ; 2 bytes @ 0x6
   626  0076                     	ds	2
   627  0078                     ??_error2:	
   628  0078                     ??___wmul:	
   629                           ; 1 bytes @ 0x8
   630                           
   631  0078                     ??___lwdiv:	
   632                           ; 1 bytes @ 0x8
   633                           
   634                           
   635                           ; 1 bytes @ 0x8
   636  0078                     	ds	1
   637  0079                     ??_main:	
   638                           
   639                           	psect	cstackBANK0
   640  0020                     __pcstackBANK0:	
   641                           ; 1 bytes @ 0x9
   642                           
   643  0020                     ??_set_num:	
   644  0020                     wait@i:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0020                     ___wmul@product:	
   648                           ; 2 bytes @ 0x0
   649                           
   650                           
   651                           ; 2 bytes @ 0x0
   652  0020                     	ds	2
   653  0022                     ?___lwdiv:	
   654  0022                     ___lwdiv@divisor:	
   655                           ; 2 bytes @ 0x2
   656                           
   657                           
   658                           ; 2 bytes @ 0x2
   659  0022                     	ds	1
   660  0023                     ?_light2:	
   661  0023                     light2@dot:	
   662                           ; 1 bytes @ 0x3
   663                           
   664                           
   665                           ; 1 bytes @ 0x3
   666  0023                     	ds	1
   667  0024                     ??_light2:	
   668  0024                     ___lwdiv@dividend:	
   669                           ; 1 bytes @ 0x4
   670                           
   671                           
   672                           ; 2 bytes @ 0x4
   673  0024                     	ds	2
   674  0026                     ___lwdiv@counter:	
   675                           
   676                           ; 1 bytes @ 0x6
   677  0026                     	ds	1
   678  0027                     light2@num:	
   679  0027                     ___lwdiv@quotient:	
   680                           ; 2 bytes @ 0x7
   681                           
   682                           
   683                           ; 2 bytes @ 0x7
   684  0027                     	ds	2
   685  0029                     ?___lwmod:	
   686  0029                     light2@digit:	
   687                           ; 2 bytes @ 0x9
   688                           
   689  0029                     ___lwmod@divisor:	
   690                           ; 1 bytes @ 0x9
   691                           
   692                           
   693                           ; 2 bytes @ 0x9
   694  0029                     	ds	1
   695  002A                     light2@i:	
   696                           
   697                           ; 2 bytes @ 0xA
   698  002A                     	ds	1
   699  002B                     ___lwmod@dividend:	
   700                           
   701                           ; 2 bytes @ 0xB
   702  002B                     	ds	1
   703  002C                     error2@error_dot:	
   704                           
   705                           ; 4 bytes @ 0xC
   706  002C                     	ds	1
   707  002D                     ??___lwmod:	
   708                           
   709                           ; 1 bytes @ 0xD
   710  002D                     	ds	1
   711  002E                     ___lwmod@counter:	
   712                           
   713                           ; 1 bytes @ 0xE
   714  002E                     	ds	1
   715  002F                     ?_num_digits_conv:	
   716  002F                     num_digits_conv@digit:	
   717                           ; 1 bytes @ 0xF
   718                           
   719                           
   720                           ; 1 bytes @ 0xF
   721  002F                     	ds	1
   722  0030                     num_digits_conv@dot:	
   723  0030                     error2@error_digit:	
   724                           ; 1 bytes @ 0x10
   725                           
   726                           
   727                           ; 4 bytes @ 0x10
   728  0030                     	ds	1
   729  0031                     ??_num_digits_conv:	
   730                           
   731                           ; 1 bytes @ 0x11
   732  0031                     	ds	2
   733  0033                     num_digits_conv@data:	
   734                           
   735                           ; 1 bytes @ 0x13
   736  0033                     	ds	1
   737  0034                     num_digits_conv@num:	
   738                           
   739                           ; 2 bytes @ 0x14
   740  0034                     	ds	2
   741  0036                     ??_loop:	
   742                           
   743                           ; 1 bytes @ 0x16
   744  0036                     	ds	2
   745  0038                     loop@dot:	
   746                           
   747                           ; 4 bytes @ 0x18
   748  0038                     	ds	4
   749  003C                     loop@digit:	
   750                           
   751                           ; 4 bytes @ 0x1C
   752  003C                     	ds	4
   753                           
   754                           	psect	maintext
   755  035E                     __pmaintext:	
   756 ;;
   757 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   758 ;;
   759 ;; *************** function _main *****************
   760 ;; Defined at:
   761 ;;		line 59 in file "main.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;		None
   764 ;; Auto vars:     Size  Location     Type
   765 ;;		None
   766 ;; Return value:  Size  Location     Type
   767 ;;                  1    wreg      void 
   768 ;; Registers used:
   769 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   770 ;; Tracked objects:
   771 ;;		On entry : B1F/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   775 ;;      Params:         0       0       0       0       0       0
   776 ;;      Locals:         0       0       0       0       0       0
   777 ;;      Temps:          0       0       0       0       0       0
   778 ;;      Totals:         0       0       0       0       0       0
   779 ;;Total ram usage:        0 bytes
   780 ;; Hardware stack levels required when called:    7
   781 ;; This function calls:
   782 ;;		_init
   783 ;;		_init_I2C_slave
   784 ;;		_init_Timer4
   785 ;;		_loop
   786 ;; This function is called by:
   787 ;;		Startup code after reset
   788 ;; This function uses a non-reentrant model
   789 ;;
   790                           
   791                           
   792                           ;psect for function _main
   793  035E                     _main:	
   794                           
   795                           ;main.c: 60: init();
   796                           
   797                           ;incstack = 0
   798                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   799  035E  3183  233E  3183   	fcall	_init
   800                           
   801                           ;main.c: 61: init_Timer4();
   802  0361  3183  236C  3183   	fcall	_init_Timer4
   803                           
   804                           ;main.c: 62: init_I2C_slave(0x02);
   805  0364  3002               	movlw	2
   806  0365  3183  232E  3183   	fcall	_init_I2C_slave
   807  0368                     l1326:	
   808                           ;main.c: 64: while(1){
   809                           
   810                           
   811                           ;main.c: 65: loop();
   812  0368  3182  22CE  3183   	fcall	_loop
   813  036B  2B68               	goto	l1326
   814  036C                     __end_of_main:	
   815                           ;main.c: 66: }
   816                           ;main.c: 67: return;
   817                           
   818                           
   819                           	psect	text1
   820  02CE                     __ptext1:	
   821 ;; *************** function _loop *****************
   822 ;; Defined at:
   823 ;;		line 101 in file "main.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;		None
   826 ;; Auto vars:     Size  Location     Type
   827 ;;  digit           4   28[BANK0 ] int [2]
   828 ;;  dot             4   24[BANK0 ] int [2]
   829 ;; Return value:  Size  Location     Type
   830 ;;                  1    wreg      void 
   831 ;; Registers used:
   832 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   833 ;; Tracked objects:
   834 ;;		On entry : 0/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   838 ;;      Params:         0       0       0       0       0       0
   839 ;;      Locals:         0       8       0       0       0       0
   840 ;;      Temps:          0       2       0       0       0       0
   841 ;;      Totals:         0      10       0       0       0       0
   842 ;;Total ram usage:       10 bytes
   843 ;; Hardware stack levels used:    1
   844 ;; Hardware stack levels required when called:    6
   845 ;; This function calls:
   846 ;;		_error2
   847 ;;		_light2
   848 ;;		_num_digits_conv
   849 ;; This function is called by:
   850 ;;		_main
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           
   855                           ;psect for function _loop
   856  02CE                     _loop:	
   857                           
   858                           ;main.c: 102: int digit[2];
   859                           ;main.c: 103: int dot[2];
   860                           ;main.c: 105: if (counter < 16) {
   861                           
   862                           ;incstack = 0
   863                           ; Regs used in _loop: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   864  02CE  3010               	movlw	16
   865  02CF  0279               	subwf	_counter,w
   866  02D0  1803               	skipnc
   867  02D1  2AE8               	goto	l1322
   868                           
   869                           ;main.c: 106: num_digits_conv(received_data, digit, dot);
   870  02D2  303C               	movlw	(low (loop@digit| 0))& (0+255)
   871  02D3  0020               	movlb	0	; select bank0
   872  02D4  00B6               	movwf	??_loop
   873  02D5  0836               	movf	??_loop,w
   874  02D6  00AF               	movwf	num_digits_conv@digit
   875  02D7  3038               	movlw	(low (loop@dot| 0))& (0+255)
   876  02D8  00B7               	movwf	??_loop+1
   877  02D9  0837               	movf	??_loop+1,w
   878  02DA  00B0               	movwf	num_digits_conv@dot
   879  02DB  0848               	movf	_received_data,w
   880  02DC  3181  21C6  3182   	fcall	_num_digits_conv
   881                           
   882                           ;main.c: 107: light2(digit, dot);
   883  02DF  3038               	movlw	(low (loop@dot| 0))& (0+255)
   884  02E0  0020               	movlb	0	; select bank0
   885  02E1  00B6               	movwf	??_loop
   886  02E2  0836               	movf	??_loop,w
   887  02E3  00A3               	movwf	light2@dot
   888  02E4  303C               	movlw	(low (loop@digit| 0))& (0+255)
   889  02E5  3180  2039         	fcall	_light2
   890                           
   891                           ;main.c: 108: } else {
   892  02E7  0008               	return
   893  02E8                     l1322:	
   894                           
   895                           ;main.c: 109: error2();
   896  02E8  3183  2305         	fcall	_error2
   897  02EA  0008               	return
   898  02EB                     __end_of_loop:	
   899                           
   900                           	psect	text2
   901  01C6                     __ptext2:	
   902 ;; *************** function _num_digits_conv *****************
   903 ;; Defined at:
   904 ;;		line 113 in file "main.c"
   905 ;; Parameters:    Size  Location     Type
   906 ;;  data            1    wreg     unsigned char 
   907 ;;  digit           1   15[BANK0 ] PTR int 
   908 ;;		 -> loop@digit(4), 
   909 ;;  dot             1   16[BANK0 ] PTR int 
   910 ;;		 -> loop@dot(4), 
   911 ;; Auto vars:     Size  Location     Type
   912 ;;  data            1   19[BANK0 ] unsigned char 
   913 ;;  num             2   20[BANK0 ] unsigned int 
   914 ;; Return value:  Size  Location     Type
   915 ;;                  1    wreg      void 
   916 ;; Registers used:
   917 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   923 ;;      Params:         0       2       0       0       0       0
   924 ;;      Locals:         0       3       0       0       0       0
   925 ;;      Temps:          0       2       0       0       0       0
   926 ;;      Totals:         0       7       0       0       0       0
   927 ;;Total ram usage:        7 bytes
   928 ;; Hardware stack levels used:    1
   929 ;; Hardware stack levels required when called:    3
   930 ;; This function calls:
   931 ;;		___lwdiv
   932 ;;		___lwmod
   933 ;;		___wmul
   934 ;; This function is called by:
   935 ;;		_loop
   936 ;; This function uses a non-reentrant model
   937 ;;
   938                           
   939                           
   940                           ;psect for function _num_digits_conv
   941  01C6                     _num_digits_conv:	
   942                           
   943                           ;incstack = 0
   944                           ; Regs used in _num_digits_conv: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   945                           ;num_digits_conv@data stored from wreg
   946  01C6  0020               	movlb	0	; select bank0
   947  01C7  00B3               	movwf	num_digits_conv@data
   948                           
   949                           ;main.c: 114: unsigned int num = ((unsigned int)data * 120) / 255;
   950  01C8  30FF               	movlw	255
   951  01C9  00A2               	movwf	___lwdiv@divisor
   952  01CA  3000               	movlw	0
   953  01CB  00A3               	movwf	___lwdiv@divisor+1
   954  01CC  0833               	movf	num_digits_conv@data,w
   955  01CD  00B1               	movwf	??_num_digits_conv
   956  01CE  01B2               	clrf	??_num_digits_conv+1
   957  01CF  0831               	movf	??_num_digits_conv,w
   958  01D0  00F4               	movwf	___wmul@multiplier
   959  01D1  0832               	movf	??_num_digits_conv+1,w
   960  01D2  00F5               	movwf	___wmul@multiplier+1
   961  01D3  3078               	movlw	120
   962  01D4  00F6               	movwf	___wmul@multiplicand
   963  01D5  3000               	movlw	0
   964  01D6  00F7               	movwf	___wmul@multiplicand+1
   965  01D7  3182  22B0  3181   	fcall	___wmul
   966  01DA  0875               	movf	?___wmul+1,w
   967  01DB  0020               	movlb	0	; select bank0
   968  01DC  00A5               	movwf	___lwdiv@dividend+1
   969  01DD  0874               	movf	?___wmul,w
   970  01DE  00A4               	movwf	___lwdiv@dividend
   971  01DF  3182  224E  3181   	fcall	___lwdiv
   972  01E2  0020               	movlb	0	; select bank0
   973  01E3  0823               	movf	?___lwdiv+1,w
   974  01E4  00B5               	movwf	num_digits_conv@num+1
   975  01E5  0822               	movf	?___lwdiv,w
   976  01E6  00B4               	movwf	num_digits_conv@num
   977                           
   978                           ;main.c: 116: if (num >= 100) {
   979  01E7  3000               	movlw	0
   980  01E8  0235               	subwf	num_digits_conv@num+1,w
   981  01E9  3064               	movlw	100
   982  01EA  1903               	skipnz
   983  01EB  0234               	subwf	num_digits_conv@num,w
   984  01EC  1C03               	skipc
   985  01ED  2A0D               	goto	l1306
   986                           
   987                           ;main.c: 117: num /= 10;
   988  01EE  300A               	movlw	10
   989  01EF  00A2               	movwf	___lwdiv@divisor
   990  01F0  3000               	movlw	0
   991  01F1  00A3               	movwf	___lwdiv@divisor+1
   992  01F2  0835               	movf	num_digits_conv@num+1,w
   993  01F3  00A5               	movwf	___lwdiv@dividend+1
   994  01F4  0834               	movf	num_digits_conv@num,w
   995  01F5  00A4               	movwf	___lwdiv@dividend
   996  01F6  3182  224E  3181   	fcall	___lwdiv
   997  01F9  0020               	movlb	0	; select bank0
   998  01FA  0823               	movf	?___lwdiv+1,w
   999  01FB  00B5               	movwf	num_digits_conv@num+1
  1000  01FC  0822               	movf	?___lwdiv,w
  1001  01FD  00B4               	movwf	num_digits_conv@num
  1002                           
  1003                           ;main.c: 118: dot[0] = 1;
  1004  01FE  0830               	movf	num_digits_conv@dot,w
  1005  01FF  0086               	movwf	6
  1006  0200  0187               	clrf	7
  1007  0201  3001               	movlw	1
  1008  0202  3FC0               	movwi [0]fsr1
  1009  0203  3000               	movlw	0
  1010  0204  3FC1               	movwi [1]fsr1
  1011                           
  1012                           ;main.c: 119: dot[1] = 0;
  1013  0205  0830               	movf	num_digits_conv@dot,w
  1014  0206  3E02               	addlw	2
  1015  0207  0086               	movwf	6
  1016  0208  0187               	clrf	7
  1017  0209  3000               	movlw	0
  1018  020A  3FC0               	movwi [0]fsr1
  1019  020B  3FC1               	movwi [1]fsr1
  1020                           
  1021                           ;main.c: 120: } else {
  1022  020C  2A1B               	goto	l1310
  1023  020D                     l1306:	
  1024                           
  1025                           ;main.c: 121: dot[0] = 0;
  1026  020D  0830               	movf	num_digits_conv@dot,w
  1027  020E  0086               	movwf	6
  1028  020F  0187               	clrf	7
  1029  0210  3000               	movlw	0
  1030  0211  3FC0               	movwi [0]fsr1
  1031  0212  3FC1               	movwi [1]fsr1
  1032                           
  1033                           ;main.c: 122: dot[1] = 1;
  1034  0213  0830               	movf	num_digits_conv@dot,w
  1035  0214  3E02               	addlw	2
  1036  0215  0086               	movwf	6
  1037  0216  0187               	clrf	7
  1038  0217  3001               	movlw	1
  1039  0218  3FC0               	movwi [0]fsr1
  1040  0219  3000               	movlw	0
  1041  021A  3FC1               	movwi [1]fsr1
  1042  021B                     l1310:	
  1043                           
  1044                           ;main.c: 123: }
  1045                           ;main.c: 125: digit[0] = num % 10;
  1046  021B  300A               	movlw	10
  1047  021C  00A9               	movwf	___lwmod@divisor
  1048  021D  3000               	movlw	0
  1049  021E  00AA               	movwf	___lwmod@divisor+1
  1050  021F  0835               	movf	num_digits_conv@num+1,w
  1051  0220  00AC               	movwf	___lwmod@dividend+1
  1052  0221  0834               	movf	num_digits_conv@num,w
  1053  0222  00AB               	movwf	___lwmod@dividend
  1054  0223  3182  2283  3181   	fcall	___lwmod
  1055  0226  0020               	movlb	0	; select bank0
  1056  0227  082F               	movf	num_digits_conv@digit,w
  1057  0228  0086               	movwf	6
  1058  0229  0187               	clrf	7
  1059  022A  0829               	movf	?___lwmod,w
  1060  022B  3FC0               	movwi [0]fsr1
  1061  022C  082A               	movf	?___lwmod+1,w
  1062  022D  3FC1               	movwi [1]fsr1
  1063                           
  1064                           ;main.c: 126: digit[1] = (num / 10) % 10;
  1065  022E  300A               	movlw	10
  1066  022F  00A9               	movwf	___lwmod@divisor
  1067  0230  3000               	movlw	0
  1068  0231  00AA               	movwf	___lwmod@divisor+1
  1069  0232  300A               	movlw	10
  1070  0233  00A2               	movwf	___lwdiv@divisor
  1071  0234  3000               	movlw	0
  1072  0235  00A3               	movwf	___lwdiv@divisor+1
  1073  0236  0835               	movf	num_digits_conv@num+1,w
  1074  0237  00A5               	movwf	___lwdiv@dividend+1
  1075  0238  0834               	movf	num_digits_conv@num,w
  1076  0239  00A4               	movwf	___lwdiv@dividend
  1077  023A  3182  224E  3181   	fcall	___lwdiv
  1078  023D  0020               	movlb	0	; select bank0
  1079  023E  0823               	movf	?___lwdiv+1,w
  1080  023F  00AC               	movwf	___lwmod@dividend+1
  1081  0240  0822               	movf	?___lwdiv,w
  1082  0241  00AB               	movwf	___lwmod@dividend
  1083  0242  3182  2283         	fcall	___lwmod
  1084  0244  0020               	movlb	0	; select bank0
  1085  0245  082F               	movf	num_digits_conv@digit,w
  1086  0246  3E02               	addlw	2
  1087  0247  0086               	movwf	6
  1088  0248  0187               	clrf	7
  1089  0249  0829               	movf	?___lwmod,w
  1090  024A  3FC0               	movwi [0]fsr1
  1091  024B  082A               	movf	?___lwmod+1,w
  1092  024C  3FC1               	movwi [1]fsr1
  1093  024D  0008               	return
  1094  024E                     __end_of_num_digits_conv:	
  1095                           
  1096                           	psect	text3
  1097  02B0                     __ptext3:	
  1098 ;; *************** function ___wmul *****************
  1099 ;; Defined at:
  1100 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  1101 ;; Parameters:    Size  Location     Type
  1102 ;;  multiplier      2    4[COMMON] unsigned int 
  1103 ;;  multiplicand    2    6[COMMON] unsigned int 
  1104 ;; Auto vars:     Size  Location     Type
  1105 ;;  product         2    0[BANK0 ] unsigned int 
  1106 ;; Return value:  Size  Location     Type
  1107 ;;                  2    4[COMMON] unsigned int 
  1108 ;; Registers used:
  1109 ;;		wreg, status,2, status,0
  1110 ;; Tracked objects:
  1111 ;;		On entry : 0/0
  1112 ;;		On exit  : 0/0
  1113 ;;		Unchanged: 0/0
  1114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1115 ;;      Params:         4       0       0       0       0       0
  1116 ;;      Locals:         0       2       0       0       0       0
  1117 ;;      Temps:          0       0       0       0       0       0
  1118 ;;      Totals:         4       2       0       0       0       0
  1119 ;;Total ram usage:        6 bytes
  1120 ;; Hardware stack levels used:    1
  1121 ;; Hardware stack levels required when called:    2
  1122 ;; This function calls:
  1123 ;;		Nothing
  1124 ;; This function is called by:
  1125 ;;		_num_digits_conv
  1126 ;; This function uses a non-reentrant model
  1127 ;;
  1128                           
  1129                           
  1130                           ;psect for function ___wmul
  1131  02B0                     ___wmul:	
  1132                           
  1133                           ;incstack = 0
  1134                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1135  02B0  0020               	movlb	0	; select bank0
  1136  02B1  01A0               	clrf	___wmul@product
  1137  02B2  01A1               	clrf	___wmul@product+1
  1138  02B3                     l1258:	
  1139  02B3  1C74               	btfss	___wmul@multiplier,0
  1140  02B4  2ABA               	goto	l316
  1141  02B5  0876               	movf	___wmul@multiplicand,w
  1142  02B6  0020               	movlb	0	; select bank0
  1143  02B7  07A0               	addwf	___wmul@product,f
  1144  02B8  0877               	movf	___wmul@multiplicand+1,w
  1145  02B9  3DA1               	addwfc	___wmul@product+1,f
  1146  02BA                     l316:	
  1147  02BA  3001               	movlw	1
  1148  02BB                     u1425:	
  1149  02BB  35F6               	lslf	___wmul@multiplicand,f
  1150  02BC  0DF7               	rlf	___wmul@multiplicand+1,f
  1151  02BD  0B89               	decfsz	9,f
  1152  02BE  2ABB               	goto	u1425
  1153  02BF  3001               	movlw	1
  1154  02C0                     u1435:	
  1155  02C0  36F5               	lsrf	___wmul@multiplier+1,f
  1156  02C1  0CF4               	rrf	___wmul@multiplier,f
  1157  02C2  0B89               	decfsz	9,f
  1158  02C3  2AC0               	goto	u1435
  1159  02C4  0874               	movf	___wmul@multiplier,w
  1160  02C5  0475               	iorwf	___wmul@multiplier+1,w
  1161  02C6  1D03               	btfss	3,2
  1162  02C7  2AB3               	goto	l1258
  1163  02C8  0020               	movlb	0	; select bank0
  1164  02C9  0821               	movf	___wmul@product+1,w
  1165  02CA  00F5               	movwf	?___wmul+1
  1166  02CB  0820               	movf	___wmul@product,w
  1167  02CC  00F4               	movwf	?___wmul
  1168  02CD  0008               	return
  1169  02CE                     __end_of___wmul:	
  1170                           
  1171                           	psect	text4
  1172  0283                     __ptext4:	
  1173 ;; *************** function ___lwmod *****************
  1174 ;; Defined at:
  1175 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;  divisor         2    9[BANK0 ] unsigned int 
  1178 ;;  dividend        2   11[BANK0 ] unsigned int 
  1179 ;; Auto vars:     Size  Location     Type
  1180 ;;  counter         1   14[BANK0 ] unsigned char 
  1181 ;; Return value:  Size  Location     Type
  1182 ;;                  2    9[BANK0 ] unsigned int 
  1183 ;; Registers used:
  1184 ;;		wreg, status,2, status,0
  1185 ;; Tracked objects:
  1186 ;;		On entry : 0/0
  1187 ;;		On exit  : 0/0
  1188 ;;		Unchanged: 0/0
  1189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1190 ;;      Params:         0       4       0       0       0       0
  1191 ;;      Locals:         0       1       0       0       0       0
  1192 ;;      Temps:          0       1       0       0       0       0
  1193 ;;      Totals:         0       6       0       0       0       0
  1194 ;;Total ram usage:        6 bytes
  1195 ;; Hardware stack levels used:    1
  1196 ;; Hardware stack levels required when called:    2
  1197 ;; This function calls:
  1198 ;;		Nothing
  1199 ;; This function is called by:
  1200 ;;		_num_digits_conv
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204                           
  1205                           ;psect for function ___lwmod
  1206  0283                     ___lwmod:	
  1207                           
  1208                           ;incstack = 0
  1209                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1210  0283  0020               	movlb	0	; select bank0
  1211  0284  0829               	movf	___lwmod@divisor,w
  1212  0285  042A               	iorwf	___lwmod@divisor+1,w
  1213  0286  1903               	btfsc	3,2
  1214  0287  2AAB               	goto	l1118
  1215  0288  01AE               	clrf	___lwmod@counter
  1216  0289  0AAE               	incf	___lwmod@counter,f
  1217  028A                     l1108:	
  1218  028A  1BAA               	btfsc	___lwmod@divisor+1,7
  1219  028B  2A96               	goto	l1110
  1220  028C  3001               	movlw	1
  1221  028D                     u1135:	
  1222  028D  35A9               	lslf	___lwmod@divisor,f
  1223  028E  0DAA               	rlf	___lwmod@divisor+1,f
  1224  028F  0B89               	decfsz	9,f
  1225  0290  2A8D               	goto	u1135
  1226  0291  3001               	movlw	1
  1227  0292  00AD               	movwf	??___lwmod
  1228  0293  082D               	movf	??___lwmod,w
  1229  0294  07AE               	addwf	___lwmod@counter,f
  1230  0295  2A8A               	goto	l1108
  1231  0296                     l1110:	
  1232  0296  082A               	movf	___lwmod@divisor+1,w
  1233  0297  022C               	subwf	___lwmod@dividend+1,w
  1234  0298  1D03               	skipz
  1235  0299  2A9C               	goto	u1155
  1236  029A  0829               	movf	___lwmod@divisor,w
  1237  029B  022B               	subwf	___lwmod@dividend,w
  1238  029C                     u1155:	
  1239  029C  1C03               	skipc
  1240  029D  2AA2               	goto	l1114
  1241  029E  0829               	movf	___lwmod@divisor,w
  1242  029F  02AB               	subwf	___lwmod@dividend,f
  1243  02A0  082A               	movf	___lwmod@divisor+1,w
  1244  02A1  3BAC               	subwfb	___lwmod@dividend+1,f
  1245  02A2                     l1114:	
  1246  02A2  3001               	movlw	1
  1247  02A3                     u1165:	
  1248  02A3  36AA               	lsrf	___lwmod@divisor+1,f
  1249  02A4  0CA9               	rrf	___lwmod@divisor,f
  1250  02A5  0B89               	decfsz	9,f
  1251  02A6  2AA3               	goto	u1165
  1252  02A7  3001               	movlw	1
  1253  02A8  02AE               	subwf	___lwmod@counter,f
  1254  02A9  1D03               	btfss	3,2
  1255  02AA  2A96               	goto	l1110
  1256  02AB                     l1118:	
  1257  02AB  082C               	movf	___lwmod@dividend+1,w
  1258  02AC  00AA               	movwf	?___lwmod+1
  1259  02AD  082B               	movf	___lwmod@dividend,w
  1260  02AE  00A9               	movwf	?___lwmod
  1261  02AF  0008               	return
  1262  02B0                     __end_of___lwmod:	
  1263                           
  1264                           	psect	text5
  1265  024E                     __ptext5:	
  1266 ;; *************** function ___lwdiv *****************
  1267 ;; Defined at:
  1268 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  1269 ;; Parameters:    Size  Location     Type
  1270 ;;  divisor         2    2[BANK0 ] unsigned int 
  1271 ;;  dividend        2    4[BANK0 ] unsigned int 
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;  quotient        2    7[BANK0 ] unsigned int 
  1274 ;;  counter         1    6[BANK0 ] unsigned char 
  1275 ;; Return value:  Size  Location     Type
  1276 ;;                  2    2[BANK0 ] unsigned int 
  1277 ;; Registers used:
  1278 ;;		wreg, status,2, status,0
  1279 ;; Tracked objects:
  1280 ;;		On entry : 0/0
  1281 ;;		On exit  : 0/0
  1282 ;;		Unchanged: 0/0
  1283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1284 ;;      Params:         0       4       0       0       0       0
  1285 ;;      Locals:         0       3       0       0       0       0
  1286 ;;      Temps:          1       0       0       0       0       0
  1287 ;;      Totals:         1       7       0       0       0       0
  1288 ;;Total ram usage:        8 bytes
  1289 ;; Hardware stack levels used:    1
  1290 ;; Hardware stack levels required when called:    2
  1291 ;; This function calls:
  1292 ;;		Nothing
  1293 ;; This function is called by:
  1294 ;;		_num_digits_conv
  1295 ;; This function uses a non-reentrant model
  1296 ;;
  1297                           
  1298                           
  1299                           ;psect for function ___lwdiv
  1300  024E                     ___lwdiv:	
  1301                           
  1302                           ;incstack = 0
  1303                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1304  024E  0020               	movlb	0	; select bank0
  1305  024F  01A7               	clrf	___lwdiv@quotient
  1306  0250  01A8               	clrf	___lwdiv@quotient+1
  1307  0251  0822               	movf	___lwdiv@divisor,w
  1308  0252  0423               	iorwf	___lwdiv@divisor+1,w
  1309  0253  1903               	btfsc	3,2
  1310  0254  2A7E               	goto	l1292
  1311  0255  01A6               	clrf	___lwdiv@counter
  1312  0256  0AA6               	incf	___lwdiv@counter,f
  1313  0257                     l1280:	
  1314  0257  1BA3               	btfsc	___lwdiv@divisor+1,7
  1315  0258  2A63               	goto	l1282
  1316  0259  3001               	movlw	1
  1317  025A                     u1465:	
  1318  025A  35A2               	lslf	___lwdiv@divisor,f
  1319  025B  0DA3               	rlf	___lwdiv@divisor+1,f
  1320  025C  0B89               	decfsz	9,f
  1321  025D  2A5A               	goto	u1465
  1322  025E  3001               	movlw	1
  1323  025F  00F8               	movwf	??___lwdiv
  1324  0260  0878               	movf	??___lwdiv,w
  1325  0261  07A6               	addwf	___lwdiv@counter,f
  1326  0262  2A57               	goto	l1280
  1327  0263                     l1282:	
  1328  0263  3001               	movlw	1
  1329  0264                     u1485:	
  1330  0264  35A7               	lslf	___lwdiv@quotient,f
  1331  0265  0DA8               	rlf	___lwdiv@quotient+1,f
  1332  0266  0B89               	decfsz	9,f
  1333  0267  2A64               	goto	u1485
  1334  0268  0823               	movf	___lwdiv@divisor+1,w
  1335  0269  0225               	subwf	___lwdiv@dividend+1,w
  1336  026A  1D03               	skipz
  1337  026B  2A6E               	goto	u1495
  1338  026C  0822               	movf	___lwdiv@divisor,w
  1339  026D  0224               	subwf	___lwdiv@dividend,w
  1340  026E                     u1495:	
  1341  026E  1C03               	skipc
  1342  026F  2A75               	goto	l1288
  1343  0270  0822               	movf	___lwdiv@divisor,w
  1344  0271  02A4               	subwf	___lwdiv@dividend,f
  1345  0272  0823               	movf	___lwdiv@divisor+1,w
  1346  0273  3BA5               	subwfb	___lwdiv@dividend+1,f
  1347  0274  1427               	bsf	___lwdiv@quotient,0
  1348  0275                     l1288:	
  1349  0275  3001               	movlw	1
  1350  0276                     u1505:	
  1351  0276  36A3               	lsrf	___lwdiv@divisor+1,f
  1352  0277  0CA2               	rrf	___lwdiv@divisor,f
  1353  0278  0B89               	decfsz	9,f
  1354  0279  2A76               	goto	u1505
  1355  027A  3001               	movlw	1
  1356  027B  02A6               	subwf	___lwdiv@counter,f
  1357  027C  1D03               	btfss	3,2
  1358  027D  2A63               	goto	l1282
  1359  027E                     l1292:	
  1360  027E  0828               	movf	___lwdiv@quotient+1,w
  1361  027F  00A3               	movwf	?___lwdiv+1
  1362  0280  0827               	movf	___lwdiv@quotient,w
  1363  0281  00A2               	movwf	?___lwdiv
  1364  0282  0008               	return
  1365  0283                     __end_of___lwdiv:	
  1366                           
  1367                           	psect	text6
  1368  0305                     __ptext6:	
  1369 ;; *************** function _error2 *****************
  1370 ;; Defined at:
  1371 ;;		line 58 in file "display.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;		None
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;  error_digit     4   16[BANK0 ] int [2]
  1376 ;;  error_dot       4   12[BANK0 ] int [2]
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  1    wreg      void 
  1379 ;; Registers used:
  1380 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1386 ;;      Params:         0       0       0       0       0       0
  1387 ;;      Locals:         0       8       0       0       0       0
  1388 ;;      Temps:          1       0       0       0       0       0
  1389 ;;      Totals:         1       8       0       0       0       0
  1390 ;;Total ram usage:        9 bytes
  1391 ;; Hardware stack levels used:    1
  1392 ;; Hardware stack levels required when called:    5
  1393 ;; This function calls:
  1394 ;;		_light2
  1395 ;; This function is called by:
  1396 ;;		_loop
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           
  1401                           ;psect for function _error2
  1402  0305                     _error2:	
  1403                           
  1404                           ;display.c: 59: int error_digit[2] = { 11, 11 };
  1405                           
  1406                           ;incstack = 0
  1407                           ; Regs used in _error2: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1408  0305  0020               	movlb	0	; select bank0
  1409  0306  0843               	movf	error2@F2802+3,w
  1410  0307  00B3               	movwf	error2@error_digit+3
  1411  0308  0842               	movf	error2@F2802+2,w
  1412  0309  00B2               	movwf	error2@error_digit+2
  1413  030A  0841               	movf	error2@F2802+1,w
  1414  030B  00B1               	movwf	error2@error_digit+1
  1415  030C  0840               	movf	error2@F2802,w
  1416  030D  00B0               	movwf	error2@error_digit
  1417                           
  1418                           ;display.c: 60: int error_dot[2] = { 1, 1 };
  1419  030E  0847               	movf	error2@F2804+3,w
  1420  030F  00AF               	movwf	error2@error_dot+3
  1421  0310  0846               	movf	error2@F2804+2,w
  1422  0311  00AE               	movwf	error2@error_dot+2
  1423  0312  0845               	movf	error2@F2804+1,w
  1424  0313  00AD               	movwf	error2@error_dot+1
  1425  0314  0844               	movf	error2@F2804,w
  1426  0315  00AC               	movwf	error2@error_dot
  1427                           
  1428                           ;display.c: 61: light2(error_digit, error_dot);
  1429  0316  302C               	movlw	(low (error2@error_dot| 0))& (0+255)
  1430  0317  00F8               	movwf	??_error2
  1431  0318  0878               	movf	??_error2,w
  1432  0319  00A3               	movwf	light2@dot
  1433  031A  3030               	movlw	(low (error2@error_digit| 0))& (0+255)
  1434  031B  3180  2039         	fcall	_light2
  1435  031D  0008               	return
  1436  031E                     __end_of_error2:	
  1437                           
  1438                           	psect	text7
  1439  0039                     __ptext7:	
  1440 ;; *************** function _light2 *****************
  1441 ;; Defined at:
  1442 ;;		line 22 in file "display.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;  digit           1    wreg     PTR int 
  1445 ;;		 -> error2@error_digit(4), loop@digit(4), 
  1446 ;;  dot             1    3[BANK0 ] PTR int 
  1447 ;;		 -> error2@error_dot(4), loop@dot(4), 
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;  digit           1    9[BANK0 ] PTR int 
  1450 ;;		 -> error2@error_digit(4), loop@digit(4), 
  1451 ;;  i               2   10[BANK0 ] int 
  1452 ;;  num             2    7[BANK0 ] int 
  1453 ;; Return value:  Size  Location     Type
  1454 ;;                  1    wreg      void 
  1455 ;; Registers used:
  1456 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1457 ;; Tracked objects:
  1458 ;;		On entry : 0/0
  1459 ;;		On exit  : 0/0
  1460 ;;		Unchanged: 0/0
  1461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1462 ;;      Params:         0       1       0       0       0       0
  1463 ;;      Locals:         0       5       0       0       0       0
  1464 ;;      Temps:          0       3       0       0       0       0
  1465 ;;      Totals:         0       9       0       0       0       0
  1466 ;;Total ram usage:        9 bytes
  1467 ;; Hardware stack levels used:    1
  1468 ;; Hardware stack levels required when called:    4
  1469 ;; This function calls:
  1470 ;;		_close2
  1471 ;;		_open2
  1472 ;;		_set_num
  1473 ;;		_wait
  1474 ;; This function is called by:
  1475 ;;		_loop
  1476 ;;		_error2
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480                           
  1481                           ;psect for function _light2
  1482  0039                     _light2:	
  1483                           
  1484                           ;incstack = 0
  1485                           ; Regs used in _light2: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1486                           ;light2@digit stored from wreg
  1487  0039  0020               	movlb	0	; select bank0
  1488  003A  00A9               	movwf	light2@digit
  1489                           
  1490                           ;display.c: 23: int i;
  1491                           ;display.c: 24: int num;
  1492                           ;display.c: 25: for (i=0; i<2; i++) {
  1493  003B  01AA               	clrf	light2@i
  1494  003C  01AB               	clrf	light2@i+1
  1495  003D                     L12:	
  1496  003D  082B               	movf	light2@i+1,w
  1497  003E  3A80               	xorlw	128
  1498  003F  00A4               	movwf	??_light2
  1499  0040  3080               	movlw	128
  1500  0041  0224               	subwf	??_light2,w
  1501  0042  1D03               	skipz
  1502  0043  2846               	goto	u1265
  1503  0044  3002               	movlw	2
  1504  0045  022A               	subwf	light2@i,w
  1505  0046                     u1265:	
  1506  0046  1803               	btfsc	3,0
  1507  0047  0008               	return
  1508                           
  1509                           ;display.c: 26: num = 0;
  1510  0048  0020               	movlb	0	; select bank0
  1511  0049  01A7               	clrf	light2@num
  1512  004A  01A8               	clrf	light2@num+1
  1513                           
  1514                           ;display.c: 29: if (digit[i] == 0) { num = 0b00111111; }
  1515  004B  352A               	lslf	light2@i,w
  1516  004C  0729               	addwf	light2@digit,w
  1517  004D  00A4               	movwf	??_light2
  1518  004E  0824               	movf	??_light2,w
  1519  004F  0086               	movwf	6
  1520  0050  0187               	clrf	7
  1521  0051  0016               	moviw fsr1++
  1522  0052  0401               	iorwf	1,w
  1523  0053  1D03               	btfss	3,2
  1524  0054  2857               	goto	l1196
  1525  0055  303F               	movlw	63
  1526  0056  28FA               	goto	L11
  1527  0057                     l1196:	
  1528                           
  1529                           ;display.c: 30: else if (digit[i] == 1) { num = 0b00000110; }
  1530  0057  352A               	lslf	light2@i,w
  1531  0058  0729               	addwf	light2@digit,w
  1532  0059  00A4               	movwf	??_light2
  1533  005A  0824               	movf	??_light2,w
  1534  005B  0086               	movwf	6
  1535  005C  0187               	clrf	7
  1536  005D  0016               	moviw fsr1++
  1537  005E  3A01               	xorlw	1
  1538  005F  00A5               	movwf	??_light2+1
  1539  0060  0016               	moviw fsr1++
  1540  0061  04A5               	iorwf	??_light2+1,f
  1541  0062  1D03               	btfss	3,2
  1542  0063  2866               	goto	l1200
  1543  0064  3006               	movlw	6
  1544  0065  28FA               	goto	L11
  1545  0066                     l1200:	
  1546                           
  1547                           ;display.c: 31: else if (digit[i] == 2) { num = 0b01011011; }
  1548  0066  352A               	lslf	light2@i,w
  1549  0067  0729               	addwf	light2@digit,w
  1550  0068  00A4               	movwf	??_light2
  1551  0069  0824               	movf	??_light2,w
  1552  006A  0086               	movwf	6
  1553  006B  0187               	clrf	7
  1554  006C  0016               	moviw fsr1++
  1555  006D  3A02               	xorlw	2
  1556  006E  00A5               	movwf	??_light2+1
  1557  006F  0016               	moviw fsr1++
  1558  0070  04A5               	iorwf	??_light2+1,f
  1559  0071  1D03               	btfss	3,2
  1560  0072  2875               	goto	l1204
  1561  0073  305B               	movlw	91
  1562  0074  28FA               	goto	L11
  1563  0075                     l1204:	
  1564                           
  1565                           ;display.c: 32: else if (digit[i] == 3) { num = 0b01001111; }
  1566  0075  352A               	lslf	light2@i,w
  1567  0076  0729               	addwf	light2@digit,w
  1568  0077  00A4               	movwf	??_light2
  1569  0078  0824               	movf	??_light2,w
  1570  0079  0086               	movwf	6
  1571  007A  0187               	clrf	7
  1572  007B  0016               	moviw fsr1++
  1573  007C  3A03               	xorlw	3
  1574  007D  00A5               	movwf	??_light2+1
  1575  007E  0016               	moviw fsr1++
  1576  007F  04A5               	iorwf	??_light2+1,f
  1577  0080  1D03               	btfss	3,2
  1578  0081  2884               	goto	l1208
  1579  0082  304F               	movlw	79
  1580  0083  28FA               	goto	L11
  1581  0084                     l1208:	
  1582                           
  1583                           ;display.c: 33: else if (digit[i] == 4) { num = 0b01100110; }
  1584  0084  352A               	lslf	light2@i,w
  1585  0085  0729               	addwf	light2@digit,w
  1586  0086  00A4               	movwf	??_light2
  1587  0087  0824               	movf	??_light2,w
  1588  0088  0086               	movwf	6
  1589  0089  0187               	clrf	7
  1590  008A  0016               	moviw fsr1++
  1591  008B  3A04               	xorlw	4
  1592  008C  00A5               	movwf	??_light2+1
  1593  008D  0016               	moviw fsr1++
  1594  008E  04A5               	iorwf	??_light2+1,f
  1595  008F  1D03               	btfss	3,2
  1596  0090  2893               	goto	l1212
  1597  0091  3066               	movlw	102
  1598  0092  28FA               	goto	L11
  1599  0093                     l1212:	
  1600                           
  1601                           ;display.c: 34: else if (digit[i] == 5) { num = 0b01101101; }
  1602  0093  352A               	lslf	light2@i,w
  1603  0094  0729               	addwf	light2@digit,w
  1604  0095  00A4               	movwf	??_light2
  1605  0096  0824               	movf	??_light2,w
  1606  0097  0086               	movwf	6
  1607  0098  0187               	clrf	7
  1608  0099  0016               	moviw fsr1++
  1609  009A  3A05               	xorlw	5
  1610  009B  00A5               	movwf	??_light2+1
  1611  009C  0016               	moviw fsr1++
  1612  009D  04A5               	iorwf	??_light2+1,f
  1613  009E  1D03               	btfss	3,2
  1614  009F  28A2               	goto	l1216
  1615  00A0  306D               	movlw	109
  1616  00A1  28FA               	goto	L11
  1617  00A2                     l1216:	
  1618                           
  1619                           ;display.c: 35: else if (digit[i] == 6) { num = 0b01111101; }
  1620  00A2  352A               	lslf	light2@i,w
  1621  00A3  0729               	addwf	light2@digit,w
  1622  00A4  00A4               	movwf	??_light2
  1623  00A5  0824               	movf	??_light2,w
  1624  00A6  0086               	movwf	6
  1625  00A7  0187               	clrf	7
  1626  00A8  0016               	moviw fsr1++
  1627  00A9  3A06               	xorlw	6
  1628  00AA  00A5               	movwf	??_light2+1
  1629  00AB  0016               	moviw fsr1++
  1630  00AC  04A5               	iorwf	??_light2+1,f
  1631  00AD  1D03               	btfss	3,2
  1632  00AE  28B1               	goto	l1220
  1633  00AF  307D               	movlw	125
  1634  00B0  28FA               	goto	L11
  1635  00B1                     l1220:	
  1636                           
  1637                           ;display.c: 36: else if (digit[i] == 7) { num = 0b00100111; }
  1638  00B1  352A               	lslf	light2@i,w
  1639  00B2  0729               	addwf	light2@digit,w
  1640  00B3  00A4               	movwf	??_light2
  1641  00B4  0824               	movf	??_light2,w
  1642  00B5  0086               	movwf	6
  1643  00B6  0187               	clrf	7
  1644  00B7  0016               	moviw fsr1++
  1645  00B8  3A07               	xorlw	7
  1646  00B9  00A5               	movwf	??_light2+1
  1647  00BA  0016               	moviw fsr1++
  1648  00BB  04A5               	iorwf	??_light2+1,f
  1649  00BC  1D03               	btfss	3,2
  1650  00BD  28C0               	goto	l1224
  1651  00BE  3027               	movlw	39
  1652  00BF  28FA               	goto	L11
  1653  00C0                     l1224:	
  1654                           
  1655                           ;display.c: 37: else if (digit[i] == 8) { num = 0b01111111; }
  1656  00C0  352A               	lslf	light2@i,w
  1657  00C1  0729               	addwf	light2@digit,w
  1658  00C2  00A4               	movwf	??_light2
  1659  00C3  0824               	movf	??_light2,w
  1660  00C4  0086               	movwf	6
  1661  00C5  0187               	clrf	7
  1662  00C6  0016               	moviw fsr1++
  1663  00C7  3A08               	xorlw	8
  1664  00C8  00A5               	movwf	??_light2+1
  1665  00C9  0016               	moviw fsr1++
  1666  00CA  04A5               	iorwf	??_light2+1,f
  1667  00CB  1D03               	btfss	3,2
  1668  00CC  28CF               	goto	l1228
  1669  00CD  307F               	movlw	127
  1670  00CE  28FA               	goto	L11
  1671  00CF                     l1228:	
  1672                           
  1673                           ;display.c: 38: else if (digit[i] == 9) { num = 0b01101111; }
  1674  00CF  352A               	lslf	light2@i,w
  1675  00D0  0729               	addwf	light2@digit,w
  1676  00D1  00A4               	movwf	??_light2
  1677  00D2  0824               	movf	??_light2,w
  1678  00D3  0086               	movwf	6
  1679  00D4  0187               	clrf	7
  1680  00D5  0016               	moviw fsr1++
  1681  00D6  3A09               	xorlw	9
  1682  00D7  00A5               	movwf	??_light2+1
  1683  00D8  0016               	moviw fsr1++
  1684  00D9  04A5               	iorwf	??_light2+1,f
  1685  00DA  1D03               	btfss	3,2
  1686  00DB  28DE               	goto	l1232
  1687  00DC  306F               	movlw	111
  1688  00DD  28FA               	goto	L11
  1689  00DE                     l1232:	
  1690                           
  1691                           ;display.c: 39: else if (digit[i] == 10) { num = 0b00000000; }
  1692  00DE  352A               	lslf	light2@i,w
  1693  00DF  0729               	addwf	light2@digit,w
  1694  00E0  00A4               	movwf	??_light2
  1695  00E1  0824               	movf	??_light2,w
  1696  00E2  0086               	movwf	6
  1697  00E3  0187               	clrf	7
  1698  00E4  0016               	moviw fsr1++
  1699  00E5  3A0A               	xorlw	10
  1700  00E6  00A5               	movwf	??_light2+1
  1701  00E7  0016               	moviw fsr1++
  1702  00E8  04A5               	iorwf	??_light2+1,f
  1703  00E9  1D03               	btfss	3,2
  1704  00EA  28EE               	goto	l1236
  1705  00EB  01A7               	clrf	light2@num
  1706  00EC  01A8               	clrf	light2@num+1
  1707  00ED  28FD               	goto	l1242
  1708  00EE                     l1236:	
  1709                           
  1710                           ;display.c: 40: else if (digit[i] == 11) { num = 0b01111001; }
  1711  00EE  352A               	lslf	light2@i,w
  1712  00EF  0729               	addwf	light2@digit,w
  1713  00F0  00A4               	movwf	??_light2
  1714  00F1  0824               	movf	??_light2,w
  1715  00F2  0086               	movwf	6
  1716  00F3  0187               	clrf	7
  1717  00F4  0016               	moviw fsr1++
  1718  00F5  3A0B               	xorlw	11
  1719  00F6  00A5               	movwf	??_light2+1
  1720  00F7  0016               	moviw fsr1++
  1721  00F8  04A5               	iorwf	??_light2+1,f
  1722                           
  1723                           ;display.c: 41: else { num = 0b01111001; }
  1724  00F9  3079               	movlw	121
  1725  00FA                     L11:	
  1726  00FA  00A7               	movwf	light2@num
  1727  00FB  3000               	movlw	0
  1728  00FC  00A8               	movwf	light2@num+1
  1729  00FD                     l1242:	
  1730                           
  1731                           ;display.c: 44: if (dot[i] == 1) { num += 0b10000000; }
  1732  00FD  352A               	lslf	light2@i,w
  1733  00FE  0723               	addwf	light2@dot,w
  1734  00FF  00A4               	movwf	??_light2
  1735  0100  0824               	movf	??_light2,w
  1736  0101  0086               	movwf	6
  1737  0102  0187               	clrf	7
  1738  0103  0016               	moviw fsr1++
  1739  0104  3A01               	xorlw	1
  1740  0105  00A5               	movwf	??_light2+1
  1741  0106  0016               	moviw fsr1++
  1742  0107  04A5               	iorwf	??_light2+1,f
  1743  0108  1D03               	btfss	3,2
  1744  0109  290E               	goto	l1246
  1745  010A  3080               	movlw	128
  1746  010B  07A7               	addwf	light2@num,f
  1747  010C  3000               	movlw	0
  1748  010D  3DA8               	addwfc	light2@num+1,f
  1749  010E                     l1246:	
  1750                           
  1751                           ;display.c: 46: set_num(num);
  1752  010E  0828               	movf	light2@num+1,w
  1753  010F  00F7               	movwf	set_num@num+1
  1754  0110  0827               	movf	light2@num,w
  1755  0111  00F6               	movwf	set_num@num
  1756  0112  3181  212D  3180   	fcall	_set_num
  1757                           
  1758                           ;display.c: 47: open2(i);
  1759  0115  0020               	movlb	0	; select bank0
  1760  0116  082B               	movf	light2@i+1,w
  1761  0117  00F5               	movwf	open2@digit_select+1
  1762  0118  082A               	movf	light2@i,w
  1763  0119  00F4               	movwf	open2@digit_select
  1764  011A  3183  231E  3180   	fcall	_open2
  1765                           
  1766                           ;display.c: 48: wait(5);
  1767  011D  3005               	movlw	5
  1768  011E  00F4               	movwf	wait@wait_time
  1769  011F  3000               	movlw	0
  1770  0120  00F5               	movwf	wait@wait_time+1
  1771  0121  3182  22EB  3180   	fcall	_wait
  1772                           
  1773                           ;display.c: 49: close2();
  1774  0124  3183  23C5  3180   	fcall	_close2
  1775  0127  3001               	movlw	1
  1776  0128  0020               	movlb	0	; select bank0
  1777  0129  07AA               	addwf	light2@i,f
  1778  012A  3000               	movlw	0
  1779  012B  3DAB               	addwfc	light2@i+1,f
  1780  012C  283D               	goto	L12
  1781  012D                     __end_of_light2:	
  1782                           
  1783                           	psect	text8
  1784  02EB                     __ptext8:	
  1785 ;; *************** function _wait *****************
  1786 ;; Defined at:
  1787 ;;		line 114 in file "display.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;  wait_time       2    4[COMMON] unsigned int 
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;  i               2    0[BANK0 ] int 
  1792 ;; Return value:  Size  Location     Type
  1793 ;;                  1    wreg      void 
  1794 ;; Registers used:
  1795 ;;		wreg, status,2
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1801 ;;      Params:         2       0       0       0       0       0
  1802 ;;      Locals:         0       2       0       0       0       0
  1803 ;;      Temps:          2       0       0       0       0       0
  1804 ;;      Totals:         4       2       0       0       0       0
  1805 ;;Total ram usage:        6 bytes
  1806 ;; Hardware stack levels used:    1
  1807 ;; Hardware stack levels required when called:    2
  1808 ;; This function calls:
  1809 ;;		Nothing
  1810 ;; This function is called by:
  1811 ;;		_light2
  1812 ;; This function uses a non-reentrant model
  1813 ;;
  1814                           
  1815                           
  1816                           ;psect for function _wait
  1817  02EB                     _wait:	
  1818                           
  1819                           ;display.c: 115: int i;
  1820                           ;display.c: 116: for (i=0; i<wait_time; i++) {
  1821                           
  1822                           ;incstack = 0
  1823                           ; Regs used in _wait: [wreg+status,2]
  1824  02EB  0020               	movlb	0	; select bank0
  1825  02EC  01A0               	clrf	wait@i
  1826  02ED  01A1               	clrf	wait@i+1
  1827  02EE                     l229:	
  1828  02EE  0875               	movf	wait@wait_time+1,w
  1829  02EF  0221               	subwf	wait@i+1,w
  1830  02F0  1D03               	skipz
  1831  02F1  2AF4               	goto	u1255
  1832  02F2  0874               	movf	wait@wait_time,w
  1833  02F3  0220               	subwf	wait@i,w
  1834  02F4                     u1255:	
  1835  02F4  1803               	btfsc	3,0
  1836  02F5  0008               	return
  1837                           
  1838                           ;display.c: 117: _delay((unsigned long)((1)*(16000000/4000.0)));
  1839  02F6  3006               	movlw	6
  1840  02F7  00F7               	movwf	??_wait+1
  1841  02F8  3030               	movlw	48
  1842  02F9  00F6               	movwf	??_wait
  1843  02FA                     u1547:	
  1844  02FA  0BF6               	decfsz	??_wait,f
  1845  02FB  2AFA               	goto	u1547
  1846  02FC  0BF7               	decfsz	??_wait+1,f
  1847  02FD  2AFA               	goto	u1547
  1848  02FE  0000               	nop
  1849  02FF  3001               	movlw	1
  1850  0300  0020               	movlb	0	; select bank0
  1851  0301  07A0               	addwf	wait@i,f
  1852  0302  3000               	movlw	0
  1853  0303  3DA1               	addwfc	wait@i+1,f
  1854  0304  2AEE               	goto	l229
  1855  0305                     __end_of_wait:	
  1856                           
  1857                           	psect	text9
  1858  012D                     __ptext9:	
  1859 ;; *************** function _set_num *****************
  1860 ;; Defined at:
  1861 ;;		line 68 in file "display.c"
  1862 ;; Parameters:    Size  Location     Type
  1863 ;;  num             2    6[COMMON] int 
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;		None
  1866 ;; Return value:  Size  Location     Type
  1867 ;;                  1    wreg      void 
  1868 ;; Registers used:
  1869 ;;		wreg, status,2, status,0, pclath, cstack
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1875 ;;      Params:         2       0       0       0       0       0
  1876 ;;      Locals:         0       0       0       0       0       0
  1877 ;;      Temps:          0       3       0       0       0       0
  1878 ;;      Totals:         2       3       0       0       0       0
  1879 ;;Total ram usage:        5 bytes
  1880 ;; Hardware stack levels used:    1
  1881 ;; Hardware stack levels required when called:    3
  1882 ;; This function calls:
  1883 ;;		_set_a
  1884 ;;		_set_b
  1885 ;;		_set_c
  1886 ;;		_set_d
  1887 ;;		_set_e
  1888 ;;		_set_f
  1889 ;;		_set_g
  1890 ;;		_set_p
  1891 ;; This function is called by:
  1892 ;;		_light2
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           
  1897                           ;psect for function _set_num
  1898  012D                     _set_num:	
  1899                           
  1900                           ;display.c: 69: set_a((num & 0b00000001));
  1901                           
  1902                           ;incstack = 0
  1903                           ; Regs used in _set_num: [wreg+status,2+status,0+pclath+cstack]
  1904  012D  3001               	movlw	1
  1905  012E  0576               	andwf	set_num@num,w
  1906  012F  00F4               	movwf	set_a@on_off
  1907  0130  3000               	movlw	0
  1908  0131  0577               	andwf	set_num@num+1,w
  1909  0132  00F5               	movwf	set_a@on_off+1
  1910  0133  3183  23B7  3181   	fcall	_set_a
  1911                           
  1912                           ;display.c: 70: set_b((num & 0b00000010) >> 1);
  1913  0136  0877               	movf	set_num@num+1,w
  1914  0137  0020               	movlb	0	; select bank0
  1915  0138  00A1               	movwf	??_set_num+1
  1916  0139  0876               	movf	set_num@num,w
  1917  013A  00A0               	movwf	??_set_num
  1918  013B  0D21               	rlf	??_set_num+1,w
  1919  013C  0CA1               	rrf	??_set_num+1,f
  1920  013D  0CA0               	rrf	??_set_num,f
  1921  013E  3001               	movlw	1
  1922  013F  0520               	andwf	??_set_num,w
  1923  0140  00F4               	movwf	set_b@on_off
  1924  0141  3000               	movlw	0
  1925  0142  0521               	andwf	??_set_num+1,w
  1926  0143  00F5               	movwf	set_b@on_off+1
  1927  0144  3183  23AF  3181   	fcall	_set_b
  1928                           
  1929                           ;display.c: 71: set_c((num & 0b00000100) >> 2);
  1930  0147  0877               	movf	set_num@num+1,w
  1931  0148  0020               	movlb	0	; select bank0
  1932  0149  00A1               	movwf	??_set_num+1
  1933  014A  0876               	movf	set_num@num,w
  1934  014B  00A0               	movwf	??_set_num
  1935  014C  0D21               	rlf	??_set_num+1,w
  1936  014D  0CA1               	rrf	??_set_num+1,f
  1937  014E  0CA0               	rrf	??_set_num,f
  1938  014F  0D21               	rlf	??_set_num+1,w
  1939  0150  0CA1               	rrf	??_set_num+1,f
  1940  0151  0CA0               	rrf	??_set_num,f
  1941  0152  3001               	movlw	1
  1942  0153  0520               	andwf	??_set_num,w
  1943  0154  00F4               	movwf	set_c@on_off
  1944  0155  3000               	movlw	0
  1945  0156  0521               	andwf	??_set_num+1,w
  1946  0157  00F5               	movwf	set_c@on_off+1
  1947  0158  3183  23A7  3181   	fcall	_set_c
  1948                           
  1949                           ;display.c: 72: set_d((num & 0b00001000) >> 3);
  1950  015B  0877               	movf	set_num@num+1,w
  1951  015C  0020               	movlb	0	; select bank0
  1952  015D  00A1               	movwf	??_set_num+1
  1953  015E  0876               	movf	set_num@num,w
  1954  015F  00A0               	movwf	??_set_num
  1955  0160  0D21               	rlf	??_set_num+1,w
  1956  0161  0CA1               	rrf	??_set_num+1,f
  1957  0162  0CA0               	rrf	??_set_num,f
  1958  0163  0D21               	rlf	??_set_num+1,w
  1959  0164  0CA1               	rrf	??_set_num+1,f
  1960  0165  0CA0               	rrf	??_set_num,f
  1961  0166  0D21               	rlf	??_set_num+1,w
  1962  0167  0CA1               	rrf	??_set_num+1,f
  1963  0168  0CA0               	rrf	??_set_num,f
  1964  0169  3001               	movlw	1
  1965  016A  0520               	andwf	??_set_num,w
  1966  016B  00F4               	movwf	set_d@on_off
  1967  016C  3000               	movlw	0
  1968  016D  0521               	andwf	??_set_num+1,w
  1969  016E  00F5               	movwf	set_d@on_off+1
  1970  016F  3183  239F  3181   	fcall	_set_d
  1971                           
  1972                           ;display.c: 73: set_e((num & 0b00010000) >> 4);
  1973  0172  0877               	movf	set_num@num+1,w
  1974  0173  0020               	movlb	0	; select bank0
  1975  0174  00A1               	movwf	??_set_num+1
  1976  0175  0876               	movf	set_num@num,w
  1977  0176  00A0               	movwf	??_set_num
  1978  0177  3004               	movlw	4
  1979  0178  00A2               	movwf	??_set_num+2
  1980  0179                     u795:	
  1981  0179  0D21               	rlf	??_set_num+1,w
  1982  017A  0CA1               	rrf	??_set_num+1,f
  1983  017B  0CA0               	rrf	??_set_num,f
  1984  017C  0BA2               	decfsz	??_set_num+2,f
  1985  017D  2979               	goto	u795
  1986  017E  3001               	movlw	1
  1987  017F  0520               	andwf	??_set_num,w
  1988  0180  00F4               	movwf	set_e@on_off
  1989  0181  3000               	movlw	0
  1990  0182  0521               	andwf	??_set_num+1,w
  1991  0183  00F5               	movwf	set_e@on_off+1
  1992  0184  3183  2397  3181   	fcall	_set_e
  1993                           
  1994                           ;display.c: 74: set_f((num & 0b00100000) >> 5);
  1995  0187  0877               	movf	set_num@num+1,w
  1996  0188  0020               	movlb	0	; select bank0
  1997  0189  00A1               	movwf	??_set_num+1
  1998  018A  0876               	movf	set_num@num,w
  1999  018B  00A0               	movwf	??_set_num
  2000  018C  3005               	movlw	5
  2001  018D  00A2               	movwf	??_set_num+2
  2002  018E                     u805:	
  2003  018E  0D21               	rlf	??_set_num+1,w
  2004  018F  0CA1               	rrf	??_set_num+1,f
  2005  0190  0CA0               	rrf	??_set_num,f
  2006  0191  0BA2               	decfsz	??_set_num+2,f
  2007  0192  298E               	goto	u805
  2008  0193  3001               	movlw	1
  2009  0194  0520               	andwf	??_set_num,w
  2010  0195  00F4               	movwf	set_f@on_off
  2011  0196  3000               	movlw	0
  2012  0197  0521               	andwf	??_set_num+1,w
  2013  0198  00F5               	movwf	set_f@on_off+1
  2014  0199  3183  238F  3181   	fcall	_set_f
  2015                           
  2016                           ;display.c: 75: set_g((num & 0b01000000) >> 6);
  2017  019C  0877               	movf	set_num@num+1,w
  2018  019D  0020               	movlb	0	; select bank0
  2019  019E  00A1               	movwf	??_set_num+1
  2020  019F  0876               	movf	set_num@num,w
  2021  01A0  00A0               	movwf	??_set_num
  2022  01A1  3006               	movlw	6
  2023  01A2  00A2               	movwf	??_set_num+2
  2024  01A3                     u815:	
  2025  01A3  0D21               	rlf	??_set_num+1,w
  2026  01A4  0CA1               	rrf	??_set_num+1,f
  2027  01A5  0CA0               	rrf	??_set_num,f
  2028  01A6  0BA2               	decfsz	??_set_num+2,f
  2029  01A7  29A3               	goto	u815
  2030  01A8  3001               	movlw	1
  2031  01A9  0520               	andwf	??_set_num,w
  2032  01AA  00F4               	movwf	set_g@on_off
  2033  01AB  3000               	movlw	0
  2034  01AC  0521               	andwf	??_set_num+1,w
  2035  01AD  00F5               	movwf	set_g@on_off+1
  2036  01AE  3183  2387  3181   	fcall	_set_g
  2037                           
  2038                           ;display.c: 76: set_p((num & 0b10000000) >> 7);
  2039  01B1  0877               	movf	set_num@num+1,w
  2040  01B2  0020               	movlb	0	; select bank0
  2041  01B3  00A1               	movwf	??_set_num+1
  2042  01B4  0876               	movf	set_num@num,w
  2043  01B5  00A0               	movwf	??_set_num
  2044  01B6  3007               	movlw	7
  2045  01B7  00A2               	movwf	??_set_num+2
  2046  01B8                     u825:	
  2047  01B8  0D21               	rlf	??_set_num+1,w
  2048  01B9  0CA1               	rrf	??_set_num+1,f
  2049  01BA  0CA0               	rrf	??_set_num,f
  2050  01BB  0BA2               	decfsz	??_set_num+2,f
  2051  01BC  29B8               	goto	u825
  2052  01BD  3001               	movlw	1
  2053  01BE  0520               	andwf	??_set_num,w
  2054  01BF  00F4               	movwf	set_p@on_off
  2055  01C0  3000               	movlw	0
  2056  01C1  0521               	andwf	??_set_num+1,w
  2057  01C2  00F5               	movwf	set_p@on_off+1
  2058  01C3  3183  237F         	fcall	_set_p
  2059  01C5  0008               	return
  2060  01C6                     __end_of_set_num:	
  2061                           
  2062                           	psect	text10
  2063  037F                     __ptext10:	
  2064 ;; *************** function _set_p *****************
  2065 ;; Defined at:
  2066 ;;		line 90 in file "display.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;  on_off          2    4[COMMON] int 
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;		None
  2071 ;; Return value:  Size  Location     Type
  2072 ;;                  1    wreg      void 
  2073 ;; Registers used:
  2074 ;;		None
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2080 ;;      Params:         2       0       0       0       0       0
  2081 ;;      Locals:         0       0       0       0       0       0
  2082 ;;      Temps:          0       0       0       0       0       0
  2083 ;;      Totals:         2       0       0       0       0       0
  2084 ;;Total ram usage:        2 bytes
  2085 ;; Hardware stack levels used:    1
  2086 ;; Hardware stack levels required when called:    2
  2087 ;; This function calls:
  2088 ;;		Nothing
  2089 ;; This function is called by:
  2090 ;;		_set_num
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           
  2094                           
  2095                           ;psect for function _set_p
  2096  037F                     _set_p:	
  2097                           
  2098                           ;incstack = 0
  2099                           ; Regs used in _set_p: []
  2100  037F  1C74               	btfss	set_p@on_off,0
  2101  0380  2B84               	goto	u770
  2102  0381  0020               	movlb	0	; select bank0
  2103  0382  148C               	bsf	12,1	;volatile
  2104  0383  0008               	return
  2105  0384                     u770:	
  2106  0384  0020               	movlb	0	; select bank0
  2107  0385  108C               	bcf	12,1	;volatile
  2108  0386  0008               	return
  2109  0387                     __end_of_set_p:	
  2110                           
  2111                           	psect	text11
  2112  0387                     __ptext11:	
  2113 ;; *************** function _set_g *****************
  2114 ;; Defined at:
  2115 ;;		line 89 in file "display.c"
  2116 ;; Parameters:    Size  Location     Type
  2117 ;;  on_off          2    4[COMMON] int 
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;		None
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  1    wreg      void 
  2122 ;; Registers used:
  2123 ;;		None
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2129 ;;      Params:         2       0       0       0       0       0
  2130 ;;      Locals:         0       0       0       0       0       0
  2131 ;;      Temps:          0       0       0       0       0       0
  2132 ;;      Totals:         2       0       0       0       0       0
  2133 ;;Total ram usage:        2 bytes
  2134 ;; Hardware stack levels used:    1
  2135 ;; Hardware stack levels required when called:    2
  2136 ;; This function calls:
  2137 ;;		Nothing
  2138 ;; This function is called by:
  2139 ;;		_set_num
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           
  2144                           ;psect for function _set_g
  2145  0387                     _set_g:	
  2146                           
  2147                           ;incstack = 0
  2148                           ; Regs used in _set_g: []
  2149  0387  1C74               	btfss	set_g@on_off,0
  2150  0388  2B8C               	goto	u750
  2151  0389  0020               	movlb	0	; select bank0
  2152  038A  140C               	bsf	12,0	;volatile
  2153  038B  0008               	return
  2154  038C                     u750:	
  2155  038C  0020               	movlb	0	; select bank0
  2156  038D  100C               	bcf	12,0	;volatile
  2157  038E  0008               	return
  2158  038F                     __end_of_set_g:	
  2159                           
  2160                           	psect	text12
  2161  038F                     __ptext12:	
  2162 ;; *************** function _set_f *****************
  2163 ;; Defined at:
  2164 ;;		line 88 in file "display.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;  on_off          2    4[COMMON] int 
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;		None
  2169 ;; Return value:  Size  Location     Type
  2170 ;;                  1    wreg      void 
  2171 ;; Registers used:
  2172 ;;		None
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2178 ;;      Params:         2       0       0       0       0       0
  2179 ;;      Locals:         0       0       0       0       0       0
  2180 ;;      Temps:          0       0       0       0       0       0
  2181 ;;      Totals:         2       0       0       0       0       0
  2182 ;;Total ram usage:        2 bytes
  2183 ;; Hardware stack levels used:    1
  2184 ;; Hardware stack levels required when called:    2
  2185 ;; This function calls:
  2186 ;;		Nothing
  2187 ;; This function is called by:
  2188 ;;		_set_num
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191                           
  2192                           
  2193                           ;psect for function _set_f
  2194  038F                     _set_f:	
  2195                           
  2196                           ;incstack = 0
  2197                           ; Regs used in _set_f: []
  2198  038F  1C74               	btfss	set_f@on_off,0
  2199  0390  2B94               	goto	u730
  2200  0391  0020               	movlb	0	; select bank0
  2201  0392  178C               	bsf	12,7	;volatile
  2202  0393  0008               	return
  2203  0394                     u730:	
  2204  0394  0020               	movlb	0	; select bank0
  2205  0395  138C               	bcf	12,7	;volatile
  2206  0396  0008               	return
  2207  0397                     __end_of_set_f:	
  2208                           
  2209                           	psect	text13
  2210  0397                     __ptext13:	
  2211 ;; *************** function _set_e *****************
  2212 ;; Defined at:
  2213 ;;		line 87 in file "display.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;  on_off          2    4[COMMON] int 
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;		None
  2218 ;; Return value:  Size  Location     Type
  2219 ;;                  1    wreg      void 
  2220 ;; Registers used:
  2221 ;;		None
  2222 ;; Tracked objects:
  2223 ;;		On entry : 0/0
  2224 ;;		On exit  : 0/0
  2225 ;;		Unchanged: 0/0
  2226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2227 ;;      Params:         2       0       0       0       0       0
  2228 ;;      Locals:         0       0       0       0       0       0
  2229 ;;      Temps:          0       0       0       0       0       0
  2230 ;;      Totals:         2       0       0       0       0       0
  2231 ;;Total ram usage:        2 bytes
  2232 ;; Hardware stack levels used:    1
  2233 ;; Hardware stack levels required when called:    2
  2234 ;; This function calls:
  2235 ;;		Nothing
  2236 ;; This function is called by:
  2237 ;;		_set_num
  2238 ;; This function uses a non-reentrant model
  2239 ;;
  2240                           
  2241                           
  2242                           ;psect for function _set_e
  2243  0397                     _set_e:	
  2244                           
  2245                           ;incstack = 0
  2246                           ; Regs used in _set_e: []
  2247  0397  1C74               	btfss	set_e@on_off,0
  2248  0398  2B9C               	goto	u710
  2249  0399  0020               	movlb	0	; select bank0
  2250  039A  170C               	bsf	12,6	;volatile
  2251  039B  0008               	return
  2252  039C                     u710:	
  2253  039C  0020               	movlb	0	; select bank0
  2254  039D  130C               	bcf	12,6	;volatile
  2255  039E  0008               	return
  2256  039F                     __end_of_set_e:	
  2257                           
  2258                           	psect	text14
  2259  039F                     __ptext14:	
  2260 ;; *************** function _set_d *****************
  2261 ;; Defined at:
  2262 ;;		line 86 in file "display.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;  on_off          2    4[COMMON] int 
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;		None
  2267 ;; Return value:  Size  Location     Type
  2268 ;;                  1    wreg      void 
  2269 ;; Registers used:
  2270 ;;		None
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2276 ;;      Params:         2       0       0       0       0       0
  2277 ;;      Locals:         0       0       0       0       0       0
  2278 ;;      Temps:          0       0       0       0       0       0
  2279 ;;      Totals:         2       0       0       0       0       0
  2280 ;;Total ram usage:        2 bytes
  2281 ;; Hardware stack levels used:    1
  2282 ;; Hardware stack levels required when called:    2
  2283 ;; This function calls:
  2284 ;;		Nothing
  2285 ;; This function is called by:
  2286 ;;		_set_num
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           
  2290                           
  2291                           ;psect for function _set_d
  2292  039F                     _set_d:	
  2293                           
  2294                           ;incstack = 0
  2295                           ; Regs used in _set_d: []
  2296  039F  1C74               	btfss	set_d@on_off,0
  2297  03A0  2BA4               	goto	u690
  2298  03A1  0020               	movlb	0	; select bank0
  2299  03A2  178D               	bsf	13,7	;volatile
  2300  03A3  0008               	return
  2301  03A4                     u690:	
  2302  03A4  0020               	movlb	0	; select bank0
  2303  03A5  138D               	bcf	13,7	;volatile
  2304  03A6  0008               	return
  2305  03A7                     __end_of_set_d:	
  2306                           
  2307                           	psect	text15
  2308  03A7                     __ptext15:	
  2309 ;; *************** function _set_c *****************
  2310 ;; Defined at:
  2311 ;;		line 85 in file "display.c"
  2312 ;; Parameters:    Size  Location     Type
  2313 ;;  on_off          2    4[COMMON] int 
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;		None
  2316 ;; Return value:  Size  Location     Type
  2317 ;;                  1    wreg      void 
  2318 ;; Registers used:
  2319 ;;		None
  2320 ;; Tracked objects:
  2321 ;;		On entry : 0/0
  2322 ;;		On exit  : 0/0
  2323 ;;		Unchanged: 0/0
  2324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2325 ;;      Params:         2       0       0       0       0       0
  2326 ;;      Locals:         0       0       0       0       0       0
  2327 ;;      Temps:          0       0       0       0       0       0
  2328 ;;      Totals:         2       0       0       0       0       0
  2329 ;;Total ram usage:        2 bytes
  2330 ;; Hardware stack levels used:    1
  2331 ;; Hardware stack levels required when called:    2
  2332 ;; This function calls:
  2333 ;;		Nothing
  2334 ;; This function is called by:
  2335 ;;		_set_num
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339                           
  2340                           ;psect for function _set_c
  2341  03A7                     _set_c:	
  2342                           
  2343                           ;incstack = 0
  2344                           ; Regs used in _set_c: []
  2345  03A7  1C74               	btfss	set_c@on_off,0
  2346  03A8  2BAC               	goto	u670
  2347  03A9  0020               	movlb	0	; select bank0
  2348  03AA  170D               	bsf	13,6	;volatile
  2349  03AB  0008               	return
  2350  03AC                     u670:	
  2351  03AC  0020               	movlb	0	; select bank0
  2352  03AD  130D               	bcf	13,6	;volatile
  2353  03AE  0008               	return
  2354  03AF                     __end_of_set_c:	
  2355                           
  2356                           	psect	text16
  2357  03AF                     __ptext16:	
  2358 ;; *************** function _set_b *****************
  2359 ;; Defined at:
  2360 ;;		line 84 in file "display.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;  on_off          2    4[COMMON] int 
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;		None
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  1    wreg      void 
  2367 ;; Registers used:
  2368 ;;		None
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2374 ;;      Params:         2       0       0       0       0       0
  2375 ;;      Locals:         0       0       0       0       0       0
  2376 ;;      Temps:          0       0       0       0       0       0
  2377 ;;      Totals:         2       0       0       0       0       0
  2378 ;;Total ram usage:        2 bytes
  2379 ;; Hardware stack levels used:    1
  2380 ;; Hardware stack levels required when called:    2
  2381 ;; This function calls:
  2382 ;;		Nothing
  2383 ;; This function is called by:
  2384 ;;		_set_num
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           
  2389                           ;psect for function _set_b
  2390  03AF                     _set_b:	
  2391                           
  2392                           ;incstack = 0
  2393                           ; Regs used in _set_b: []
  2394  03AF  1C74               	btfss	set_b@on_off,0
  2395  03B0  2BB4               	goto	u650
  2396  03B1  0020               	movlb	0	; select bank0
  2397  03B2  168D               	bsf	13,5	;volatile
  2398  03B3  0008               	return
  2399  03B4                     u650:	
  2400  03B4  0020               	movlb	0	; select bank0
  2401  03B5  128D               	bcf	13,5	;volatile
  2402  03B6  0008               	return
  2403  03B7                     __end_of_set_b:	
  2404                           
  2405                           	psect	text17
  2406  03B7                     __ptext17:	
  2407 ;; *************** function _set_a *****************
  2408 ;; Defined at:
  2409 ;;		line 83 in file "display.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;  on_off          2    4[COMMON] int 
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;		None
  2414 ;; Return value:  Size  Location     Type
  2415 ;;                  1    wreg      void 
  2416 ;; Registers used:
  2417 ;;		None
  2418 ;; Tracked objects:
  2419 ;;		On entry : 0/0
  2420 ;;		On exit  : 0/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2423 ;;      Params:         2       0       0       0       0       0
  2424 ;;      Locals:         0       0       0       0       0       0
  2425 ;;      Temps:          0       0       0       0       0       0
  2426 ;;      Totals:         2       0       0       0       0       0
  2427 ;;Total ram usage:        2 bytes
  2428 ;; Hardware stack levels used:    1
  2429 ;; Hardware stack levels required when called:    2
  2430 ;; This function calls:
  2431 ;;		Nothing
  2432 ;; This function is called by:
  2433 ;;		_set_num
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           
  2438                           ;psect for function _set_a
  2439  03B7                     _set_a:	
  2440                           
  2441                           ;incstack = 0
  2442                           ; Regs used in _set_a: []
  2443  03B7  1C74               	btfss	set_a@on_off,0
  2444  03B8  2BBC               	goto	u630
  2445  03B9  0020               	movlb	0	; select bank0
  2446  03BA  150D               	bsf	13,2	;volatile
  2447  03BB  0008               	return
  2448  03BC                     u630:	
  2449  03BC  0020               	movlb	0	; select bank0
  2450  03BD  110D               	bcf	13,2	;volatile
  2451  03BE  0008               	return
  2452  03BF                     __end_of_set_a:	
  2453                           
  2454                           	psect	text18
  2455  031E                     __ptext18:	
  2456 ;; *************** function _open2 *****************
  2457 ;; Defined at:
  2458 ;;		line 96 in file "display.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;  digit_select    2    4[COMMON] int 
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;		None
  2463 ;; Return value:  Size  Location     Type
  2464 ;;                  1    wreg      void 
  2465 ;; Registers used:
  2466 ;;		wreg, status,2, status,0, pclath, cstack
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2472 ;;      Params:         2       0       0       0       0       0
  2473 ;;      Locals:         0       0       0       0       0       0
  2474 ;;      Temps:          0       0       0       0       0       0
  2475 ;;      Totals:         2       0       0       0       0       0
  2476 ;;Total ram usage:        2 bytes
  2477 ;; Hardware stack levels used:    1
  2478 ;; Hardware stack levels required when called:    3
  2479 ;; This function calls:
  2480 ;;		_close2
  2481 ;; This function is called by:
  2482 ;;		_light2
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486                           
  2487                           ;psect for function _open2
  2488  031E                     _open2:	
  2489                           
  2490                           ;display.c: 97: close2();
  2491                           
  2492                           ;incstack = 0
  2493                           ; Regs used in _open2: [wreg+status,2+status,0+pclath+cstack]
  2494  031E  3183  23C5  3183   	fcall	_close2
  2495                           
  2496                           ;display.c: 98: if (digit_select == 0) { RA3 = 1; }
  2497  0321  0874               	movf	open2@digit_select,w
  2498  0322  0475               	iorwf	open2@digit_select+1,w
  2499  0323  1D03               	btfss	3,2
  2500  0324  2B27               	goto	l980
  2501  0325  0020               	movlb	0	; select bank0
  2502  0326  158C               	bsf	12,3	;volatile
  2503  0327                     l980:	
  2504                           
  2505                           ;display.c: 99: if (digit_select == 1) { RA2 = 1; }
  2506  0327  0374               	decf	open2@digit_select,w
  2507  0328  0475               	iorwf	open2@digit_select+1,w
  2508  0329  1D03               	btfss	3,2
  2509  032A  0008               	return
  2510  032B  0020               	movlb	0	; select bank0
  2511  032C  150C               	bsf	12,2	;volatile
  2512  032D  0008               	return
  2513  032E                     __end_of_open2:	
  2514                           
  2515                           	psect	text19
  2516  03C5                     __ptext19:	
  2517 ;; *************** function _close2 *****************
  2518 ;; Defined at:
  2519 ;;		line 105 in file "display.c"
  2520 ;; Parameters:    Size  Location     Type
  2521 ;;		None
  2522 ;; Auto vars:     Size  Location     Type
  2523 ;;		None
  2524 ;; Return value:  Size  Location     Type
  2525 ;;                  1    wreg      void 
  2526 ;; Registers used:
  2527 ;;		None
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2533 ;;      Params:         0       0       0       0       0       0
  2534 ;;      Locals:         0       0       0       0       0       0
  2535 ;;      Temps:          0       0       0       0       0       0
  2536 ;;      Totals:         0       0       0       0       0       0
  2537 ;;Total ram usage:        0 bytes
  2538 ;; Hardware stack levels used:    1
  2539 ;; Hardware stack levels required when called:    2
  2540 ;; This function calls:
  2541 ;;		Nothing
  2542 ;; This function is called by:
  2543 ;;		_light2
  2544 ;;		_open2
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547                           
  2548                           
  2549                           ;psect for function _close2
  2550  03C5                     _close2:	
  2551                           
  2552                           ;display.c: 106: RA3 = 0;
  2553                           
  2554                           ;incstack = 0
  2555                           ; Regs used in _close2: []
  2556  03C5  0020               	movlb	0	; select bank0
  2557  03C6  118C               	bcf	12,3	;volatile
  2558                           
  2559                           ;display.c: 107: RA2 = 0;
  2560  03C7  110C               	bcf	12,2	;volatile
  2561  03C8  0008               	return
  2562  03C9                     __end_of_close2:	
  2563                           
  2564                           	psect	text20
  2565  036C                     __ptext20:	
  2566 ;; *************** function _init_Timer4 *****************
  2567 ;; Defined at:
  2568 ;;		line 82 in file "main.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;		None
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;		None
  2573 ;; Return value:  Size  Location     Type
  2574 ;;                  1    wreg      void 
  2575 ;; Registers used:
  2576 ;;		wreg, status,2
  2577 ;; Tracked objects:
  2578 ;;		On entry : 0/0
  2579 ;;		On exit  : 0/0
  2580 ;;		Unchanged: 0/0
  2581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2582 ;;      Params:         0       0       0       0       0       0
  2583 ;;      Locals:         0       0       0       0       0       0
  2584 ;;      Temps:          0       0       0       0       0       0
  2585 ;;      Totals:         0       0       0       0       0       0
  2586 ;;Total ram usage:        0 bytes
  2587 ;; Hardware stack levels used:    1
  2588 ;; Hardware stack levels required when called:    2
  2589 ;; This function calls:
  2590 ;;		Nothing
  2591 ;; This function is called by:
  2592 ;;		_main
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596                           
  2597                           ;psect for function _init_Timer4
  2598  036C                     _init_Timer4:	
  2599                           
  2600                           ;main.c: 83: T4CON = 0b01111011;
  2601                           
  2602                           ;incstack = 0
  2603                           ; Regs used in _init_Timer4: [wreg+status,2]
  2604  036C  307B               	movlw	123
  2605  036D  0028               	movlb	8	; select bank8
  2606  036E  0097               	movwf	23	;volatile
  2607                           
  2608                           ;main.c: 84: PR4 = 243;
  2609  036F  30F3               	movlw	243
  2610  0370  0096               	movwf	22	;volatile
  2611                           
  2612                           ;main.c: 85: TMR4IE = 1;
  2613  0371  0021               	movlb	1	; select bank1
  2614  0372  1493               	bsf	19,1	;volatile
  2615                           
  2616                           ;main.c: 86: TMR4 = 0;
  2617  0373  0028               	movlb	8	; select bank8
  2618  0374  0195               	clrf	21	;volatile
  2619                           
  2620                           ;main.c: 87: TMR4ON = 1;
  2621  0375  1517               	bsf	23,2	;volatile
  2622  0376  0008               	return
  2623  0377                     __end_of_init_Timer4:	
  2624                           
  2625                           	psect	text21
  2626  032E                     __ptext21:	
  2627 ;; *************** function _init_I2C_slave *****************
  2628 ;; Defined at:
  2629 ;;		line 90 in file "main.c"
  2630 ;; Parameters:    Size  Location     Type
  2631 ;;  addr            1    wreg     unsigned char 
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;  addr            1    4[COMMON] unsigned char 
  2634 ;; Return value:  Size  Location     Type
  2635 ;;                  1    wreg      void 
  2636 ;; Registers used:
  2637 ;;		wreg, status,2, status,0
  2638 ;; Tracked objects:
  2639 ;;		On entry : 0/0
  2640 ;;		On exit  : 0/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2643 ;;      Params:         0       0       0       0       0       0
  2644 ;;      Locals:         1       0       0       0       0       0
  2645 ;;      Temps:          0       0       0       0       0       0
  2646 ;;      Totals:         1       0       0       0       0       0
  2647 ;;Total ram usage:        1 bytes
  2648 ;; Hardware stack levels used:    1
  2649 ;; Hardware stack levels required when called:    2
  2650 ;; This function calls:
  2651 ;;		Nothing
  2652 ;; This function is called by:
  2653 ;;		_main
  2654 ;; This function uses a non-reentrant model
  2655 ;;
  2656                           
  2657                           
  2658                           ;psect for function _init_I2C_slave
  2659  032E                     _init_I2C_slave:	
  2660                           
  2661                           ;incstack = 0
  2662                           ; Regs used in _init_I2C_slave: [wreg+status,2+status,0]
  2663                           ;init_I2C_slave@addr stored from wreg
  2664  032E  00F4               	movwf	init_I2C_slave@addr
  2665                           
  2666                           ;main.c: 91: SSP1STAT = 0b10000000;
  2667  032F  3080               	movlw	128
  2668  0330  0024               	movlb	4	; select bank4
  2669  0331  0094               	movwf	20	;volatile
  2670                           
  2671                           ;main.c: 92: SSP1CON1 = 0b00100110;
  2672  0332  3026               	movlw	38
  2673  0333  0095               	movwf	21	;volatile
  2674                           
  2675                           ;main.c: 93: SSP1CON2bits.SEN = 1;
  2676  0334  1416               	bsf	22,0	;volatile
  2677                           
  2678                           ;main.c: 94: SSP1ADD = addr << 1;
  2679  0335  3574               	lslf	init_I2C_slave@addr,w
  2680  0336  0092               	movwf	18	;volatile
  2681                           
  2682                           ;main.c: 95: SSP1IE = 1;
  2683  0337  0021               	movlb	1	; select bank1
  2684  0338  1591               	bsf	17,3	;volatile
  2685                           
  2686                           ;main.c: 96: BCL1IE = 1;
  2687  0339  1592               	bsf	18,3	;volatile
  2688                           
  2689                           ;main.c: 97: SSP1IF = 0;
  2690  033A  0020               	movlb	0	; select bank0
  2691  033B  1191               	bcf	17,3	;volatile
  2692                           
  2693                           ;main.c: 98: BCL1IF = 0;
  2694  033C  1192               	bcf	18,3	;volatile
  2695  033D  0008               	return
  2696  033E                     __end_of_init_I2C_slave:	
  2697                           
  2698                           	psect	text22
  2699  033E                     __ptext22:	
  2700 ;; *************** function _init *****************
  2701 ;; Defined at:
  2702 ;;		line 70 in file "main.c"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;		None
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;		None
  2707 ;; Return value:  Size  Location     Type
  2708 ;;                  1    wreg      void 
  2709 ;; Registers used:
  2710 ;;		wreg, status,2
  2711 ;; Tracked objects:
  2712 ;;		On entry : 0/0
  2713 ;;		On exit  : 0/0
  2714 ;;		Unchanged: 0/0
  2715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2716 ;;      Params:         0       0       0       0       0       0
  2717 ;;      Locals:         0       0       0       0       0       0
  2718 ;;      Temps:          0       0       0       0       0       0
  2719 ;;      Totals:         0       0       0       0       0       0
  2720 ;;Total ram usage:        0 bytes
  2721 ;; Hardware stack levels used:    1
  2722 ;; Hardware stack levels required when called:    2
  2723 ;; This function calls:
  2724 ;;		Nothing
  2725 ;; This function is called by:
  2726 ;;		_main
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730                           
  2731                           ;psect for function _init
  2732  033E                     _init:	
  2733                           
  2734                           ;main.c: 71: OSCCON = 0b01111010;
  2735                           
  2736                           ;incstack = 0
  2737                           ; Regs used in _init: [wreg+status,2]
  2738  033E  307A               	movlw	122
  2739  033F  0021               	movlb	1	; select bank1
  2740  0340  0099               	movwf	25	;volatile
  2741                           
  2742                           ;main.c: 72: ANSELA = 0x00;
  2743  0341  0023               	movlb	3	; select bank3
  2744  0342  018C               	clrf	12	;volatile
  2745                           
  2746                           ;main.c: 73: ANSELB = 0x00;
  2747  0343  018D               	clrf	13	;volatile
  2748                           
  2749                           ;main.c: 74: TRISA = 0x00;
  2750  0344  0021               	movlb	1	; select bank1
  2751  0345  018C               	clrf	12	;volatile
  2752                           
  2753                           ;main.c: 75: TRISB = 0b00010010;
  2754  0346  3012               	movlw	18
  2755  0347  008D               	movwf	13	;volatile
  2756                           
  2757                           ;main.c: 76: PORTA = 0x00;
  2758  0348  0020               	movlb	0	; select bank0
  2759  0349  018C               	clrf	12	;volatile
  2760                           
  2761                           ;main.c: 77: PORTB = 0x00;
  2762  034A  018D               	clrf	13	;volatile
  2763                           
  2764                           ;main.c: 78: GIE = 1;
  2765  034B  178B               	bsf	11,7	;volatile
  2766                           
  2767                           ;main.c: 79: PEIE = 1;
  2768  034C  170B               	bsf	11,6	;volatile
  2769  034D  0008               	return
  2770  034E                     __end_of_init:	
  2771                           
  2772                           	psect	intentry
  2773  0004                     __pintentry:	
  2774 ;; *************** function _interruption *****************
  2775 ;; Defined at:
  2776 ;;		line 44 in file "main.c"
  2777 ;; Parameters:    Size  Location     Type
  2778 ;;		None
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;		None
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  1    wreg      void 
  2783 ;; Registers used:
  2784 ;;		wreg, status,2, status,0, pclath, cstack
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2790 ;;      Params:         0       0       0       0       0       0
  2791 ;;      Locals:         0       0       0       0       0       0
  2792 ;;      Temps:          2       0       0       0       0       0
  2793 ;;      Totals:         2       0       0       0       0       0
  2794 ;;Total ram usage:        2 bytes
  2795 ;; Hardware stack levels used:    1
  2796 ;; Hardware stack levels required when called:    1
  2797 ;; This function calls:
  2798 ;;		_interrupt_I2C
  2799 ;; This function is called by:
  2800 ;;		Interrupt level 1
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804  0004                     _interruption:	
  2805                           
  2806                           ;incstack = 0
  2807  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2808                           
  2809                           ; Regs used in _interruption: [wreg+status,2+status,0+pclath+cstack]
  2810  0005  3180               	pagesel	$
  2811  0006  0020               	movlb	0	; select bank0
  2812  0007  087F               	movf	127,w
  2813  0008  00F3               	movwf	??_interruption+1
  2814                           
  2815                           ;main.c: 45: if(SSP1IF == 1) {
  2816  0009  1D91               	btfss	17,3	;volatile
  2817  000A  2816               	goto	i1l79
  2818                           
  2819                           ;main.c: 47: interrupt_I2C();
  2820  000B  3183  234E  3180   	fcall	_interrupt_I2C
  2821                           
  2822                           ;main.c: 48: SSP1IF = 0;
  2823  000E  0020               	movlb	0	; select bank0
  2824  000F  1191               	bcf	17,3	;volatile
  2825                           
  2826                           ;main.c: 49: SSP1CON1bits.CKP = 1;
  2827  0010  0024               	movlb	4	; select bank4
  2828  0011  1615               	bsf	21,4	;volatile
  2829                           
  2830                           ;main.c: 50: counter = 0;
  2831  0012  01F9               	clrf	_counter
  2832                           
  2833                           ;main.c: 51: TMR4 = 0;
  2834  0013  0028               	movlb	8	; select bank8
  2835  0014  0195               	clrf	21	;volatile
  2836                           
  2837                           ;main.c: 52: } else if (TMR4IF == 1) {
  2838  0015  2821               	goto	i1l83
  2839  0016                     i1l79:	
  2840  0016  1C93               	btfss	19,1	;volatile
  2841  0017  2821               	goto	i1l83
  2842                           
  2843                           ;main.c: 54: if (counter < 16) counter++;
  2844  0018  3010               	movlw	16
  2845  0019  0279               	subwf	_counter,w
  2846  001A  1803               	skipnc
  2847  001B  2820               	goto	i1l1174
  2848  001C  3001               	movlw	1
  2849  001D  00F2               	movwf	??_interruption
  2850  001E  0872               	movf	??_interruption,w
  2851  001F  07F9               	addwf	_counter,f
  2852  0020                     i1l1174:	
  2853                           
  2854                           ;main.c: 55: TMR4IF = 0;
  2855  0020  1093               	bcf	19,1	;volatile
  2856  0021                     i1l83:	
  2857  0021  0873               	movf	??_interruption+1,w
  2858  0022  0020               	movlb	0	; select bank0
  2859  0023  00FF               	movwf	127
  2860  0024  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2861  0025  0009               	retfie
  2862  0026                     __end_of_interruption:	
  2863                           
  2864                           	psect	text24
  2865  034E                     __ptext24:	
  2866 ;; *************** function _interrupt_I2C *****************
  2867 ;; Defined at:
  2868 ;;		line 30 in file "main.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;		None
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;  x               1    1[COMMON] unsigned char 
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  1    wreg      void 
  2875 ;; Registers used:
  2876 ;;		wreg
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2882 ;;      Params:         0       0       0       0       0       0
  2883 ;;      Locals:         1       0       0       0       0       0
  2884 ;;      Temps:          1       0       0       0       0       0
  2885 ;;      Totals:         2       0       0       0       0       0
  2886 ;;Total ram usage:        2 bytes
  2887 ;; Hardware stack levels used:    1
  2888 ;; This function calls:
  2889 ;;		Nothing
  2890 ;; This function is called by:
  2891 ;;		_interruption
  2892 ;; This function uses a non-reentrant model
  2893 ;;
  2894                           
  2895                           
  2896                           ;psect for function _interrupt_I2C
  2897  034E                     _interrupt_I2C:	
  2898                           
  2899                           ;main.c: 31: char x;
  2900                           ;main.c: 32: if(SSP1STATbits.R_nW == 0) {
  2901                           
  2902                           ;incstack = 0
  2903                           ; Regs used in _interrupt_I2C: [wreg]
  2904  034E  0024               	movlb	4	; select bank4
  2905  034F  1914               	btfsc	20,2	;volatile
  2906  0350  0008               	return
  2907                           
  2908                           ;main.c: 34: if(SSP1STATbits.D_nA == 0) {
  2909  0351  1A94               	btfsc	20,5	;volatile
  2910  0352  2B58               	goto	i1l1150
  2911                           
  2912                           ;main.c: 36: x = SSP1BUF;
  2913  0353  0811               	movf	17,w	;volatile
  2914  0354  00F0               	movwf	??_interrupt_I2C
  2915  0355  0870               	movf	??_interrupt_I2C,w
  2916  0356  00F1               	movwf	interrupt_I2C@x
  2917                           
  2918                           ;main.c: 37: } else {
  2919  0357  0008               	return
  2920  0358                     i1l1150:	
  2921                           
  2922                           ;main.c: 39: received_data = SSP1BUF;
  2923  0358  0811               	movf	17,w	;volatile
  2924  0359  00F0               	movwf	??_interrupt_I2C
  2925  035A  0870               	movf	??_interrupt_I2C,w
  2926  035B  0020               	movlb	0	; select bank0
  2927  035C  00C8               	movwf	_received_data
  2928  035D  0008               	return
  2929  035E                     __end_of_interrupt_I2C:	
  2930  007E                     btemp	set	126	;btemp
  2931  007E                     int$flags	set	126
  2932  007E                     wtemp	set	126
  2933  007E                     wtemp0	set	126
  2934  0080                     wtemp1	set	128
  2935  0082                     wtemp2	set	130
  2936  0084                     wtemp3	set	132
  2937  0086                     wtemp4	set	134
  2938  0088                     wtemp5	set	136
  2939  007F                     wtemp6	set	127
  2940  007E                     ttemp	set	126
  2941  007E                     ttemp0	set	126
  2942  0081                     ttemp1	set	129
  2943  0084                     ttemp2	set	132
  2944  0087                     ttemp3	set	135
  2945  007F                     ttemp4	set	127
  2946  007E                     ltemp	set	126
  2947  007E                     ltemp0	set	126
  2948  0082                     ltemp1	set	130
  2949  0086                     ltemp2	set	134
  2950  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      10
    BANK0            80     32      41
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    light2@dot	PTR int  size(1) Largest target is 4
		 -> error2@error_dot(BANK0[4]), loop@dot(BANK0[4]), 

    light2@digit	PTR int  size(1) Largest target is 4
		 -> error2@error_digit(BANK0[4]), loop@digit(BANK0[4]), 

    num_digits_conv@digit	PTR int  size(1) Largest target is 4
		 -> loop@digit(BANK0[4]), 

    num_digits_conv@dot	PTR int  size(1) Largest target is 4
		 -> loop@dot(BANK0[4]), 


Critical Paths under _main in COMMON

    _loop->_error2
    _num_digits_conv->___lwdiv
    ___lwmod->___lwdiv
    ___lwdiv->___wmul
    _light2->_set_num
    _light2->_wait
    _set_num->_set_a
    _set_num->_set_b
    _set_num->_set_c
    _set_num->_set_d
    _set_num->_set_e
    _set_num->_set_f
    _set_num->_set_g
    _set_num->_set_p

Critical Paths under _interruption in COMMON

    _interruption->_interrupt_I2C

Critical Paths under _main in BANK0

    _main->_loop
    _loop->_num_digits_conv
    _num_digits_conv->___lwmod
    ___lwmod->___lwdiv
    ___lwdiv->___wmul
    _error2->_light2
    _light2->_set_num

Critical Paths under _interruption in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruption in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruption in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruption in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruption in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6526
                               _init
                     _init_I2C_slave
                        _init_Timer4
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                10    10      0    6511
                                             22 BANK0     10    10      0
                             _error2
                             _light2
                    _num_digits_conv
 ---------------------------------------------------------------------------------
 (2) _num_digits_conv                                      7     5      2    1745
                                             15 BANK0      7     5      2
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     266
                                              4 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     371
                                              9 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     631
                                              8 COMMON     1     1      0
                                              2 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _error2                                               9     9      0    2337
                                              8 COMMON     1     1      0
                                             12 BANK0      8     8      0
                             _light2
 ---------------------------------------------------------------------------------
 (2) _light2                                               9     8      1    2230
                                              3 BANK0      9     8      1
                             _close2
                              _open2
                            _set_num
                               _wait
 ---------------------------------------------------------------------------------
 (3) _wait                                                 6     4      2     133
                                              4 COMMON     4     2      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _set_num                                              5     3      2     829
                                              6 COMMON     2     0      2
                                              0 BANK0      3     3      0
                              _set_a
                              _set_b
                              _set_c
                              _set_d
                              _set_e
                              _set_f
                              _set_g
                              _set_p
 ---------------------------------------------------------------------------------
 (4) _set_p                                                2     0      2      75
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _set_g                                                2     0      2      75
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _set_f                                                2     0      2      75
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _set_e                                                2     0      2      75
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _set_d                                                2     0      2      75
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _set_c                                                2     0      2      75
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _set_b                                                2     0      2      75
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _set_a                                                2     0      2      75
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _open2                                                2     0      2      97
                                              4 COMMON     2     0      2
                             _close2
 ---------------------------------------------------------------------------------
 (4) _close2                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_Timer4                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_I2C_slave                                       1     1      0      15
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _interruption                                         2     2      0       1
                                              2 COMMON     2     2      0
                      _interrupt_I2C
 ---------------------------------------------------------------------------------
 (7) _interrupt_I2C                                        2     2      0       1
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
   _init_I2C_slave
   _init_Timer4
   _loop
     _error2
       _light2
         _close2
         _open2
           _close2
         _set_num
           _set_a
           _set_b
           _set_c
           _set_d
           _set_e
           _set_f
           _set_g
           _set_p
         _wait
     _light2
       _close2
       _open2
         _close2
       _set_num
         _set_a
         _set_b
         _set_c
         _set_d
         _set_e
         _set_f
         _set_g
         _set_p
       _wait
     _num_digits_conv
       ___lwdiv
         ___wmul (ARG)
       ___lwmod
         ___lwdiv (ARG)
           ___wmul (ARG)
       ___wmul

 _interruption (ROOT)
   _interrupt_I2C

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      33       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     20      29       6       51.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      33      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Thu Mar 16 11:12:14 2017

   __end_of_interrupt_I2C 035E               __CFG_CP$OFF 0000       ___wmul@multiplicand 0076  
                     l316 02BA                       l229 02EE                       l980 0327  
                     _GIE 005F                       _RA0 0060                       _RA1 0061  
                     _RA2 0062                       _RA3 0063                       _RB2 006A  
                     _RA6 0066                       _RB5 006D                       _RA7 0067  
                     _RB6 006E                       _RB7 006F                       _PR4 0416  
            __CFG_CPD$OFF 0000                       u630 03BC                       u710 039C  
                     u650 03B4                       u730 0394                       u805 018E  
                     u670 03AC                       u750 038C                       u815 01A3  
                     u825 01B8                       u690 03A4                       u770 0384  
                     u795 0179              __CFG_BORV$HI 0000                       wreg 0009  
            __CFG_LVP$OFF 0000                      l1110 0296                      l1200 0066  
                    l1114 02A2                      l1220 00B1                      l1212 0093  
                    l1204 0075                      l1108 028A                      l1118 02AB  
                    l1310 021B                      l1232 00DE                      l1224 00C0  
                    l1216 00A2                      l1208 0084                      l1242 00FD  
                    l1306 020D                      l1322 02E8                      l1236 00EE  
                    l1228 00CF                      l1246 010E                      l1326 0368  
                    l1280 0257                      l1282 0263                      l1258 02B3  
                    l1196 0057                      l1292 027E                      l1288 0275  
                    u1135 028D                      u1155 029C                      u1165 02A3  
                    u1255 02F4                      u1265 0046                      u1505 0276  
                    u1425 02BB                      u1435 02C0                      u1465 025A  
                    u1547 02FA                      u1485 0264                      u1495 026E  
                    _PEIE 005E                      i1l83 0021                      i1l79 0016  
                    _TMR4 0415              __CFG_WRT$OFF 0000                      _main 035E  
                    _init 033E                      _loop 02CE                      _wait 02EB  
                    fsr0h 0005                      fsr1h 0007                      fsr0l 0004  
                    indf1 0001                      fsr1l 0006                      btemp 007E  
           __CFG_BOREN$ON 0000                      ltemp 007E                      start 0026  
                    ttemp 007E                      wtemp 007E             __CFG_IESO$OFF 0000  
            ?_init_Timer4 0070                     ?_main 0070                     ?_init 0070  
                   ?_loop 0070             __CFG_WDTE$OFF 0000                     ?_wait 0074  
                   _T4CON 0417           __end_of___lwdiv 0283           __end_of___lwmod 02B0  
                   _PORTA 000C                     _PORTB 000D                     _TRISA 008C  
                   _TRISB 008D             __CFG_PWRTE$ON 0000            __CFG_FCMEN$OFF 0000  
                   _open2 031E                     _set_a 03B7                     _set_b 03AF  
                   _set_c 03A7                     _set_d 039F                     _set_e 0397  
                   _set_f 038F                     _set_g 0387                     _set_p 037F  
         __end_of_set_num 01C6                     ltemp0 007E                     ltemp1 0082  
                   ltemp2 0086                     ltemp3 0080                     wait@i 0020  
 __size_of_init_I2C_slave 0010                     ttemp0 007E                     ttemp1 0081  
                   ttemp2 0084                     ttemp3 0087                     ttemp4 007F  
                   status 0003                     wtemp0 007E                     wtemp1 0080  
                   wtemp2 0082                     wtemp3 0084                     wtemp4 0086  
                   wtemp5 0088                     wtemp6 007F            __CFG_MCLRE$OFF 0000  
             light2@digit 0029           __initialization 0028              __end_of_main 036C  
            __end_of_init 034E              __end_of_loop 02EB              __end_of_wait 0305  
             error2@F2802 0040               error2@F2804 0044                    ??_main 0079  
                  ??_init 0074                    ??_loop 0036                    ??_wait 0076  
          __CFG_PLLEN$OFF 0000           _num_digits_conv 01C6                    _BCL1IE 0493  
                  _BCL1IF 0093                    ?_open2 0074                    ?_set_a 0074  
                  ?_set_b 0074                    ?_set_c 0074                    ?_set_d 0074  
                  ?_set_e 0074                    ?_set_f 0074                    ?_set_g 0074  
                  ?_set_p 0074                    _ANSELA 018C                    _ANSELB 018D  
                  i1l1150 0358                    i1l1174 0020                    _OSCCON 0099  
                  _TMR4IE 0499                    _TMR4IF 0099                    _TMR4ON 20BA  
                  _SSP1IE 048B                    _SSP1IF 008B                    ___wmul 02B0  
          __CFG_STVREN$ON 0000                    _close2 03C5                 ??___lwdiv 0078  
               ??___lwmod 002D                    _light2 0039                    _error2 0305  
               ??_set_num 0020   __end_of__initialization 0035            __pcstackCOMMON 0070  
            __pidataBANK0 0377             ?_interruption 0070             __end_of_open2 032E  
           __end_of_set_a 03BF             __end_of_set_b 03B7             __end_of_set_c 03AF  
           __end_of_set_d 03A7             __end_of_set_e 039F             __end_of_set_f 0397  
           __end_of_set_g 038F             __end_of_set_p 0387   __end_of_num_digits_conv 024E  
    __size_of_init_Timer4 000B                   ??_open2 0076                   ??_set_a 0076  
                 ??_set_b 0076                   ??_set_c 0076                   ??_set_d 0076  
                 ??_set_e 0076                   ??_set_f 0076                   ??_set_g 0076  
                 ??_set_p 0076                __pbssBANK0 0048            _init_I2C_slave 032E  
              __pmaintext 035E            ??_interruption 0072                   ?___wmul 0074  
              __pintentry 0004                   ?_close2 0070        num_digits_conv@dot 0030  
      num_digits_conv@num 0034                   ?_light2 0023                   ?_error2 0070  
                 _SSP1ADD 0212                   _SSP1BUF 0211    __end_of_init_I2C_slave 033E  
             set_a@on_off 0074               set_b@on_off 0074      num_digits_conv@digit 002F  
  __size_of_interrupt_I2C 0010               set_c@on_off 0074               set_d@on_off 0074  
             set_e@on_off 0074               set_f@on_off 0074               set_g@on_off 0074  
       open2@digit_select 0074               set_p@on_off 0074           __size_of___wmul 001E  
                 ___lwdiv 024E                   ___lwmod 0283           __size_of_close2 0004  
         __size_of_light2 00F4           __size_of_error2 0019                   __ptext1 02CE  
                 __ptext2 01C6                   __ptext3 02B0                   __ptext4 0283  
                 __ptext5 024E                   __ptext6 0305                   __ptext7 0039  
                 __ptext8 02EB                   __ptext9 012D          ?_num_digits_conv 002F  
                 _counter 0079                   _set_num 012D             _received_data 0048  
         ?_init_I2C_slave 0070      end_of_initialization 0035            interrupt_I2C@x 0071  
                 light2@i 002A                   init_ram 03BF                   initloop 03C0  
                 loop@dot 0038             _interrupt_I2C 034E          __CFG_FOSC$INTOSC 0000  
    __end_of_interruption 0026            ?_interrupt_I2C 0070            __end_of___wmul 02CE  
          __end_of_close2 03C9            __end_of_light2 012D            __end_of_error2 031E  
     start_initialization 0028                  ??___wmul 0078                  ??_close2 0074  
             __pdataBANK0 0040             ??_init_Timer4 0074                  ??_light2 0024  
                ??_error2 0078               __pbssCOMMON 0079                 ___latbits 0001  
           __pcstackBANK0 0020          ___lwdiv@dividend 0024           ??_interrupt_I2C 0070  
                ?___lwdiv 0022        init_I2C_slave@addr 0074                  ?___lwmod 0029  
           wait@wait_time 0074       num_digits_conv@data 0033           error2@error_dot 002C  
        ??_init_I2C_slave 0074     __size_of_interruption 0022       __end_of_init_Timer4 0377  
                ?_set_num 0076          ___lwdiv@quotient 0027            __size_of_open2 0010  
          __size_of_set_a 0008            __size_of_set_b 0008            __size_of_set_c 0008  
          __size_of_set_d 0008            __size_of_set_e 0008            __size_of_set_f 0008  
          __size_of_set_g 0008            __size_of_set_p 0008            ___wmul@product 0020  
              set_num@num 0076                  _SSP1CON1 0215              _interruption 0004  
                _SSP1STAT 0214         ___wmul@multiplier 0074         error2@error_digit 0030  
__size_of_num_digits_conv 0088                 light2@dot 0023                 light2@num 0027  
        __size_of___lwdiv 0035               _init_Timer4 036C          __size_of___lwmod 002D  
               loop@digit 003C           ___lwdiv@divisor 0022           ___lwdiv@counter 0026  
                __ptext10 037F                  __ptext11 0387                  __ptext20 036C  
                __ptext12 038F                  __ptext21 032E                  __ptext13 0397  
                __ptext22 033E                  __ptext14 039F                  __ptext15 03A7  
                __ptext24 034E                  __ptext16 03AF                  __ptext17 03B7  
                __ptext18 031E                  __ptext19 03C5          __size_of_set_num 0099  
            _SSP1CON1bits 0215              _SSP1CON2bits 0216             __size_of_main 000E  
           __size_of_init 0010             __size_of_loop 001D             __size_of_wait 001A  
                int$flags 007E              _SSP1STATbits 0214                  intlevel1 0000  
        ___lwmod@dividend 002B         __CFG_CLKOUTEN$OFF 0000         ??_num_digits_conv 0031  
         ___lwmod@divisor 0029           ___lwmod@counter 002E  
