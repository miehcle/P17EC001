

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Tue Apr 18 22:20:07 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	dabs	1,0x7E,2
    38  0000                     	;# 
    39  0001                     	;# 
    40  0002                     	;# 
    41  0003                     	;# 
    42  0004                     	;# 
    43  0005                     	;# 
    44  0006                     	;# 
    45  0007                     	;# 
    46  0008                     	;# 
    47  0009                     	;# 
    48  000A                     	;# 
    49  000B                     	;# 
    50  000C                     	;# 
    51  000D                     	;# 
    52  0011                     	;# 
    53  0012                     	;# 
    54  0013                     	;# 
    55  0014                     	;# 
    56  0015                     	;# 
    57  0016                     	;# 
    58  0016                     	;# 
    59  0017                     	;# 
    60  0018                     	;# 
    61  0019                     	;# 
    62  001A                     	;# 
    63  001B                     	;# 
    64  001C                     	;# 
    65  001E                     	;# 
    66  001F                     	;# 
    67  008C                     	;# 
    68  008D                     	;# 
    69  0091                     	;# 
    70  0092                     	;# 
    71  0093                     	;# 
    72  0094                     	;# 
    73  0095                     	;# 
    74  0096                     	;# 
    75  0097                     	;# 
    76  0098                     	;# 
    77  0099                     	;# 
    78  009A                     	;# 
    79  009B                     	;# 
    80  009B                     	;# 
    81  009C                     	;# 
    82  009D                     	;# 
    83  009E                     	;# 
    84  010C                     	;# 
    85  010D                     	;# 
    86  0111                     	;# 
    87  0112                     	;# 
    88  0113                     	;# 
    89  0114                     	;# 
    90  0115                     	;# 
    91  0116                     	;# 
    92  0117                     	;# 
    93  0118                     	;# 
    94  0119                     	;# 
    95  011A                     	;# 
    96  011B                     	;# 
    97  011D                     	;# 
    98  011E                     	;# 
    99  018C                     	;# 
   100  018D                     	;# 
   101  0191                     	;# 
   102  0191                     	;# 
   103  0192                     	;# 
   104  0193                     	;# 
   105  0193                     	;# 
   106  0193                     	;# 
   107  0194                     	;# 
   108  0195                     	;# 
   109  0196                     	;# 
   110  0199                     	;# 
   111  019A                     	;# 
   112  019B                     	;# 
   113  019B                     	;# 
   114  019B                     	;# 
   115  019B                     	;# 
   116  019C                     	;# 
   117  019C                     	;# 
   118  019D                     	;# 
   119  019E                     	;# 
   120  019F                     	;# 
   121  020C                     	;# 
   122  020D                     	;# 
   123  0211                     	;# 
   124  0211                     	;# 
   125  0212                     	;# 
   126  0212                     	;# 
   127  0213                     	;# 
   128  0213                     	;# 
   129  0214                     	;# 
   130  0214                     	;# 
   131  0215                     	;# 
   132  0215                     	;# 
   133  0215                     	;# 
   134  0216                     	;# 
   135  0216                     	;# 
   136  0217                     	;# 
   137  0217                     	;# 
   138  0219                     	;# 
   139  021A                     	;# 
   140  021B                     	;# 
   141  021C                     	;# 
   142  021D                     	;# 
   143  021E                     	;# 
   144  021F                     	;# 
   145  0291                     	;# 
   146  0291                     	;# 
   147  0292                     	;# 
   148  0293                     	;# 
   149  0294                     	;# 
   150  0295                     	;# 
   151  0295                     	;# 
   152  0296                     	;# 
   153  0298                     	;# 
   154  0298                     	;# 
   155  0299                     	;# 
   156  029A                     	;# 
   157  029B                     	;# 
   158  029C                     	;# 
   159  029C                     	;# 
   160  029D                     	;# 
   161  029E                     	;# 
   162  029E                     	;# 
   163  0311                     	;# 
   164  0311                     	;# 
   165  0312                     	;# 
   166  0313                     	;# 
   167  0318                     	;# 
   168  0318                     	;# 
   169  0319                     	;# 
   170  031A                     	;# 
   171  0394                     	;# 
   172  0395                     	;# 
   173  0396                     	;# 
   174  039A                     	;# 
   175  039C                     	;# 
   176  039D                     	;# 
   177  039E                     	;# 
   178  039F                     	;# 
   179  0415                     	;# 
   180  0416                     	;# 
   181  0417                     	;# 
   182  041C                     	;# 
   183  041D                     	;# 
   184  041E                     	;# 
   185  0FE4                     	;# 
   186  0FE5                     	;# 
   187  0FE6                     	;# 
   188  0FE7                     	;# 
   189  0FE8                     	;# 
   190  0FE9                     	;# 
   191  0FEA                     	;# 
   192  0FEB                     	;# 
   193  0FED                     	;# 
   194  0FEE                     	;# 
   195  0FEF                     	;# 
   196  0000                     	;# 
   197  0001                     	;# 
   198  0002                     	;# 
   199  0003                     	;# 
   200  0004                     	;# 
   201  0005                     	;# 
   202  0006                     	;# 
   203  0007                     	;# 
   204  0008                     	;# 
   205  0009                     	;# 
   206  000A                     	;# 
   207  000B                     	;# 
   208  000C                     	;# 
   209  000D                     	;# 
   210  0011                     	;# 
   211  0012                     	;# 
   212  0013                     	;# 
   213  0014                     	;# 
   214  0015                     	;# 
   215  0016                     	;# 
   216  0016                     	;# 
   217  0017                     	;# 
   218  0018                     	;# 
   219  0019                     	;# 
   220  001A                     	;# 
   221  001B                     	;# 
   222  001C                     	;# 
   223  001E                     	;# 
   224  001F                     	;# 
   225  008C                     	;# 
   226  008D                     	;# 
   227  0091                     	;# 
   228  0092                     	;# 
   229  0093                     	;# 
   230  0094                     	;# 
   231  0095                     	;# 
   232  0096                     	;# 
   233  0097                     	;# 
   234  0098                     	;# 
   235  0099                     	;# 
   236  009A                     	;# 
   237  009B                     	;# 
   238  009B                     	;# 
   239  009C                     	;# 
   240  009D                     	;# 
   241  009E                     	;# 
   242  010C                     	;# 
   243  010D                     	;# 
   244  0111                     	;# 
   245  0112                     	;# 
   246  0113                     	;# 
   247  0114                     	;# 
   248  0115                     	;# 
   249  0116                     	;# 
   250  0117                     	;# 
   251  0118                     	;# 
   252  0119                     	;# 
   253  011A                     	;# 
   254  011B                     	;# 
   255  011D                     	;# 
   256  011E                     	;# 
   257  018C                     	;# 
   258  018D                     	;# 
   259  0191                     	;# 
   260  0191                     	;# 
   261  0192                     	;# 
   262  0193                     	;# 
   263  0193                     	;# 
   264  0193                     	;# 
   265  0194                     	;# 
   266  0195                     	;# 
   267  0196                     	;# 
   268  0199                     	;# 
   269  019A                     	;# 
   270  019B                     	;# 
   271  019B                     	;# 
   272  019B                     	;# 
   273  019B                     	;# 
   274  019C                     	;# 
   275  019C                     	;# 
   276  019D                     	;# 
   277  019E                     	;# 
   278  019F                     	;# 
   279  020C                     	;# 
   280  020D                     	;# 
   281  0211                     	;# 
   282  0211                     	;# 
   283  0212                     	;# 
   284  0212                     	;# 
   285  0213                     	;# 
   286  0213                     	;# 
   287  0214                     	;# 
   288  0214                     	;# 
   289  0215                     	;# 
   290  0215                     	;# 
   291  0215                     	;# 
   292  0216                     	;# 
   293  0216                     	;# 
   294  0217                     	;# 
   295  0217                     	;# 
   296  0219                     	;# 
   297  021A                     	;# 
   298  021B                     	;# 
   299  021C                     	;# 
   300  021D                     	;# 
   301  021E                     	;# 
   302  021F                     	;# 
   303  0291                     	;# 
   304  0291                     	;# 
   305  0292                     	;# 
   306  0293                     	;# 
   307  0294                     	;# 
   308  0295                     	;# 
   309  0295                     	;# 
   310  0296                     	;# 
   311  0298                     	;# 
   312  0298                     	;# 
   313  0299                     	;# 
   314  029A                     	;# 
   315  029B                     	;# 
   316  029C                     	;# 
   317  029C                     	;# 
   318  029D                     	;# 
   319  029E                     	;# 
   320  029E                     	;# 
   321  0311                     	;# 
   322  0311                     	;# 
   323  0312                     	;# 
   324  0313                     	;# 
   325  0318                     	;# 
   326  0318                     	;# 
   327  0319                     	;# 
   328  031A                     	;# 
   329  0394                     	;# 
   330  0395                     	;# 
   331  0396                     	;# 
   332  039A                     	;# 
   333  039C                     	;# 
   334  039D                     	;# 
   335  039E                     	;# 
   336  039F                     	;# 
   337  0415                     	;# 
   338  0416                     	;# 
   339  0417                     	;# 
   340  041C                     	;# 
   341  041D                     	;# 
   342  041E                     	;# 
   343  0FE4                     	;# 
   344  0FE5                     	;# 
   345  0FE6                     	;# 
   346  0FE7                     	;# 
   347  0FE8                     	;# 
   348  0FE9                     	;# 
   349  0FEA                     	;# 
   350  0FEB                     	;# 
   351  0FED                     	;# 
   352  0FEE                     	;# 
   353  0FEF                     	;# 
   354                           
   355                           	psect	idataBANK0
   356  0394                     __pidataBANK0:	
   357                           
   358                           ;initializer for error2@F2797
   359  0394  340B               	retlw	11
   360  0395  3400               	retlw	0
   361  0396  340B               	retlw	11
   362  0397  3400               	retlw	0
   363                           
   364                           ;initializer for error2@F2799
   365  0398  3401               	retlw	1
   366  0399  3400               	retlw	0
   367  039A  3401               	retlw	1
   368  039B  3400               	retlw	0
   369  000C                     _PORTA	set	12
   370  000D                     _PORTB	set	13
   371  0093                     _BCL1IF	set	147
   372  005F                     _GIE	set	95
   373  005E                     _PEIE	set	94
   374  0060                     _RA0	set	96
   375  0061                     _RA1	set	97
   376  0062                     _RA2	set	98
   377  0063                     _RA3	set	99
   378  0066                     _RA6	set	102
   379  0067                     _RA7	set	103
   380  006A                     _RB2	set	106
   381  006D                     _RB5	set	109
   382  006E                     _RB6	set	110
   383  006F                     _RB7	set	111
   384  008B                     _SSP1IF	set	139
   385  0099                     _TMR4IF	set	153
   386  0099                     _OSCCON	set	153
   387  008C                     _TRISA	set	140
   388  008D                     _TRISB	set	141
   389  0493                     _BCL1IE	set	1171
   390  048B                     _SSP1IE	set	1163
   391  0499                     _TMR4IE	set	1177
   392  018C                     _ANSELA	set	396
   393  018D                     _ANSELB	set	397
   394  0212                     _SSP1ADD	set	530
   395  0211                     _SSP1BUF	set	529
   396  0215                     _SSP1CON1	set	533
   397  0215                     _SSP1CON1bits	set	533
   398  0216                     _SSP1CON2bits	set	534
   399  0214                     _SSP1STAT	set	532
   400  0214                     _SSP1STATbits	set	532
   401  0416                     _PR4	set	1046
   402  0417                     _T4CON	set	1047
   403  0415                     _TMR4	set	1045
   404  20BA                     _TMR4ON	set	8378
   405                           
   406                           ; #config settings
   407  0000                     
   408                           	psect	cinit
   409  0028                     start_initialization:	
   410  0028                     __initialization:	
   411                           
   412                           ; Clear objects allocated to COMMON
   413  0028  01F9               	clrf	__pbssCOMMON& (0+127)
   414                           
   415                           ; Clear objects allocated to BANK0
   416  0029  01C8               	clrf	__pbssBANK0& (0+127)
   417                           
   418                           ; Initialize objects allocated to BANK0
   419  002A  3094               	movlw	low __pidataBANK0
   420  002B  0084               	movwf	4
   421  002C  3083               	movlw	(high __pidataBANK0)| (0+128)
   422  002D  0085               	movwf	5
   423  002E  3040               	movlw	low __pdataBANK0
   424  002F  0086               	movwf	6
   425  0030  3000               	movlw	high __pdataBANK0
   426  0031  0087               	movwf	7
   427  0032  3008               	movlw	8
   428  0033  3183  23E3         	fcall	init_ram
   429  0035                     end_of_initialization:	
   430                           ;End of C runtime variable initialization code
   431                           
   432  0035                     __end_of__initialization:	
   433  0035  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   434  0036  0020               	movlb	0
   435  0037  3183  2BDC         	ljmp	_main	;jump to C main() function
   436                           
   437                           	psect	bssCOMMON
   438  0079                     __pbssCOMMON:	
   439  0079                     _counter:	
   440  0079                     	ds	1
   441                           
   442                           	psect	bssBANK0
   443  0048                     __pbssBANK0:	
   444  0048                     _received_data:	
   445  0048                     	ds	1
   446                           
   447                           	psect	dataBANK0
   448  0040                     __pdataBANK0:	
   449  0040                     error2@F2797:	
   450  0040                     	ds	4
   451  0044                     error2@F2799:	
   452  0044                     	ds	4
   453                           
   454                           	psect	inittext
   455  03E3                     init_ram:	
   456  03E3  00FE               	movwf	126
   457  03E4                     initloop:	
   458  03E4  0012               	moviw fsr0++
   459  03E5  001E               	movwi fsr1++
   460  03E6  0BFE               	decfsz	126,f
   461  03E7  2BE4               	goto	initloop
   462  03E8  3400               	retlw	0
   463                           
   464                           	psect	cstackCOMMON
   465  0070                     __pcstackCOMMON:	
   466  0070                     ?_init:	
   467  0070                     ?_loop:	
   468                           ; 0 bytes @ 0x0
   469                           
   470  0070                     ?_init_Timer4:	
   471                           ; 0 bytes @ 0x0
   472                           
   473  0070                     ?_init_I2C_slave:	
   474                           ; 0 bytes @ 0x0
   475                           
   476  0070                     ?_error2:	
   477                           ; 0 bytes @ 0x0
   478                           
   479  0070                     ?_close2:	
   480                           ; 0 bytes @ 0x0
   481                           
   482  0070                     ?_interrupt_I2C:	
   483                           ; 0 bytes @ 0x0
   484                           
   485  0070                     ??_interrupt_I2C:	
   486                           ; 0 bytes @ 0x0
   487                           
   488  0070                     ?_interruption:	
   489                           ; 0 bytes @ 0x0
   490                           
   491  0070                     ?_main:	
   492                           ; 0 bytes @ 0x0
   493                           
   494                           
   495                           ; 0 bytes @ 0x0
   496  0070                     	ds	1
   497  0071                     interrupt_I2C@x:	
   498                           
   499                           ; 1 bytes @ 0x1
   500  0071                     	ds	1
   501  0072                     ??_interruption:	
   502                           
   503                           ; 0 bytes @ 0x2
   504  0072                     	ds	2
   505  0074                     ??_init_Timer4:	
   506  0074                     ??_init_I2C_slave:	
   507                           ; 0 bytes @ 0x4
   508                           
   509  0074                     ?_open2:	
   510                           ; 0 bytes @ 0x4
   511                           
   512  0074                     ?_wait:	
   513                           ; 0 bytes @ 0x4
   514                           
   515  0074                     ??_close2:	
   516                           ; 0 bytes @ 0x4
   517                           
   518  0074                     ?_set_a:	
   519                           ; 0 bytes @ 0x4
   520                           
   521  0074                     ?_set_b:	
   522                           ; 0 bytes @ 0x4
   523                           
   524  0074                     ?_set_c:	
   525                           ; 0 bytes @ 0x4
   526                           
   527  0074                     ?_set_d:	
   528                           ; 0 bytes @ 0x4
   529                           
   530  0074                     ?_set_e:	
   531                           ; 0 bytes @ 0x4
   532                           
   533  0074                     ?_set_f:	
   534                           ; 0 bytes @ 0x4
   535                           
   536  0074                     ?_set_g:	
   537                           ; 0 bytes @ 0x4
   538                           
   539  0074                     ?_set_p:	
   540                           ; 0 bytes @ 0x4
   541                           
   542  0074                     ?___wmul:	
   543                           ; 0 bytes @ 0x4
   544                           
   545  0074                     init_I2C_slave@addr:	
   546                           ; 2 bytes @ 0x4
   547                           
   548  0074                     set_a@on_off:	
   549                           ; 1 bytes @ 0x4
   550                           
   551  0074                     set_b@on_off:	
   552                           ; 2 bytes @ 0x4
   553                           
   554  0074                     set_c@on_off:	
   555                           ; 2 bytes @ 0x4
   556                           
   557  0074                     set_d@on_off:	
   558                           ; 2 bytes @ 0x4
   559                           
   560  0074                     set_e@on_off:	
   561                           ; 2 bytes @ 0x4
   562                           
   563  0074                     set_f@on_off:	
   564                           ; 2 bytes @ 0x4
   565                           
   566  0074                     set_g@on_off:	
   567                           ; 2 bytes @ 0x4
   568                           
   569  0074                     set_p@on_off:	
   570                           ; 2 bytes @ 0x4
   571                           
   572  0074                     open2@digit_select:	
   573                           ; 2 bytes @ 0x4
   574                           
   575  0074                     wait@wait_time:	
   576                           ; 2 bytes @ 0x4
   577                           
   578  0074                     ___wmul@multiplier:	
   579                           ; 2 bytes @ 0x4
   580                           
   581                           
   582                           ; 2 bytes @ 0x4
   583  0074                     	ds	1
   584  0075                     ??_init:	
   585                           
   586                           ; 0 bytes @ 0x5
   587  0075                     	ds	1
   588  0076                     ?_set_num:	
   589  0076                     ??_open2:	
   590                           ; 0 bytes @ 0x6
   591                           
   592  0076                     ??_wait:	
   593                           ; 0 bytes @ 0x6
   594                           
   595  0076                     ??_set_a:	
   596                           ; 0 bytes @ 0x6
   597                           
   598  0076                     ??_set_b:	
   599                           ; 0 bytes @ 0x6
   600                           
   601  0076                     ??_set_c:	
   602                           ; 0 bytes @ 0x6
   603                           
   604  0076                     ??_set_d:	
   605                           ; 0 bytes @ 0x6
   606                           
   607  0076                     ??_set_e:	
   608                           ; 0 bytes @ 0x6
   609                           
   610  0076                     ??_set_f:	
   611                           ; 0 bytes @ 0x6
   612                           
   613  0076                     ??_set_g:	
   614                           ; 0 bytes @ 0x6
   615                           
   616  0076                     ??_set_p:	
   617                           ; 0 bytes @ 0x6
   618                           
   619  0076                     set_num@num:	
   620                           ; 0 bytes @ 0x6
   621                           
   622  0076                     ___wmul@multiplicand:	
   623                           ; 2 bytes @ 0x6
   624                           
   625                           
   626                           ; 2 bytes @ 0x6
   627  0076                     	ds	2
   628  0078                     ??_light2:	
   629  0078                     ??___wmul:	
   630                           ; 0 bytes @ 0x8
   631                           
   632  0078                     ??___lwdiv:	
   633                           ; 0 bytes @ 0x8
   634                           
   635                           
   636                           ; 0 bytes @ 0x8
   637  0078                     	ds	1
   638  0079                     ??_main:	
   639                           
   640                           	psect	cstackBANK0
   641  0020                     __pcstackBANK0:	
   642                           ; 0 bytes @ 0x9
   643                           
   644  0020                     ??_set_num:	
   645  0020                     wait@i:	
   646                           ; 0 bytes @ 0x0
   647                           
   648  0020                     ___wmul@product:	
   649                           ; 2 bytes @ 0x0
   650                           
   651                           
   652                           ; 2 bytes @ 0x0
   653  0020                     	ds	2
   654  0022                     ?___lwdiv:	
   655  0022                     ___lwdiv@divisor:	
   656                           ; 2 bytes @ 0x2
   657                           
   658                           
   659                           ; 2 bytes @ 0x2
   660  0022                     	ds	1
   661  0023                     ?_light2:	
   662  0023                     light2@dot:	
   663                           ; 0 bytes @ 0x3
   664                           
   665                           
   666                           ; 1 bytes @ 0x3
   667  0023                     	ds	1
   668  0024                     light2@num:	
   669  0024                     ___lwdiv@dividend:	
   670                           ; 2 bytes @ 0x4
   671                           
   672                           
   673                           ; 2 bytes @ 0x4
   674  0024                     	ds	2
   675  0026                     light2@digit:	
   676  0026                     ___lwdiv@counter:	
   677                           ; 1 bytes @ 0x6
   678                           
   679                           
   680                           ; 1 bytes @ 0x6
   681  0026                     	ds	1
   682  0027                     light2@i:	
   683  0027                     ___lwdiv@quotient:	
   684                           ; 2 bytes @ 0x7
   685                           
   686                           
   687                           ; 2 bytes @ 0x7
   688  0027                     	ds	2
   689  0029                     ??_error2:	
   690  0029                     ?___lwmod:	
   691                           ; 0 bytes @ 0x9
   692                           
   693  0029                     ___lwmod@divisor:	
   694                           ; 2 bytes @ 0x9
   695                           
   696                           
   697                           ; 2 bytes @ 0x9
   698  0029                     	ds	1
   699  002A                     error2@error_dot:	
   700                           
   701                           ; 4 bytes @ 0xA
   702  002A                     	ds	1
   703  002B                     ___lwmod@dividend:	
   704                           
   705                           ; 2 bytes @ 0xB
   706  002B                     	ds	2
   707  002D                     ??___lwmod:	
   708                           
   709                           ; 0 bytes @ 0xD
   710  002D                     	ds	1
   711  002E                     ___lwmod@counter:	
   712  002E                     error2@error_digit:	
   713                           ; 1 bytes @ 0xE
   714                           
   715                           
   716                           ; 4 bytes @ 0xE
   717  002E                     	ds	1
   718  002F                     ?_num_digits_conv:	
   719  002F                     num_digits_conv@digit:	
   720                           ; 0 bytes @ 0xF
   721                           
   722                           
   723                           ; 1 bytes @ 0xF
   724  002F                     	ds	1
   725  0030                     num_digits_conv@dot:	
   726                           
   727                           ; 1 bytes @ 0x10
   728  0030                     	ds	1
   729  0031                     ??_num_digits_conv:	
   730                           
   731                           ; 0 bytes @ 0x11
   732  0031                     	ds	2
   733  0033                     num_digits_conv@data:	
   734                           
   735                           ; 1 bytes @ 0x13
   736  0033                     	ds	1
   737  0034                     num_digits_conv@num:	
   738                           
   739                           ; 2 bytes @ 0x14
   740  0034                     	ds	2
   741  0036                     ??_loop:	
   742                           
   743                           ; 0 bytes @ 0x16
   744  0036                     	ds	2
   745  0038                     loop@dot:	
   746                           
   747                           ; 4 bytes @ 0x18
   748  0038                     	ds	4
   749  003C                     loop@digit:	
   750                           
   751                           ; 4 bytes @ 0x1C
   752  003C                     	ds	4
   753                           
   754                           	psect	maintext
   755  03DC                     __pmaintext:	
   756 ;;
   757 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   758 ;;
   759 ;; *************** function _main *****************
   760 ;; Defined at:
   761 ;;		line 59 in file "main.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;		None
   764 ;; Auto vars:     Size  Location     Type
   765 ;;		None
   766 ;; Return value:  Size  Location     Type
   767 ;;		None               void
   768 ;; Registers used:
   769 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   770 ;; Tracked objects:
   771 ;;		On entry : 17F/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   775 ;;      Params:         0       0       0       0       0       0
   776 ;;      Locals:         0       0       0       0       0       0
   777 ;;      Temps:          0       0       0       0       0       0
   778 ;;      Totals:         0       0       0       0       0       0
   779 ;;Total ram usage:        0 bytes
   780 ;; Hardware stack levels required when called:    7
   781 ;; This function calls:
   782 ;;		_init
   783 ;;		_loop
   784 ;; This function is called by:
   785 ;;		Startup code after reset
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789                           
   790                           ;psect for function _main
   791  03DC                     _main:	
   792                           
   793                           ;main.c: 60: init();
   794                           
   795                           ;incstack = 0
   796                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   797  03DC  3183  2342  3183   	fcall	_init
   798  03DF                     l1321:	
   799                           ;main.c: 62: while(1){
   800                           
   801                           
   802                           ;main.c: 63: loop();
   803  03DF  3182  22F2  3183   	fcall	_loop
   804  03E2  2BDF               	goto	l1321
   805  03E3                     __end_of_main:	
   806                           ;main.c: 64: }
   807                           ;main.c: 65: return;
   808                           
   809                           
   810                           	psect	text1
   811  02F2                     __ptext1:	
   812 ;; *************** function _loop *****************
   813 ;; Defined at:
   814 ;;		line 101 in file "main.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;		None
   817 ;; Auto vars:     Size  Location     Type
   818 ;;  digit           4   28[BANK0 ] int [2]
   819 ;;  dot             4   24[BANK0 ] int [2]
   820 ;; Return value:  Size  Location     Type
   821 ;;		None               void
   822 ;; Registers used:
   823 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   829 ;;      Params:         0       0       0       0       0       0
   830 ;;      Locals:         0       8       0       0       0       0
   831 ;;      Temps:          0       2       0       0       0       0
   832 ;;      Totals:         0      10       0       0       0       0
   833 ;;Total ram usage:       10 bytes
   834 ;; Hardware stack levels used:    1
   835 ;; Hardware stack levels required when called:    6
   836 ;; This function calls:
   837 ;;		_error2
   838 ;;		_light2
   839 ;;		_num_digits_conv
   840 ;; This function is called by:
   841 ;;		_main
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           
   846                           ;psect for function _loop
   847  02F2                     _loop:	
   848                           
   849                           ;main.c: 102: int digit[2];
   850                           ;main.c: 103: int dot[2];
   851                           ;main.c: 105: if (counter < 16) {
   852                           
   853                           ;incstack = 0
   854                           ; Regs used in _loop: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   855  02F2  3010               	movlw	16
   856  02F3  0279               	subwf	_counter,w
   857  02F4  1803               	skipnc
   858  02F5  2B0C               	goto	l1317
   859                           
   860                           ;main.c: 106: num_digits_conv(received_data, digit, dot);
   861  02F6  303C               	movlw	loop@digit& (0+255)
   862  02F7  0020               	movlb	0	; select bank0
   863  02F8  00B6               	movwf	??_loop
   864  02F9  0836               	movf	??_loop,w
   865  02FA  00AF               	movwf	num_digits_conv@digit
   866  02FB  3038               	movlw	loop@dot& (0+255)
   867  02FC  00B7               	movwf	??_loop+1
   868  02FD  0837               	movf	??_loop+1,w
   869  02FE  00B0               	movwf	num_digits_conv@dot
   870  02FF  0848               	movf	_received_data,w
   871  0300  3181  21D6  3182   	fcall	_num_digits_conv
   872                           
   873                           ;main.c: 107: light2(digit, dot);
   874  0303  3038               	movlw	loop@dot& (0+255)
   875  0304  0020               	movlb	0	; select bank0
   876  0305  00B6               	movwf	??_loop
   877  0306  0836               	movf	??_loop,w
   878  0307  00A3               	movwf	light2@dot
   879  0308  303C               	movlw	loop@digit& (0+255)
   880  0309  3180  2039         	fcall	_light2
   881                           
   882                           ;main.c: 108: } else {
   883  030B  0008               	return
   884  030C                     l1317:	
   885                           
   886                           ;main.c: 109: error2();
   887  030C  3183  2329         	fcall	_error2
   888  030E  0008               	return
   889  030F                     __end_of_loop:	
   890                           
   891                           	psect	text2
   892  01D6                     __ptext2:	
   893 ;; *************** function _num_digits_conv *****************
   894 ;; Defined at:
   895 ;;		line 113 in file "main.c"
   896 ;; Parameters:    Size  Location     Type
   897 ;;  data            1    wreg     unsigned char 
   898 ;;  digit           1   15[BANK0 ] PTR int 
   899 ;;		 -> loop@digit(4), 
   900 ;;  dot             1   16[BANK0 ] PTR int 
   901 ;;		 -> loop@dot(4), 
   902 ;; Auto vars:     Size  Location     Type
   903 ;;  data            1   19[BANK0 ] unsigned char 
   904 ;;  num             2   20[BANK0 ] unsigned int 
   905 ;; Return value:  Size  Location     Type
   906 ;;		None               void
   907 ;; Registers used:
   908 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   914 ;;      Params:         0       2       0       0       0       0
   915 ;;      Locals:         0       3       0       0       0       0
   916 ;;      Temps:          0       2       0       0       0       0
   917 ;;      Totals:         0       7       0       0       0       0
   918 ;;Total ram usage:        7 bytes
   919 ;; Hardware stack levels used:    1
   920 ;; Hardware stack levels required when called:    3
   921 ;; This function calls:
   922 ;;		___lwdiv
   923 ;;		___lwmod
   924 ;;		___wmul
   925 ;; This function is called by:
   926 ;;		_loop
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           
   930                           
   931                           ;psect for function _num_digits_conv
   932  01D6                     _num_digits_conv:	
   933                           
   934                           ;incstack = 0
   935                           ; Regs used in _num_digits_conv: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   936                           ;num_digits_conv@data stored from wreg
   937  01D6  0020               	movlb	0	; select bank0
   938  01D7  00B3               	movwf	num_digits_conv@data
   939                           
   940                           ;main.c: 114: unsigned int num = ((unsigned int)data * 120) / 255;
   941  01D8  30FF               	movlw	255
   942  01D9  00A2               	movwf	___lwdiv@divisor
   943  01DA  3000               	movlw	0
   944  01DB  00A3               	movwf	___lwdiv@divisor+1
   945  01DC  0833               	movf	num_digits_conv@data,w
   946  01DD  00B1               	movwf	??_num_digits_conv
   947  01DE  01B2               	clrf	??_num_digits_conv+1
   948  01DF  0831               	movf	??_num_digits_conv,w
   949  01E0  00F4               	movwf	___wmul@multiplier
   950  01E1  0832               	movf	??_num_digits_conv+1,w
   951  01E2  00F5               	movwf	___wmul@multiplier+1
   952  01E3  3078               	movlw	120
   953  01E4  00F6               	movwf	___wmul@multiplicand
   954  01E5  3000               	movlw	0
   955  01E6  00F7               	movwf	___wmul@multiplicand+1
   956  01E7  3182  22D2  3181   	fcall	___wmul
   957  01EA  0875               	movf	?___wmul+1,w
   958  01EB  0020               	movlb	0	; select bank0
   959  01EC  01A5               	clrf	___lwdiv@dividend+1
   960  01ED  07A5               	addwf	___lwdiv@dividend+1,f
   961  01EE  0874               	movf	?___wmul,w
   962  01EF  01A4               	clrf	___lwdiv@dividend
   963  01F0  07A4               	addwf	___lwdiv@dividend,f
   964  01F1  3182  226C  3181   	fcall	___lwdiv
   965  01F4  0020               	movlb	0	; select bank0
   966  01F5  0823               	movf	?___lwdiv+1,w
   967  01F6  01B5               	clrf	num_digits_conv@num+1
   968  01F7  07B5               	addwf	num_digits_conv@num+1,f
   969  01F8  0822               	movf	?___lwdiv,w
   970  01F9  01B4               	clrf	num_digits_conv@num
   971  01FA  07B4               	addwf	num_digits_conv@num,f
   972                           
   973                           ;main.c: 116: if (num >= 100) {
   974  01FB  3000               	movlw	0
   975  01FC  0235               	subwf	num_digits_conv@num+1,w
   976  01FD  3064               	movlw	100
   977  01FE  1903               	skipnz
   978  01FF  0234               	subwf	num_digits_conv@num,w
   979  0200  1C03               	skipc
   980  0201  2A25               	goto	l1301
   981                           
   982                           ;main.c: 117: num /= 10;
   983  0202  300A               	movlw	10
   984  0203  00A2               	movwf	___lwdiv@divisor
   985  0204  3000               	movlw	0
   986  0205  00A3               	movwf	___lwdiv@divisor+1
   987  0206  0835               	movf	num_digits_conv@num+1,w
   988  0207  01A5               	clrf	___lwdiv@dividend+1
   989  0208  07A5               	addwf	___lwdiv@dividend+1,f
   990  0209  0834               	movf	num_digits_conv@num,w
   991  020A  01A4               	clrf	___lwdiv@dividend
   992  020B  07A4               	addwf	___lwdiv@dividend,f
   993  020C  3182  226C  3181   	fcall	___lwdiv
   994  020F  0020               	movlb	0	; select bank0
   995  0210  0823               	movf	?___lwdiv+1,w
   996  0211  01B5               	clrf	num_digits_conv@num+1
   997  0212  07B5               	addwf	num_digits_conv@num+1,f
   998  0213  0822               	movf	?___lwdiv,w
   999  0214  01B4               	clrf	num_digits_conv@num
  1000  0215  07B4               	addwf	num_digits_conv@num,f
  1001                           
  1002                           ;main.c: 118: dot[0] = 1;
  1003  0216  0830               	movf	num_digits_conv@dot,w
  1004  0217  0086               	movwf	6
  1005  0218  0187               	clrf	7
  1006  0219  3001               	movlw	1
  1007  021A  3FC0               	movwi [0]fsr1
  1008  021B  3000               	movlw	0
  1009  021C  3FC1               	movwi [1]fsr1
  1010                           
  1011                           ;main.c: 119: dot[1] = 0;
  1012  021D  0830               	movf	num_digits_conv@dot,w
  1013  021E  3E02               	addlw	2
  1014  021F  0086               	movwf	6
  1015  0220  0187               	clrf	7
  1016  0221  3000               	movlw	0
  1017  0222  3FC0               	movwi [0]fsr1
  1018  0223  3FC1               	movwi [1]fsr1
  1019                           
  1020                           ;main.c: 120: } else {
  1021  0224  2A33               	goto	l1305
  1022  0225                     l1301:	
  1023                           
  1024                           ;main.c: 121: dot[0] = 0;
  1025  0225  0830               	movf	num_digits_conv@dot,w
  1026  0226  0086               	movwf	6
  1027  0227  0187               	clrf	7
  1028  0228  3000               	movlw	0
  1029  0229  3FC0               	movwi [0]fsr1
  1030  022A  3FC1               	movwi [1]fsr1
  1031                           
  1032                           ;main.c: 122: dot[1] = 1;
  1033  022B  0830               	movf	num_digits_conv@dot,w
  1034  022C  3E02               	addlw	2
  1035  022D  0086               	movwf	6
  1036  022E  0187               	clrf	7
  1037  022F  3001               	movlw	1
  1038  0230  3FC0               	movwi [0]fsr1
  1039  0231  3000               	movlw	0
  1040  0232  3FC1               	movwi [1]fsr1
  1041  0233                     l1305:	
  1042                           
  1043                           ;main.c: 123: }
  1044                           ;main.c: 125: digit[0] = num % 10;
  1045  0233  300A               	movlw	10
  1046  0234  00A9               	movwf	___lwmod@divisor
  1047  0235  3000               	movlw	0
  1048  0236  00AA               	movwf	___lwmod@divisor+1
  1049  0237  0835               	movf	num_digits_conv@num+1,w
  1050  0238  01AC               	clrf	___lwmod@dividend+1
  1051  0239  07AC               	addwf	___lwmod@dividend+1,f
  1052  023A  0834               	movf	num_digits_conv@num,w
  1053  023B  01AB               	clrf	___lwmod@dividend
  1054  023C  07AB               	addwf	___lwmod@dividend,f
  1055  023D  3182  22A3  3181   	fcall	___lwmod
  1056  0240  0020               	movlb	0	; select bank0
  1057  0241  082F               	movf	num_digits_conv@digit,w
  1058  0242  0086               	movwf	6
  1059  0243  0187               	clrf	7
  1060  0244  0829               	movf	?___lwmod,w
  1061  0245  3FC0               	movwi [0]fsr1
  1062  0246  082A               	movf	?___lwmod+1,w
  1063  0247  3FC1               	movwi [1]fsr1
  1064                           
  1065                           ;main.c: 126: digit[1] = (num / 10) % 10;
  1066  0248  300A               	movlw	10
  1067  0249  00A9               	movwf	___lwmod@divisor
  1068  024A  3000               	movlw	0
  1069  024B  00AA               	movwf	___lwmod@divisor+1
  1070  024C  300A               	movlw	10
  1071  024D  00A2               	movwf	___lwdiv@divisor
  1072  024E  3000               	movlw	0
  1073  024F  00A3               	movwf	___lwdiv@divisor+1
  1074  0250  0835               	movf	num_digits_conv@num+1,w
  1075  0251  01A5               	clrf	___lwdiv@dividend+1
  1076  0252  07A5               	addwf	___lwdiv@dividend+1,f
  1077  0253  0834               	movf	num_digits_conv@num,w
  1078  0254  01A4               	clrf	___lwdiv@dividend
  1079  0255  07A4               	addwf	___lwdiv@dividend,f
  1080  0256  3182  226C  3181   	fcall	___lwdiv
  1081  0259  0020               	movlb	0	; select bank0
  1082  025A  0823               	movf	?___lwdiv+1,w
  1083  025B  01AC               	clrf	___lwmod@dividend+1
  1084  025C  07AC               	addwf	___lwmod@dividend+1,f
  1085  025D  0822               	movf	?___lwdiv,w
  1086  025E  01AB               	clrf	___lwmod@dividend
  1087  025F  07AB               	addwf	___lwmod@dividend,f
  1088  0260  3182  22A3         	fcall	___lwmod
  1089  0262  0020               	movlb	0	; select bank0
  1090  0263  082F               	movf	num_digits_conv@digit,w
  1091  0264  3E02               	addlw	2
  1092  0265  0086               	movwf	6
  1093  0266  0187               	clrf	7
  1094  0267  0829               	movf	?___lwmod,w
  1095  0268  3FC0               	movwi [0]fsr1
  1096  0269  082A               	movf	?___lwmod+1,w
  1097  026A  3FC1               	movwi [1]fsr1
  1098  026B  0008               	return
  1099  026C                     __end_of_num_digits_conv:	
  1100                           
  1101                           	psect	text3
  1102  02D2                     __ptext3:	
  1103 ;; *************** function ___wmul *****************
  1104 ;; Defined at:
  1105 ;;		line 15 in file "C:\isaka\application\compiler\xc\xc8\sources\common\Umul16.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;  multiplier      2    4[COMMON] unsigned int 
  1108 ;;  multiplicand    2    6[COMMON] unsigned int 
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;  product         2    0[BANK0 ] unsigned int 
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  2    4[COMMON] unsigned int 
  1113 ;; Registers used:
  1114 ;;		wreg, status,2, status,0
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1120 ;;      Params:         4       0       0       0       0       0
  1121 ;;      Locals:         0       2       0       0       0       0
  1122 ;;      Temps:          0       0       0       0       0       0
  1123 ;;      Totals:         4       2       0       0       0       0
  1124 ;;Total ram usage:        6 bytes
  1125 ;; Hardware stack levels used:    1
  1126 ;; Hardware stack levels required when called:    2
  1127 ;; This function calls:
  1128 ;;		Nothing
  1129 ;; This function is called by:
  1130 ;;		_num_digits_conv
  1131 ;; This function uses a non-reentrant model
  1132 ;;
  1133                           
  1134                           
  1135                           ;psect for function ___wmul
  1136  02D2                     ___wmul:	
  1137                           
  1138                           ;incstack = 0
  1139                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1140  02D2  0020               	movlb	0	; select bank0
  1141  02D3  01A0               	clrf	___wmul@product
  1142  02D4  01A1               	clrf	___wmul@product+1
  1143  02D5                     l1255:	
  1144  02D5  1C74               	btfss	___wmul@multiplier,0
  1145  02D6  2ADC               	goto	l316
  1146  02D7  0876               	movf	___wmul@multiplicand,w
  1147  02D8  0020               	movlb	0	; select bank0
  1148  02D9  07A0               	addwf	___wmul@product,f
  1149  02DA  0877               	movf	___wmul@multiplicand+1,w
  1150  02DB  3DA1               	addwfc	___wmul@product+1,f
  1151  02DC                     l316:	
  1152  02DC  3001               	movlw	1
  1153  02DD                     u1425:	
  1154  02DD  35F6               	lslf	___wmul@multiplicand,f
  1155  02DE  0DF7               	rlf	___wmul@multiplicand+1,f
  1156  02DF  0B89               	decfsz	9,f
  1157  02E0  2ADD               	goto	u1425
  1158  02E1  3001               	movlw	1
  1159  02E2                     u1435:	
  1160  02E2  36F5               	lsrf	___wmul@multiplier+1,f
  1161  02E3  0CF4               	rrf	___wmul@multiplier,f
  1162  02E4  0B89               	decfsz	9,f
  1163  02E5  2AE2               	goto	u1435
  1164  02E6  0875               	movf	___wmul@multiplier+1,w
  1165  02E7  0474               	iorwf	___wmul@multiplier,w
  1166  02E8  1D03               	skipz
  1167  02E9  2AD5               	goto	l1255
  1168  02EA  0020               	movlb	0	; select bank0
  1169  02EB  0821               	movf	___wmul@product+1,w
  1170  02EC  01F5               	clrf	?___wmul+1
  1171  02ED  07F5               	addwf	?___wmul+1,f
  1172  02EE  0820               	movf	___wmul@product,w
  1173  02EF  01F4               	clrf	?___wmul
  1174  02F0  07F4               	addwf	?___wmul,f
  1175  02F1  0008               	return
  1176  02F2                     __end_of___wmul:	
  1177                           
  1178                           	psect	text4
  1179  02A3                     __ptext4:	
  1180 ;; *************** function ___lwmod *****************
  1181 ;; Defined at:
  1182 ;;		line 6 in file "C:\isaka\application\compiler\xc\xc8\sources\common\lwmod.c"
  1183 ;; Parameters:    Size  Location     Type
  1184 ;;  divisor         2    9[BANK0 ] unsigned int 
  1185 ;;  dividend        2   11[BANK0 ] unsigned int 
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;  counter         1   14[BANK0 ] unsigned char 
  1188 ;; Return value:  Size  Location     Type
  1189 ;;                  2    9[BANK0 ] unsigned int 
  1190 ;; Registers used:
  1191 ;;		wreg, status,2, status,0
  1192 ;; Tracked objects:
  1193 ;;		On entry : 0/0
  1194 ;;		On exit  : 0/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1197 ;;      Params:         0       4       0       0       0       0
  1198 ;;      Locals:         0       1       0       0       0       0
  1199 ;;      Temps:          0       1       0       0       0       0
  1200 ;;      Totals:         0       6       0       0       0       0
  1201 ;;Total ram usage:        6 bytes
  1202 ;; Hardware stack levels used:    1
  1203 ;; Hardware stack levels required when called:    2
  1204 ;; This function calls:
  1205 ;;		Nothing
  1206 ;; This function is called by:
  1207 ;;		_num_digits_conv
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211                           
  1212                           ;psect for function ___lwmod
  1213  02A3                     ___lwmod:	
  1214                           
  1215                           ;incstack = 0
  1216                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1217  02A3  0020               	movlb	0	; select bank0
  1218  02A4  082A               	movf	___lwmod@divisor+1,w
  1219  02A5  0429               	iorwf	___lwmod@divisor,w
  1220  02A6  1903               	skipnz
  1221  02A7  2ACB               	goto	l1115
  1222  02A8  01AE               	clrf	___lwmod@counter
  1223  02A9  0AAE               	incf	___lwmod@counter,f
  1224  02AA                     l1105:	
  1225  02AA  1BAA               	btfsc	___lwmod@divisor+1,7
  1226  02AB  2AB6               	goto	l1107
  1227  02AC  3001               	movlw	1
  1228  02AD                     u1135:	
  1229  02AD  35A9               	lslf	___lwmod@divisor,f
  1230  02AE  0DAA               	rlf	___lwmod@divisor+1,f
  1231  02AF  0B89               	decfsz	9,f
  1232  02B0  2AAD               	goto	u1135
  1233  02B1  3001               	movlw	1
  1234  02B2  00AD               	movwf	??___lwmod
  1235  02B3  082D               	movf	??___lwmod,w
  1236  02B4  07AE               	addwf	___lwmod@counter,f
  1237  02B5  2AAA               	goto	l1105
  1238  02B6                     l1107:	
  1239  02B6  082A               	movf	___lwmod@divisor+1,w
  1240  02B7  022C               	subwf	___lwmod@dividend+1,w
  1241  02B8  1D03               	skipz
  1242  02B9  2ABC               	goto	u1155
  1243  02BA  0829               	movf	___lwmod@divisor,w
  1244  02BB  022B               	subwf	___lwmod@dividend,w
  1245  02BC                     u1155:	
  1246  02BC  1C03               	skipc
  1247  02BD  2AC2               	goto	l1111
  1248  02BE  0829               	movf	___lwmod@divisor,w
  1249  02BF  02AB               	subwf	___lwmod@dividend,f
  1250  02C0  082A               	movf	___lwmod@divisor+1,w
  1251  02C1  3BAC               	subwfb	___lwmod@dividend+1,f
  1252  02C2                     l1111:	
  1253  02C2  3001               	movlw	1
  1254  02C3                     u1165:	
  1255  02C3  36AA               	lsrf	___lwmod@divisor+1,f
  1256  02C4  0CA9               	rrf	___lwmod@divisor,f
  1257  02C5  0B89               	decfsz	9,f
  1258  02C6  2AC3               	goto	u1165
  1259  02C7  3001               	movlw	1
  1260  02C8  02AE               	subwf	___lwmod@counter,f
  1261  02C9  1D03               	btfss	3,2
  1262  02CA  2AB6               	goto	l1107
  1263  02CB                     l1115:	
  1264  02CB  082C               	movf	___lwmod@dividend+1,w
  1265  02CC  01AA               	clrf	?___lwmod+1
  1266  02CD  07AA               	addwf	?___lwmod+1,f
  1267  02CE  082B               	movf	___lwmod@dividend,w
  1268  02CF  01A9               	clrf	?___lwmod
  1269  02D0  07A9               	addwf	?___lwmod,f
  1270  02D1  0008               	return
  1271  02D2                     __end_of___lwmod:	
  1272                           
  1273                           	psect	text5
  1274  026C                     __ptext5:	
  1275 ;; *************** function ___lwdiv *****************
  1276 ;; Defined at:
  1277 ;;		line 6 in file "C:\isaka\application\compiler\xc\xc8\sources\common\lwdiv.c"
  1278 ;; Parameters:    Size  Location     Type
  1279 ;;  divisor         2    2[BANK0 ] unsigned int 
  1280 ;;  dividend        2    4[BANK0 ] unsigned int 
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;  quotient        2    7[BANK0 ] unsigned int 
  1283 ;;  counter         1    6[BANK0 ] unsigned char 
  1284 ;; Return value:  Size  Location     Type
  1285 ;;                  2    2[BANK0 ] unsigned int 
  1286 ;; Registers used:
  1287 ;;		wreg, status,2, status,0
  1288 ;; Tracked objects:
  1289 ;;		On entry : 0/0
  1290 ;;		On exit  : 0/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1293 ;;      Params:         0       4       0       0       0       0
  1294 ;;      Locals:         0       3       0       0       0       0
  1295 ;;      Temps:          1       0       0       0       0       0
  1296 ;;      Totals:         1       7       0       0       0       0
  1297 ;;Total ram usage:        8 bytes
  1298 ;; Hardware stack levels used:    1
  1299 ;; Hardware stack levels required when called:    2
  1300 ;; This function calls:
  1301 ;;		Nothing
  1302 ;; This function is called by:
  1303 ;;		_num_digits_conv
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307                           
  1308                           ;psect for function ___lwdiv
  1309  026C                     ___lwdiv:	
  1310                           
  1311                           ;incstack = 0
  1312                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1313  026C  0020               	movlb	0	; select bank0
  1314  026D  01A7               	clrf	___lwdiv@quotient
  1315  026E  01A8               	clrf	___lwdiv@quotient+1
  1316  026F  0823               	movf	___lwdiv@divisor+1,w
  1317  0270  0422               	iorwf	___lwdiv@divisor,w
  1318  0271  1903               	skipnz
  1319  0272  2A9C               	goto	l1287
  1320  0273  01A6               	clrf	___lwdiv@counter
  1321  0274  0AA6               	incf	___lwdiv@counter,f
  1322  0275                     l1275:	
  1323  0275  1BA3               	btfsc	___lwdiv@divisor+1,7
  1324  0276  2A81               	goto	l1277
  1325  0277  3001               	movlw	1
  1326  0278                     u1465:	
  1327  0278  35A2               	lslf	___lwdiv@divisor,f
  1328  0279  0DA3               	rlf	___lwdiv@divisor+1,f
  1329  027A  0B89               	decfsz	9,f
  1330  027B  2A78               	goto	u1465
  1331  027C  3001               	movlw	1
  1332  027D  00F8               	movwf	??___lwdiv
  1333  027E  0878               	movf	??___lwdiv,w
  1334  027F  07A6               	addwf	___lwdiv@counter,f
  1335  0280  2A75               	goto	l1275
  1336  0281                     l1277:	
  1337  0281  3001               	movlw	1
  1338  0282                     u1485:	
  1339  0282  35A7               	lslf	___lwdiv@quotient,f
  1340  0283  0DA8               	rlf	___lwdiv@quotient+1,f
  1341  0284  0B89               	decfsz	9,f
  1342  0285  2A82               	goto	u1485
  1343  0286  0823               	movf	___lwdiv@divisor+1,w
  1344  0287  0225               	subwf	___lwdiv@dividend+1,w
  1345  0288  1D03               	skipz
  1346  0289  2A8C               	goto	u1495
  1347  028A  0822               	movf	___lwdiv@divisor,w
  1348  028B  0224               	subwf	___lwdiv@dividend,w
  1349  028C                     u1495:	
  1350  028C  1C03               	skipc
  1351  028D  2A93               	goto	l1283
  1352  028E  0822               	movf	___lwdiv@divisor,w
  1353  028F  02A4               	subwf	___lwdiv@dividend,f
  1354  0290  0823               	movf	___lwdiv@divisor+1,w
  1355  0291  3BA5               	subwfb	___lwdiv@dividend+1,f
  1356  0292  1427               	bsf	___lwdiv@quotient,0
  1357  0293                     l1283:	
  1358  0293  3001               	movlw	1
  1359  0294                     u1505:	
  1360  0294  36A3               	lsrf	___lwdiv@divisor+1,f
  1361  0295  0CA2               	rrf	___lwdiv@divisor,f
  1362  0296  0B89               	decfsz	9,f
  1363  0297  2A94               	goto	u1505
  1364  0298  3001               	movlw	1
  1365  0299  02A6               	subwf	___lwdiv@counter,f
  1366  029A  1D03               	btfss	3,2
  1367  029B  2A81               	goto	l1277
  1368  029C                     l1287:	
  1369  029C  0828               	movf	___lwdiv@quotient+1,w
  1370  029D  01A3               	clrf	?___lwdiv+1
  1371  029E  07A3               	addwf	?___lwdiv+1,f
  1372  029F  0827               	movf	___lwdiv@quotient,w
  1373  02A0  01A2               	clrf	?___lwdiv
  1374  02A1  07A2               	addwf	?___lwdiv,f
  1375  02A2  0008               	return
  1376  02A3                     __end_of___lwdiv:	
  1377                           
  1378                           	psect	text6
  1379  0329                     __ptext6:	
  1380 ;; *************** function _error2 *****************
  1381 ;; Defined at:
  1382 ;;		line 58 in file "display.c"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;		None
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;  error_digit     4   14[BANK0 ] int [2]
  1387 ;;  error_dot       4   10[BANK0 ] int [2]
  1388 ;; Return value:  Size  Location     Type
  1389 ;;		None               void
  1390 ;; Registers used:
  1391 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 0/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1397 ;;      Params:         0       0       0       0       0       0
  1398 ;;      Locals:         0       8       0       0       0       0
  1399 ;;      Temps:          0       1       0       0       0       0
  1400 ;;      Totals:         0       9       0       0       0       0
  1401 ;;Total ram usage:        9 bytes
  1402 ;; Hardware stack levels used:    1
  1403 ;; Hardware stack levels required when called:    5
  1404 ;; This function calls:
  1405 ;;		_light2
  1406 ;; This function is called by:
  1407 ;;		_loop
  1408 ;; This function uses a non-reentrant model
  1409 ;;
  1410                           
  1411                           
  1412                           ;psect for function _error2
  1413  0329                     _error2:	
  1414                           
  1415                           ;display.c: 59: int error_digit[2] = { 11, 11 };
  1416                           
  1417                           ;incstack = 0
  1418                           ; Regs used in _error2: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1419  0329  0020               	movlb	0	; select bank0
  1420  032A  0843               	movf	error2@F2797+3,w
  1421  032B  00B1               	movwf	error2@error_digit+3
  1422  032C  0842               	movf	error2@F2797+2,w
  1423  032D  00B0               	movwf	error2@error_digit+2
  1424  032E  0841               	movf	error2@F2797+1,w
  1425  032F  00AF               	movwf	error2@error_digit+1
  1426  0330  0840               	movf	error2@F2797,w
  1427  0331  00AE               	movwf	error2@error_digit
  1428                           
  1429                           ;display.c: 60: int error_dot[2] = { 1, 1 };
  1430  0332  0847               	movf	error2@F2799+3,w
  1431  0333  00AD               	movwf	error2@error_dot+3
  1432  0334  0846               	movf	error2@F2799+2,w
  1433  0335  00AC               	movwf	error2@error_dot+2
  1434  0336  0845               	movf	error2@F2799+1,w
  1435  0337  00AB               	movwf	error2@error_dot+1
  1436  0338  0844               	movf	error2@F2799,w
  1437  0339  00AA               	movwf	error2@error_dot
  1438                           
  1439                           ;display.c: 61: light2(error_digit, error_dot);
  1440  033A  302A               	movlw	error2@error_dot& (0+255)
  1441  033B  00A9               	movwf	??_error2
  1442  033C  0829               	movf	??_error2,w
  1443  033D  00A3               	movwf	light2@dot
  1444  033E  302E               	movlw	error2@error_digit& (0+255)
  1445  033F  3180  2039         	fcall	_light2
  1446  0341  0008               	return
  1447  0342                     __end_of_error2:	
  1448                           
  1449                           	psect	text7
  1450  0039                     __ptext7:	
  1451 ;; *************** function _light2 *****************
  1452 ;; Defined at:
  1453 ;;		line 22 in file "display.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;  digit           1    wreg     PTR int 
  1456 ;;		 -> error2@error_digit(4), loop@digit(4), 
  1457 ;;  dot             1    3[BANK0 ] PTR int 
  1458 ;;		 -> error2@error_dot(4), loop@dot(4), 
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;  digit           1    6[BANK0 ] PTR int 
  1461 ;;		 -> error2@error_digit(4), loop@digit(4), 
  1462 ;;  i               2    7[BANK0 ] int 
  1463 ;;  num             2    4[BANK0 ] int 
  1464 ;; Return value:  Size  Location     Type
  1465 ;;		None               void
  1466 ;; Registers used:
  1467 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1473 ;;      Params:         0       1       0       0       0       0
  1474 ;;      Locals:         0       5       0       0       0       0
  1475 ;;      Temps:          1       0       0       0       0       0
  1476 ;;      Totals:         1       6       0       0       0       0
  1477 ;;Total ram usage:        7 bytes
  1478 ;; Hardware stack levels used:    1
  1479 ;; Hardware stack levels required when called:    4
  1480 ;; This function calls:
  1481 ;;		_close2
  1482 ;;		_open2
  1483 ;;		_set_num
  1484 ;;		_wait
  1485 ;; This function is called by:
  1486 ;;		_loop
  1487 ;;		_error2
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491                           
  1492                           ;psect for function _light2
  1493  0039                     _light2:	
  1494                           
  1495                           ;incstack = 0
  1496                           ; Regs used in _light2: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1497                           ;light2@digit stored from wreg
  1498  0039  0020               	movlb	0	; select bank0
  1499  003A  00A6               	movwf	light2@digit
  1500                           
  1501                           ;display.c: 23: int i;
  1502                           ;display.c: 24: int num;
  1503                           ;display.c: 25: for (i=0; i<2; i++) {
  1504  003B  01A7               	clrf	light2@i
  1505  003C  01A8               	clrf	light2@i+1
  1506  003D                     L12:	
  1507  003D  0828               	movf	light2@i+1,w
  1508  003E  3A80               	xorlw	128
  1509  003F  00F8               	movwf	??_light2
  1510  0040  3080               	movlw	128
  1511  0041  0278               	subwf	??_light2,w
  1512  0042  1D03               	skipz
  1513  0043  2846               	goto	u1265
  1514  0044  3002               	movlw	2
  1515  0045  0227               	subwf	light2@i,w
  1516  0046                     u1265:	
  1517  0046  1803               	btfsc	3,0
  1518  0047  0008               	return
  1519                           
  1520                           ;display.c: 26: num = 0;
  1521  0048  0020               	movlb	0	; select bank0
  1522  0049  01A4               	clrf	light2@num
  1523  004A  01A5               	clrf	light2@num+1
  1524                           
  1525                           ;display.c: 29: if (digit[i] == 0) { num = 0b00111111; }
  1526  004B  3527               	lslf	light2@i,w
  1527  004C  0726               	addwf	light2@digit,w
  1528  004D  00F8               	movwf	??_light2
  1529  004E  0878               	movf	??_light2,w
  1530  004F  0086               	movwf	6
  1531  0050  0187               	clrf	7
  1532  0051  0016               	moviw fsr1++
  1533  0052  0401               	iorwf	1,w
  1534  0053  1D03               	skipz
  1535  0054  2857               	goto	l1193
  1536  0055  303F               	movlw	63
  1537  0056  2905               	goto	L11
  1538  0057                     l1193:	
  1539                           
  1540                           ;display.c: 30: else if (digit[i] == 1) { num = 0b00000110; }
  1541  0057  3527               	lslf	light2@i,w
  1542  0058  0726               	addwf	light2@digit,w
  1543  0059  00F8               	movwf	??_light2
  1544  005A  0878               	movf	??_light2,w
  1545  005B  0086               	movwf	6
  1546  005C  0187               	clrf	7
  1547  005D  3F40               	moviw [0]fsr1
  1548  005E  3A01               	xorlw	1
  1549  005F  1D03               	skipz
  1550  0060  2863               	goto	u1285
  1551  0061  3F41               	moviw [1]fsr1
  1552  0062  3A00               	xorlw	0
  1553  0063                     u1285:	
  1554  0063  1D03               	skipz
  1555  0064  2867               	goto	l1197
  1556  0065  3006               	movlw	6
  1557  0066  2905               	goto	L11
  1558  0067                     l1197:	
  1559                           
  1560                           ;display.c: 31: else if (digit[i] == 2) { num = 0b01011011; }
  1561  0067  3527               	lslf	light2@i,w
  1562  0068  0726               	addwf	light2@digit,w
  1563  0069  00F8               	movwf	??_light2
  1564  006A  0878               	movf	??_light2,w
  1565  006B  0086               	movwf	6
  1566  006C  0187               	clrf	7
  1567  006D  3F40               	moviw [0]fsr1
  1568  006E  3A02               	xorlw	2
  1569  006F  1D03               	skipz
  1570  0070  2873               	goto	u1295
  1571  0071  3F41               	moviw [1]fsr1
  1572  0072  3A00               	xorlw	0
  1573  0073                     u1295:	
  1574  0073  1D03               	skipz
  1575  0074  2877               	goto	l1201
  1576  0075  305B               	movlw	91
  1577  0076  2905               	goto	L11
  1578  0077                     l1201:	
  1579                           
  1580                           ;display.c: 32: else if (digit[i] == 3) { num = 0b01001111; }
  1581  0077  3527               	lslf	light2@i,w
  1582  0078  0726               	addwf	light2@digit,w
  1583  0079  00F8               	movwf	??_light2
  1584  007A  0878               	movf	??_light2,w
  1585  007B  0086               	movwf	6
  1586  007C  0187               	clrf	7
  1587  007D  3F40               	moviw [0]fsr1
  1588  007E  3A03               	xorlw	3
  1589  007F  1D03               	skipz
  1590  0080  2883               	goto	u1305
  1591  0081  3F41               	moviw [1]fsr1
  1592  0082  3A00               	xorlw	0
  1593  0083                     u1305:	
  1594  0083  1D03               	skipz
  1595  0084  2887               	goto	l1205
  1596  0085  304F               	movlw	79
  1597  0086  2905               	goto	L11
  1598  0087                     l1205:	
  1599                           
  1600                           ;display.c: 33: else if (digit[i] == 4) { num = 0b01100110; }
  1601  0087  3527               	lslf	light2@i,w
  1602  0088  0726               	addwf	light2@digit,w
  1603  0089  00F8               	movwf	??_light2
  1604  008A  0878               	movf	??_light2,w
  1605  008B  0086               	movwf	6
  1606  008C  0187               	clrf	7
  1607  008D  3F40               	moviw [0]fsr1
  1608  008E  3A04               	xorlw	4
  1609  008F  1D03               	skipz
  1610  0090  2893               	goto	u1315
  1611  0091  3F41               	moviw [1]fsr1
  1612  0092  3A00               	xorlw	0
  1613  0093                     u1315:	
  1614  0093  1D03               	skipz
  1615  0094  2897               	goto	l1209
  1616  0095  3066               	movlw	102
  1617  0096  2905               	goto	L11
  1618  0097                     l1209:	
  1619                           
  1620                           ;display.c: 34: else if (digit[i] == 5) { num = 0b01101101; }
  1621  0097  3527               	lslf	light2@i,w
  1622  0098  0726               	addwf	light2@digit,w
  1623  0099  00F8               	movwf	??_light2
  1624  009A  0878               	movf	??_light2,w
  1625  009B  0086               	movwf	6
  1626  009C  0187               	clrf	7
  1627  009D  3F40               	moviw [0]fsr1
  1628  009E  3A05               	xorlw	5
  1629  009F  1D03               	skipz
  1630  00A0  28A3               	goto	u1325
  1631  00A1  3F41               	moviw [1]fsr1
  1632  00A2  3A00               	xorlw	0
  1633  00A3                     u1325:	
  1634  00A3  1D03               	skipz
  1635  00A4  28A7               	goto	l1213
  1636  00A5  306D               	movlw	109
  1637  00A6  2905               	goto	L11
  1638  00A7                     l1213:	
  1639                           
  1640                           ;display.c: 35: else if (digit[i] == 6) { num = 0b01111101; }
  1641  00A7  3527               	lslf	light2@i,w
  1642  00A8  0726               	addwf	light2@digit,w
  1643  00A9  00F8               	movwf	??_light2
  1644  00AA  0878               	movf	??_light2,w
  1645  00AB  0086               	movwf	6
  1646  00AC  0187               	clrf	7
  1647  00AD  3F40               	moviw [0]fsr1
  1648  00AE  3A06               	xorlw	6
  1649  00AF  1D03               	skipz
  1650  00B0  28B3               	goto	u1335
  1651  00B1  3F41               	moviw [1]fsr1
  1652  00B2  3A00               	xorlw	0
  1653  00B3                     u1335:	
  1654  00B3  1D03               	skipz
  1655  00B4  28B7               	goto	l1217
  1656  00B5  307D               	movlw	125
  1657  00B6  2905               	goto	L11
  1658  00B7                     l1217:	
  1659                           
  1660                           ;display.c: 36: else if (digit[i] == 7) { num = 0b00100111; }
  1661  00B7  3527               	lslf	light2@i,w
  1662  00B8  0726               	addwf	light2@digit,w
  1663  00B9  00F8               	movwf	??_light2
  1664  00BA  0878               	movf	??_light2,w
  1665  00BB  0086               	movwf	6
  1666  00BC  0187               	clrf	7
  1667  00BD  3F40               	moviw [0]fsr1
  1668  00BE  3A07               	xorlw	7
  1669  00BF  1D03               	skipz
  1670  00C0  28C3               	goto	u1345
  1671  00C1  3F41               	moviw [1]fsr1
  1672  00C2  3A00               	xorlw	0
  1673  00C3                     u1345:	
  1674  00C3  1D03               	skipz
  1675  00C4  28C7               	goto	l1221
  1676  00C5  3027               	movlw	39
  1677  00C6  2905               	goto	L11
  1678  00C7                     l1221:	
  1679                           
  1680                           ;display.c: 37: else if (digit[i] == 8) { num = 0b01111111; }
  1681  00C7  3527               	lslf	light2@i,w
  1682  00C8  0726               	addwf	light2@digit,w
  1683  00C9  00F8               	movwf	??_light2
  1684  00CA  0878               	movf	??_light2,w
  1685  00CB  0086               	movwf	6
  1686  00CC  0187               	clrf	7
  1687  00CD  3F40               	moviw [0]fsr1
  1688  00CE  3A08               	xorlw	8
  1689  00CF  1D03               	skipz
  1690  00D0  28D3               	goto	u1355
  1691  00D1  3F41               	moviw [1]fsr1
  1692  00D2  3A00               	xorlw	0
  1693  00D3                     u1355:	
  1694  00D3  1D03               	skipz
  1695  00D4  28D7               	goto	l1225
  1696  00D5  307F               	movlw	127
  1697  00D6  2905               	goto	L11
  1698  00D7                     l1225:	
  1699                           
  1700                           ;display.c: 38: else if (digit[i] == 9) { num = 0b01101111; }
  1701  00D7  3527               	lslf	light2@i,w
  1702  00D8  0726               	addwf	light2@digit,w
  1703  00D9  00F8               	movwf	??_light2
  1704  00DA  0878               	movf	??_light2,w
  1705  00DB  0086               	movwf	6
  1706  00DC  0187               	clrf	7
  1707  00DD  3F40               	moviw [0]fsr1
  1708  00DE  3A09               	xorlw	9
  1709  00DF  1D03               	skipz
  1710  00E0  28E3               	goto	u1365
  1711  00E1  3F41               	moviw [1]fsr1
  1712  00E2  3A00               	xorlw	0
  1713  00E3                     u1365:	
  1714  00E3  1D03               	skipz
  1715  00E4  28E7               	goto	l1229
  1716  00E5  306F               	movlw	111
  1717  00E6  2905               	goto	L11
  1718  00E7                     l1229:	
  1719                           
  1720                           ;display.c: 39: else if (digit[i] == 10) { num = 0b00000000; }
  1721  00E7  3527               	lslf	light2@i,w
  1722  00E8  0726               	addwf	light2@digit,w
  1723  00E9  00F8               	movwf	??_light2
  1724  00EA  0878               	movf	??_light2,w
  1725  00EB  0086               	movwf	6
  1726  00EC  0187               	clrf	7
  1727  00ED  3F40               	moviw [0]fsr1
  1728  00EE  3A0A               	xorlw	10
  1729  00EF  1D03               	skipz
  1730  00F0  28F3               	goto	u1375
  1731  00F1  3F41               	moviw [1]fsr1
  1732  00F2  3A00               	xorlw	0
  1733  00F3                     u1375:	
  1734  00F3  1D03               	skipz
  1735  00F4  28F8               	goto	l1233
  1736  00F5  01A4               	clrf	light2@num
  1737  00F6  01A5               	clrf	light2@num+1
  1738  00F7  2908               	goto	l1239
  1739  00F8                     l1233:	
  1740                           
  1741                           ;display.c: 40: else if (digit[i] == 11) { num = 0b01111001; }
  1742  00F8  3527               	lslf	light2@i,w
  1743  00F9  0726               	addwf	light2@digit,w
  1744  00FA  00F8               	movwf	??_light2
  1745  00FB  0878               	movf	??_light2,w
  1746  00FC  0086               	movwf	6
  1747  00FD  0187               	clrf	7
  1748  00FE  3F40               	moviw [0]fsr1
  1749  00FF  3A0B               	xorlw	11
  1750  0100  1D03               	skipz
  1751  0101  2904               	goto	u1385
  1752  0102  3F41               	moviw [1]fsr1
  1753  0103  3A00               	xorlw	0
  1754  0104                     u1385:	
  1755                           
  1756                           ;display.c: 41: else { num = 0b01111001; }
  1757  0104  3079               	movlw	121
  1758  0105                     L11:	
  1759  0105  00A4               	movwf	light2@num
  1760  0106  3000               	movlw	0
  1761  0107  00A5               	movwf	light2@num+1
  1762  0108                     l1239:	
  1763                           
  1764                           ;display.c: 44: if (dot[i] == 1) { num += 0b10000000; }
  1765  0108  3527               	lslf	light2@i,w
  1766  0109  0723               	addwf	light2@dot,w
  1767  010A  00F8               	movwf	??_light2
  1768  010B  0878               	movf	??_light2,w
  1769  010C  0086               	movwf	6
  1770  010D  0187               	clrf	7
  1771  010E  3F40               	moviw [0]fsr1
  1772  010F  3A01               	xorlw	1
  1773  0110  1D03               	skipz
  1774  0111  2914               	goto	u1395
  1775  0112  3F41               	moviw [1]fsr1
  1776  0113  3A00               	xorlw	0
  1777  0114                     u1395:	
  1778  0114  1D03               	skipz
  1779  0115  291A               	goto	l1243
  1780  0116  3080               	movlw	128
  1781  0117  07A4               	addwf	light2@num,f
  1782  0118  3000               	movlw	0
  1783  0119  3DA5               	addwfc	light2@num+1,f
  1784  011A                     l1243:	
  1785                           
  1786                           ;display.c: 46: set_num(num);
  1787  011A  0825               	movf	light2@num+1,w
  1788  011B  01F7               	clrf	set_num@num+1
  1789  011C  07F7               	addwf	set_num@num+1,f
  1790  011D  0824               	movf	light2@num,w
  1791  011E  01F6               	clrf	set_num@num
  1792  011F  07F6               	addwf	set_num@num,f
  1793  0120  3181  213D  3180   	fcall	_set_num
  1794                           
  1795                           ;display.c: 47: open2(i);
  1796  0123  0020               	movlb	0	; select bank0
  1797  0124  0828               	movf	light2@i+1,w
  1798  0125  01F5               	clrf	open2@digit_select+1
  1799  0126  07F5               	addwf	open2@digit_select+1,f
  1800  0127  0827               	movf	light2@i,w
  1801  0128  01F4               	clrf	open2@digit_select
  1802  0129  07F4               	addwf	open2@digit_select,f
  1803  012A  3183  2358  3180   	fcall	_open2
  1804                           
  1805                           ;display.c: 48: wait(5);
  1806  012D  3005               	movlw	5
  1807  012E  00F4               	movwf	wait@wait_time
  1808  012F  3000               	movlw	0
  1809  0130  00F5               	movwf	wait@wait_time+1
  1810  0131  3183  230F  3180   	fcall	_wait
  1811                           
  1812                           ;display.c: 49: close2();
  1813  0134  3183  23E9  3180   	fcall	_close2
  1814  0137  3001               	movlw	1
  1815  0138  0020               	movlb	0	; select bank0
  1816  0139  07A7               	addwf	light2@i,f
  1817  013A  3000               	movlw	0
  1818  013B  3DA8               	addwfc	light2@i+1,f
  1819  013C  283D               	goto	L12
  1820  013D                     __end_of_light2:	
  1821                           
  1822                           	psect	text8
  1823  030F                     __ptext8:	
  1824 ;; *************** function _wait *****************
  1825 ;; Defined at:
  1826 ;;		line 114 in file "display.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;  wait_time       2    4[COMMON] unsigned int 
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;  i               2    0[BANK0 ] int 
  1831 ;; Return value:  Size  Location     Type
  1832 ;;		None               void
  1833 ;; Registers used:
  1834 ;;		wreg, status,2
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1840 ;;      Params:         2       0       0       0       0       0
  1841 ;;      Locals:         0       2       0       0       0       0
  1842 ;;      Temps:          2       0       0       0       0       0
  1843 ;;      Totals:         4       2       0       0       0       0
  1844 ;;Total ram usage:        6 bytes
  1845 ;; Hardware stack levels used:    1
  1846 ;; Hardware stack levels required when called:    2
  1847 ;; This function calls:
  1848 ;;		Nothing
  1849 ;; This function is called by:
  1850 ;;		_light2
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854                           
  1855                           ;psect for function _wait
  1856  030F                     _wait:	
  1857                           
  1858                           ;display.c: 115: int i;
  1859                           ;display.c: 116: for (i=0; i<wait_time; i++) {
  1860                           
  1861                           ;incstack = 0
  1862                           ; Regs used in _wait: [wreg+status,2]
  1863  030F  0020               	movlb	0	; select bank0
  1864  0310  01A0               	clrf	wait@i
  1865  0311  01A1               	clrf	wait@i+1
  1866  0312                     l229:	
  1867  0312  0875               	movf	wait@wait_time+1,w
  1868  0313  0221               	subwf	wait@i+1,w
  1869  0314  1D03               	skipz
  1870  0315  2B18               	goto	u1255
  1871  0316  0874               	movf	wait@wait_time,w
  1872  0317  0220               	subwf	wait@i,w
  1873  0318                     u1255:	
  1874  0318  1803               	btfsc	3,0
  1875  0319  0008               	return
  1876                           
  1877                           ;display.c: 117: _delay((unsigned long)((1)*(16000000/4000.0)));
  1878  031A  3006               	movlw	6
  1879  031B  00F7               	movwf	??_wait+1
  1880  031C  3030               	movlw	48
  1881  031D  00F6               	movwf	??_wait
  1882  031E                     u1547:	
  1883  031E  0BF6               	decfsz	??_wait,f
  1884  031F  2B1E               	goto	u1547
  1885  0320  0BF7               	decfsz	??_wait+1,f
  1886  0321  2B1E               	goto	u1547
  1887  0322  0000               	nop
  1888  0323  3001               	movlw	1
  1889  0324  0020               	movlb	0	; select bank0
  1890  0325  07A0               	addwf	wait@i,f
  1891  0326  3000               	movlw	0
  1892  0327  3DA1               	addwfc	wait@i+1,f
  1893  0328  2B12               	goto	l229
  1894  0329                     __end_of_wait:	
  1895                           
  1896                           	psect	text9
  1897  013D                     __ptext9:	
  1898 ;; *************** function _set_num *****************
  1899 ;; Defined at:
  1900 ;;		line 68 in file "display.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;  num             2    6[COMMON] int 
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;		None
  1905 ;; Return value:  Size  Location     Type
  1906 ;;		None               void
  1907 ;; Registers used:
  1908 ;;		wreg, status,2, status,0, pclath, cstack
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1914 ;;      Params:         2       0       0       0       0       0
  1915 ;;      Locals:         0       0       0       0       0       0
  1916 ;;      Temps:          0       3       0       0       0       0
  1917 ;;      Totals:         2       3       0       0       0       0
  1918 ;;Total ram usage:        5 bytes
  1919 ;; Hardware stack levels used:    1
  1920 ;; Hardware stack levels required when called:    3
  1921 ;; This function calls:
  1922 ;;		_set_a
  1923 ;;		_set_b
  1924 ;;		_set_c
  1925 ;;		_set_d
  1926 ;;		_set_e
  1927 ;;		_set_f
  1928 ;;		_set_g
  1929 ;;		_set_p
  1930 ;; This function is called by:
  1931 ;;		_light2
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           
  1936                           ;psect for function _set_num
  1937  013D                     _set_num:	
  1938                           
  1939                           ;display.c: 69: set_a((num & 0b00000001));
  1940                           
  1941                           ;incstack = 0
  1942                           ; Regs used in _set_num: [wreg+status,2+status,0+pclath+cstack]
  1943  013D  3001               	movlw	1
  1944  013E  0576               	andwf	set_num@num,w
  1945  013F  00F4               	movwf	set_a@on_off
  1946  0140  3000               	movlw	0
  1947  0141  0577               	andwf	set_num@num+1,w
  1948  0142  00F5               	movwf	set_a@on_off+1
  1949  0143  3183  23D4  3181   	fcall	_set_a
  1950                           
  1951                           ;display.c: 70: set_b((num & 0b00000010) >> 1);
  1952  0146  0877               	movf	set_num@num+1,w
  1953  0147  0020               	movlb	0	; select bank0
  1954  0148  00A1               	movwf	??_set_num+1
  1955  0149  0876               	movf	set_num@num,w
  1956  014A  00A0               	movwf	??_set_num
  1957  014B  0D21               	rlf	??_set_num+1,w
  1958  014C  0CA1               	rrf	??_set_num+1,f
  1959  014D  0CA0               	rrf	??_set_num,f
  1960  014E  3001               	movlw	1
  1961  014F  0520               	andwf	??_set_num,w
  1962  0150  00F4               	movwf	set_b@on_off
  1963  0151  3000               	movlw	0
  1964  0152  0521               	andwf	??_set_num+1,w
  1965  0153  00F5               	movwf	set_b@on_off+1
  1966  0154  3183  23CC  3181   	fcall	_set_b
  1967                           
  1968                           ;display.c: 71: set_c((num & 0b00000100) >> 2);
  1969  0157  0877               	movf	set_num@num+1,w
  1970  0158  0020               	movlb	0	; select bank0
  1971  0159  00A1               	movwf	??_set_num+1
  1972  015A  0876               	movf	set_num@num,w
  1973  015B  00A0               	movwf	??_set_num
  1974  015C  0D21               	rlf	??_set_num+1,w
  1975  015D  0CA1               	rrf	??_set_num+1,f
  1976  015E  0CA0               	rrf	??_set_num,f
  1977  015F  0D21               	rlf	??_set_num+1,w
  1978  0160  0CA1               	rrf	??_set_num+1,f
  1979  0161  0CA0               	rrf	??_set_num,f
  1980  0162  3001               	movlw	1
  1981  0163  0520               	andwf	??_set_num,w
  1982  0164  00F4               	movwf	set_c@on_off
  1983  0165  3000               	movlw	0
  1984  0166  0521               	andwf	??_set_num+1,w
  1985  0167  00F5               	movwf	set_c@on_off+1
  1986  0168  3183  23C4  3181   	fcall	_set_c
  1987                           
  1988                           ;display.c: 72: set_d((num & 0b00001000) >> 3);
  1989  016B  0877               	movf	set_num@num+1,w
  1990  016C  0020               	movlb	0	; select bank0
  1991  016D  00A1               	movwf	??_set_num+1
  1992  016E  0876               	movf	set_num@num,w
  1993  016F  00A0               	movwf	??_set_num
  1994  0170  0D21               	rlf	??_set_num+1,w
  1995  0171  0CA1               	rrf	??_set_num+1,f
  1996  0172  0CA0               	rrf	??_set_num,f
  1997  0173  0D21               	rlf	??_set_num+1,w
  1998  0174  0CA1               	rrf	??_set_num+1,f
  1999  0175  0CA0               	rrf	??_set_num,f
  2000  0176  0D21               	rlf	??_set_num+1,w
  2001  0177  0CA1               	rrf	??_set_num+1,f
  2002  0178  0CA0               	rrf	??_set_num,f
  2003  0179  3001               	movlw	1
  2004  017A  0520               	andwf	??_set_num,w
  2005  017B  00F4               	movwf	set_d@on_off
  2006  017C  3000               	movlw	0
  2007  017D  0521               	andwf	??_set_num+1,w
  2008  017E  00F5               	movwf	set_d@on_off+1
  2009  017F  3183  23BC  3181   	fcall	_set_d
  2010                           
  2011                           ;display.c: 73: set_e((num & 0b00010000) >> 4);
  2012  0182  0877               	movf	set_num@num+1,w
  2013  0183  0020               	movlb	0	; select bank0
  2014  0184  00A1               	movwf	??_set_num+1
  2015  0185  0876               	movf	set_num@num,w
  2016  0186  00A0               	movwf	??_set_num
  2017  0187  3004               	movlw	4
  2018  0188  00A2               	movwf	??_set_num+2
  2019  0189                     u795:	
  2020  0189  0D21               	rlf	??_set_num+1,w
  2021  018A  0CA1               	rrf	??_set_num+1,f
  2022  018B  0CA0               	rrf	??_set_num,f
  2023  018C  0BA2               	decfsz	??_set_num+2,f
  2024  018D  2989               	goto	u795
  2025  018E  3001               	movlw	1
  2026  018F  0520               	andwf	??_set_num,w
  2027  0190  00F4               	movwf	set_e@on_off
  2028  0191  3000               	movlw	0
  2029  0192  0521               	andwf	??_set_num+1,w
  2030  0193  00F5               	movwf	set_e@on_off+1
  2031  0194  3183  23B4  3181   	fcall	_set_e
  2032                           
  2033                           ;display.c: 74: set_f((num & 0b00100000) >> 5);
  2034  0197  0877               	movf	set_num@num+1,w
  2035  0198  0020               	movlb	0	; select bank0
  2036  0199  00A1               	movwf	??_set_num+1
  2037  019A  0876               	movf	set_num@num,w
  2038  019B  00A0               	movwf	??_set_num
  2039  019C  3005               	movlw	5
  2040  019D  00A2               	movwf	??_set_num+2
  2041  019E                     u805:	
  2042  019E  0D21               	rlf	??_set_num+1,w
  2043  019F  0CA1               	rrf	??_set_num+1,f
  2044  01A0  0CA0               	rrf	??_set_num,f
  2045  01A1  0BA2               	decfsz	??_set_num+2,f
  2046  01A2  299E               	goto	u805
  2047  01A3  3001               	movlw	1
  2048  01A4  0520               	andwf	??_set_num,w
  2049  01A5  00F4               	movwf	set_f@on_off
  2050  01A6  3000               	movlw	0
  2051  01A7  0521               	andwf	??_set_num+1,w
  2052  01A8  00F5               	movwf	set_f@on_off+1
  2053  01A9  3183  23AC  3181   	fcall	_set_f
  2054                           
  2055                           ;display.c: 75: set_g((num & 0b01000000) >> 6);
  2056  01AC  0877               	movf	set_num@num+1,w
  2057  01AD  0020               	movlb	0	; select bank0
  2058  01AE  00A1               	movwf	??_set_num+1
  2059  01AF  0876               	movf	set_num@num,w
  2060  01B0  00A0               	movwf	??_set_num
  2061  01B1  3006               	movlw	6
  2062  01B2  00A2               	movwf	??_set_num+2
  2063  01B3                     u815:	
  2064  01B3  0D21               	rlf	??_set_num+1,w
  2065  01B4  0CA1               	rrf	??_set_num+1,f
  2066  01B5  0CA0               	rrf	??_set_num,f
  2067  01B6  0BA2               	decfsz	??_set_num+2,f
  2068  01B7  29B3               	goto	u815
  2069  01B8  3001               	movlw	1
  2070  01B9  0520               	andwf	??_set_num,w
  2071  01BA  00F4               	movwf	set_g@on_off
  2072  01BB  3000               	movlw	0
  2073  01BC  0521               	andwf	??_set_num+1,w
  2074  01BD  00F5               	movwf	set_g@on_off+1
  2075  01BE  3183  23A4  3181   	fcall	_set_g
  2076                           
  2077                           ;display.c: 76: set_p((num & 0b10000000) >> 7);
  2078  01C1  0877               	movf	set_num@num+1,w
  2079  01C2  0020               	movlb	0	; select bank0
  2080  01C3  00A1               	movwf	??_set_num+1
  2081  01C4  0876               	movf	set_num@num,w
  2082  01C5  00A0               	movwf	??_set_num
  2083  01C6  3007               	movlw	7
  2084  01C7  00A2               	movwf	??_set_num+2
  2085  01C8                     u825:	
  2086  01C8  0D21               	rlf	??_set_num+1,w
  2087  01C9  0CA1               	rrf	??_set_num+1,f
  2088  01CA  0CA0               	rrf	??_set_num,f
  2089  01CB  0BA2               	decfsz	??_set_num+2,f
  2090  01CC  29C8               	goto	u825
  2091  01CD  3001               	movlw	1
  2092  01CE  0520               	andwf	??_set_num,w
  2093  01CF  00F4               	movwf	set_p@on_off
  2094  01D0  3000               	movlw	0
  2095  01D1  0521               	andwf	??_set_num+1,w
  2096  01D2  00F5               	movwf	set_p@on_off+1
  2097  01D3  3183  239C         	fcall	_set_p
  2098  01D5  0008               	return
  2099  01D6                     __end_of_set_num:	
  2100                           
  2101                           	psect	text10
  2102  039C                     __ptext10:	
  2103 ;; *************** function _set_p *****************
  2104 ;; Defined at:
  2105 ;;		line 90 in file "display.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;  on_off          2    4[COMMON] int 
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;		None
  2110 ;; Return value:  Size  Location     Type
  2111 ;;		None               void
  2112 ;; Registers used:
  2113 ;;		None
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2119 ;;      Params:         2       0       0       0       0       0
  2120 ;;      Locals:         0       0       0       0       0       0
  2121 ;;      Temps:          0       0       0       0       0       0
  2122 ;;      Totals:         2       0       0       0       0       0
  2123 ;;Total ram usage:        2 bytes
  2124 ;; Hardware stack levels used:    1
  2125 ;; Hardware stack levels required when called:    2
  2126 ;; This function calls:
  2127 ;;		Nothing
  2128 ;; This function is called by:
  2129 ;;		_set_num
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           
  2134                           ;psect for function _set_p
  2135  039C                     _set_p:	
  2136                           
  2137                           ;incstack = 0
  2138                           ; Regs used in _set_p: []
  2139  039C  1C74               	btfss	set_p@on_off,0
  2140  039D  2BA1               	goto	u770
  2141  039E  0020               	movlb	0	; select bank0
  2142  039F  148C               	bsf	12,1	;volatile
  2143  03A0  0008               	return
  2144  03A1                     u770:	
  2145  03A1  0020               	movlb	0	; select bank0
  2146  03A2  108C               	bcf	12,1	;volatile
  2147  03A3  0008               	return
  2148  03A4                     __end_of_set_p:	
  2149                           
  2150                           	psect	text11
  2151  03A4                     __ptext11:	
  2152 ;; *************** function _set_g *****************
  2153 ;; Defined at:
  2154 ;;		line 89 in file "display.c"
  2155 ;; Parameters:    Size  Location     Type
  2156 ;;  on_off          2    4[COMMON] int 
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;		None
  2159 ;; Return value:  Size  Location     Type
  2160 ;;		None               void
  2161 ;; Registers used:
  2162 ;;		None
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2168 ;;      Params:         2       0       0       0       0       0
  2169 ;;      Locals:         0       0       0       0       0       0
  2170 ;;      Temps:          0       0       0       0       0       0
  2171 ;;      Totals:         2       0       0       0       0       0
  2172 ;;Total ram usage:        2 bytes
  2173 ;; Hardware stack levels used:    1
  2174 ;; Hardware stack levels required when called:    2
  2175 ;; This function calls:
  2176 ;;		Nothing
  2177 ;; This function is called by:
  2178 ;;		_set_num
  2179 ;; This function uses a non-reentrant model
  2180 ;;
  2181                           
  2182                           
  2183                           ;psect for function _set_g
  2184  03A4                     _set_g:	
  2185                           
  2186                           ;incstack = 0
  2187                           ; Regs used in _set_g: []
  2188  03A4  1C74               	btfss	set_g@on_off,0
  2189  03A5  2BA9               	goto	u750
  2190  03A6  0020               	movlb	0	; select bank0
  2191  03A7  140C               	bsf	12,0	;volatile
  2192  03A8  0008               	return
  2193  03A9                     u750:	
  2194  03A9  0020               	movlb	0	; select bank0
  2195  03AA  100C               	bcf	12,0	;volatile
  2196  03AB  0008               	return
  2197  03AC                     __end_of_set_g:	
  2198                           
  2199                           	psect	text12
  2200  03AC                     __ptext12:	
  2201 ;; *************** function _set_f *****************
  2202 ;; Defined at:
  2203 ;;		line 88 in file "display.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;  on_off          2    4[COMMON] int 
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;		None
  2208 ;; Return value:  Size  Location     Type
  2209 ;;		None               void
  2210 ;; Registers used:
  2211 ;;		None
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2217 ;;      Params:         2       0       0       0       0       0
  2218 ;;      Locals:         0       0       0       0       0       0
  2219 ;;      Temps:          0       0       0       0       0       0
  2220 ;;      Totals:         2       0       0       0       0       0
  2221 ;;Total ram usage:        2 bytes
  2222 ;; Hardware stack levels used:    1
  2223 ;; Hardware stack levels required when called:    2
  2224 ;; This function calls:
  2225 ;;		Nothing
  2226 ;; This function is called by:
  2227 ;;		_set_num
  2228 ;; This function uses a non-reentrant model
  2229 ;;
  2230                           
  2231                           
  2232                           ;psect for function _set_f
  2233  03AC                     _set_f:	
  2234                           
  2235                           ;incstack = 0
  2236                           ; Regs used in _set_f: []
  2237  03AC  1C74               	btfss	set_f@on_off,0
  2238  03AD  2BB1               	goto	u730
  2239  03AE  0020               	movlb	0	; select bank0
  2240  03AF  178C               	bsf	12,7	;volatile
  2241  03B0  0008               	return
  2242  03B1                     u730:	
  2243  03B1  0020               	movlb	0	; select bank0
  2244  03B2  138C               	bcf	12,7	;volatile
  2245  03B3  0008               	return
  2246  03B4                     __end_of_set_f:	
  2247                           
  2248                           	psect	text13
  2249  03B4                     __ptext13:	
  2250 ;; *************** function _set_e *****************
  2251 ;; Defined at:
  2252 ;;		line 87 in file "display.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;  on_off          2    4[COMMON] int 
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;		None
  2257 ;; Return value:  Size  Location     Type
  2258 ;;		None               void
  2259 ;; Registers used:
  2260 ;;		None
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2266 ;;      Params:         2       0       0       0       0       0
  2267 ;;      Locals:         0       0       0       0       0       0
  2268 ;;      Temps:          0       0       0       0       0       0
  2269 ;;      Totals:         2       0       0       0       0       0
  2270 ;;Total ram usage:        2 bytes
  2271 ;; Hardware stack levels used:    1
  2272 ;; Hardware stack levels required when called:    2
  2273 ;; This function calls:
  2274 ;;		Nothing
  2275 ;; This function is called by:
  2276 ;;		_set_num
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           
  2281                           ;psect for function _set_e
  2282  03B4                     _set_e:	
  2283                           
  2284                           ;incstack = 0
  2285                           ; Regs used in _set_e: []
  2286  03B4  1C74               	btfss	set_e@on_off,0
  2287  03B5  2BB9               	goto	u710
  2288  03B6  0020               	movlb	0	; select bank0
  2289  03B7  170C               	bsf	12,6	;volatile
  2290  03B8  0008               	return
  2291  03B9                     u710:	
  2292  03B9  0020               	movlb	0	; select bank0
  2293  03BA  130C               	bcf	12,6	;volatile
  2294  03BB  0008               	return
  2295  03BC                     __end_of_set_e:	
  2296                           
  2297                           	psect	text14
  2298  03BC                     __ptext14:	
  2299 ;; *************** function _set_d *****************
  2300 ;; Defined at:
  2301 ;;		line 86 in file "display.c"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;  on_off          2    4[COMMON] int 
  2304 ;; Auto vars:     Size  Location     Type
  2305 ;;		None
  2306 ;; Return value:  Size  Location     Type
  2307 ;;		None               void
  2308 ;; Registers used:
  2309 ;;		None
  2310 ;; Tracked objects:
  2311 ;;		On entry : 0/0
  2312 ;;		On exit  : 0/0
  2313 ;;		Unchanged: 0/0
  2314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2315 ;;      Params:         2       0       0       0       0       0
  2316 ;;      Locals:         0       0       0       0       0       0
  2317 ;;      Temps:          0       0       0       0       0       0
  2318 ;;      Totals:         2       0       0       0       0       0
  2319 ;;Total ram usage:        2 bytes
  2320 ;; Hardware stack levels used:    1
  2321 ;; Hardware stack levels required when called:    2
  2322 ;; This function calls:
  2323 ;;		Nothing
  2324 ;; This function is called by:
  2325 ;;		_set_num
  2326 ;; This function uses a non-reentrant model
  2327 ;;
  2328                           
  2329                           
  2330                           ;psect for function _set_d
  2331  03BC                     _set_d:	
  2332                           
  2333                           ;incstack = 0
  2334                           ; Regs used in _set_d: []
  2335  03BC  1C74               	btfss	set_d@on_off,0
  2336  03BD  2BC1               	goto	u690
  2337  03BE  0020               	movlb	0	; select bank0
  2338  03BF  178D               	bsf	13,7	;volatile
  2339  03C0  0008               	return
  2340  03C1                     u690:	
  2341  03C1  0020               	movlb	0	; select bank0
  2342  03C2  138D               	bcf	13,7	;volatile
  2343  03C3  0008               	return
  2344  03C4                     __end_of_set_d:	
  2345                           
  2346                           	psect	text15
  2347  03C4                     __ptext15:	
  2348 ;; *************** function _set_c *****************
  2349 ;; Defined at:
  2350 ;;		line 85 in file "display.c"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;  on_off          2    4[COMMON] int 
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;		None
  2355 ;; Return value:  Size  Location     Type
  2356 ;;		None               void
  2357 ;; Registers used:
  2358 ;;		None
  2359 ;; Tracked objects:
  2360 ;;		On entry : 0/0
  2361 ;;		On exit  : 0/0
  2362 ;;		Unchanged: 0/0
  2363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2364 ;;      Params:         2       0       0       0       0       0
  2365 ;;      Locals:         0       0       0       0       0       0
  2366 ;;      Temps:          0       0       0       0       0       0
  2367 ;;      Totals:         2       0       0       0       0       0
  2368 ;;Total ram usage:        2 bytes
  2369 ;; Hardware stack levels used:    1
  2370 ;; Hardware stack levels required when called:    2
  2371 ;; This function calls:
  2372 ;;		Nothing
  2373 ;; This function is called by:
  2374 ;;		_set_num
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378                           
  2379                           ;psect for function _set_c
  2380  03C4                     _set_c:	
  2381                           
  2382                           ;incstack = 0
  2383                           ; Regs used in _set_c: []
  2384  03C4  1C74               	btfss	set_c@on_off,0
  2385  03C5  2BC9               	goto	u670
  2386  03C6  0020               	movlb	0	; select bank0
  2387  03C7  170D               	bsf	13,6	;volatile
  2388  03C8  0008               	return
  2389  03C9                     u670:	
  2390  03C9  0020               	movlb	0	; select bank0
  2391  03CA  130D               	bcf	13,6	;volatile
  2392  03CB  0008               	return
  2393  03CC                     __end_of_set_c:	
  2394                           
  2395                           	psect	text16
  2396  03CC                     __ptext16:	
  2397 ;; *************** function _set_b *****************
  2398 ;; Defined at:
  2399 ;;		line 84 in file "display.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;  on_off          2    4[COMMON] int 
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;		None
  2404 ;; Return value:  Size  Location     Type
  2405 ;;		None               void
  2406 ;; Registers used:
  2407 ;;		None
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2413 ;;      Params:         2       0       0       0       0       0
  2414 ;;      Locals:         0       0       0       0       0       0
  2415 ;;      Temps:          0       0       0       0       0       0
  2416 ;;      Totals:         2       0       0       0       0       0
  2417 ;;Total ram usage:        2 bytes
  2418 ;; Hardware stack levels used:    1
  2419 ;; Hardware stack levels required when called:    2
  2420 ;; This function calls:
  2421 ;;		Nothing
  2422 ;; This function is called by:
  2423 ;;		_set_num
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           
  2428                           ;psect for function _set_b
  2429  03CC                     _set_b:	
  2430                           
  2431                           ;incstack = 0
  2432                           ; Regs used in _set_b: []
  2433  03CC  1C74               	btfss	set_b@on_off,0
  2434  03CD  2BD1               	goto	u650
  2435  03CE  0020               	movlb	0	; select bank0
  2436  03CF  168D               	bsf	13,5	;volatile
  2437  03D0  0008               	return
  2438  03D1                     u650:	
  2439  03D1  0020               	movlb	0	; select bank0
  2440  03D2  128D               	bcf	13,5	;volatile
  2441  03D3  0008               	return
  2442  03D4                     __end_of_set_b:	
  2443                           
  2444                           	psect	text17
  2445  03D4                     __ptext17:	
  2446 ;; *************** function _set_a *****************
  2447 ;; Defined at:
  2448 ;;		line 83 in file "display.c"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;  on_off          2    4[COMMON] int 
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;		None
  2453 ;; Return value:  Size  Location     Type
  2454 ;;		None               void
  2455 ;; Registers used:
  2456 ;;		None
  2457 ;; Tracked objects:
  2458 ;;		On entry : 0/0
  2459 ;;		On exit  : 0/0
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2462 ;;      Params:         2       0       0       0       0       0
  2463 ;;      Locals:         0       0       0       0       0       0
  2464 ;;      Temps:          0       0       0       0       0       0
  2465 ;;      Totals:         2       0       0       0       0       0
  2466 ;;Total ram usage:        2 bytes
  2467 ;; Hardware stack levels used:    1
  2468 ;; Hardware stack levels required when called:    2
  2469 ;; This function calls:
  2470 ;;		Nothing
  2471 ;; This function is called by:
  2472 ;;		_set_num
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476                           
  2477                           ;psect for function _set_a
  2478  03D4                     _set_a:	
  2479                           
  2480                           ;incstack = 0
  2481                           ; Regs used in _set_a: []
  2482  03D4  1C74               	btfss	set_a@on_off,0
  2483  03D5  2BD9               	goto	u630
  2484  03D6  0020               	movlb	0	; select bank0
  2485  03D7  150D               	bsf	13,2	;volatile
  2486  03D8  0008               	return
  2487  03D9                     u630:	
  2488  03D9  0020               	movlb	0	; select bank0
  2489  03DA  110D               	bcf	13,2	;volatile
  2490  03DB  0008               	return
  2491  03DC                     __end_of_set_a:	
  2492                           
  2493                           	psect	text18
  2494  0358                     __ptext18:	
  2495 ;; *************** function _open2 *****************
  2496 ;; Defined at:
  2497 ;;		line 96 in file "display.c"
  2498 ;; Parameters:    Size  Location     Type
  2499 ;;  digit_select    2    4[COMMON] int 
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;		None
  2502 ;; Return value:  Size  Location     Type
  2503 ;;		None               void
  2504 ;; Registers used:
  2505 ;;		wreg, status,2, status,0, pclath, cstack
  2506 ;; Tracked objects:
  2507 ;;		On entry : 0/0
  2508 ;;		On exit  : 0/0
  2509 ;;		Unchanged: 0/0
  2510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2511 ;;      Params:         2       0       0       0       0       0
  2512 ;;      Locals:         0       0       0       0       0       0
  2513 ;;      Temps:          0       0       0       0       0       0
  2514 ;;      Totals:         2       0       0       0       0       0
  2515 ;;Total ram usage:        2 bytes
  2516 ;; Hardware stack levels used:    1
  2517 ;; Hardware stack levels required when called:    3
  2518 ;; This function calls:
  2519 ;;		_close2
  2520 ;; This function is called by:
  2521 ;;		_light2
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           
  2525                           
  2526                           ;psect for function _open2
  2527  0358                     _open2:	
  2528                           
  2529                           ;display.c: 97: close2();
  2530                           
  2531                           ;incstack = 0
  2532                           ; Regs used in _open2: [wreg+status,2+status,0+pclath+cstack]
  2533  0358  3183  23E9  3183   	fcall	_close2
  2534                           
  2535                           ;display.c: 98: if (digit_select == 0) { RA3 = 1; }
  2536  035B  0875               	movf	open2@digit_select+1,w
  2537  035C  0474               	iorwf	open2@digit_select,w
  2538  035D  1D03               	skipz
  2539  035E  2B61               	goto	l979
  2540  035F  0020               	movlb	0	; select bank0
  2541  0360  158C               	bsf	12,3	;volatile
  2542  0361                     l979:	
  2543                           
  2544                           ;display.c: 99: if (digit_select == 1) { RA2 = 1; }
  2545  0361  3001               	movlw	1
  2546  0362  0674               	xorwf	open2@digit_select,w
  2547  0363  0475               	iorwf	open2@digit_select+1,w
  2548  0364  1D03               	skipz
  2549  0365  0008               	return
  2550  0366  0020               	movlb	0	; select bank0
  2551  0367  150C               	bsf	12,2	;volatile
  2552  0368  0008               	return
  2553  0369                     __end_of_open2:	
  2554                           
  2555                           	psect	text19
  2556  03E9                     __ptext19:	
  2557 ;; *************** function _close2 *****************
  2558 ;; Defined at:
  2559 ;;		line 105 in file "display.c"
  2560 ;; Parameters:    Size  Location     Type
  2561 ;;		None
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;		None
  2564 ;; Return value:  Size  Location     Type
  2565 ;;		None               void
  2566 ;; Registers used:
  2567 ;;		None
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2573 ;;      Params:         0       0       0       0       0       0
  2574 ;;      Locals:         0       0       0       0       0       0
  2575 ;;      Temps:          0       0       0       0       0       0
  2576 ;;      Totals:         0       0       0       0       0       0
  2577 ;;Total ram usage:        0 bytes
  2578 ;; Hardware stack levels used:    1
  2579 ;; Hardware stack levels required when called:    2
  2580 ;; This function calls:
  2581 ;;		Nothing
  2582 ;; This function is called by:
  2583 ;;		_light2
  2584 ;;		_open2
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           
  2588                           
  2589                           ;psect for function _close2
  2590  03E9                     _close2:	
  2591                           
  2592                           ;display.c: 106: RA3 = 0;
  2593                           
  2594                           ;incstack = 0
  2595                           ; Regs used in _close2: []
  2596  03E9  0020               	movlb	0	; select bank0
  2597  03EA  118C               	bcf	12,3	;volatile
  2598                           
  2599                           ;display.c: 107: RA2 = 0;
  2600  03EB  110C               	bcf	12,2	;volatile
  2601  03EC  0008               	return
  2602  03ED                     __end_of_close2:	
  2603                           
  2604                           	psect	text20
  2605  0342                     __ptext20:	
  2606 ;; *************** function _init *****************
  2607 ;; Defined at:
  2608 ;;		line 68 in file "main.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;		None
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;		None
  2613 ;; Return value:  Size  Location     Type
  2614 ;;		None               void
  2615 ;; Registers used:
  2616 ;;		wreg, status,2, status,0, pclath, cstack
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2622 ;;      Params:         0       0       0       0       0       0
  2623 ;;      Locals:         0       0       0       0       0       0
  2624 ;;      Temps:          0       0       0       0       0       0
  2625 ;;      Totals:         0       0       0       0       0       0
  2626 ;;Total ram usage:        0 bytes
  2627 ;; Hardware stack levels used:    1
  2628 ;; Hardware stack levels required when called:    3
  2629 ;; This function calls:
  2630 ;;		_init_I2C_slave
  2631 ;;		_init_Timer4
  2632 ;; This function is called by:
  2633 ;;		_main
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           
  2637                           
  2638                           ;psect for function _init
  2639  0342                     _init:	
  2640                           
  2641                           ;main.c: 69: OSCCON = 0b01111010;
  2642                           
  2643                           ;incstack = 0
  2644                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  2645  0342  307A               	movlw	122
  2646  0343  0021               	movlb	1	; select bank1
  2647  0344  0099               	movwf	25	;volatile
  2648                           
  2649                           ;main.c: 70: ANSELA = 0x00;
  2650  0345  0023               	movlb	3	; select bank3
  2651  0346  018C               	clrf	12	;volatile
  2652                           
  2653                           ;main.c: 71: ANSELB = 0x00;
  2654  0347  018D               	clrf	13	;volatile
  2655                           
  2656                           ;main.c: 72: TRISA = 0x00;
  2657  0348  0021               	movlb	1	; select bank1
  2658  0349  018C               	clrf	12	;volatile
  2659                           
  2660                           ;main.c: 73: TRISB = 0b00010010;
  2661  034A  3012               	movlw	18
  2662  034B  008D               	movwf	13	;volatile
  2663                           
  2664                           ;main.c: 74: PORTA = 0x00;
  2665  034C  0020               	movlb	0	; select bank0
  2666  034D  018C               	clrf	12	;volatile
  2667                           
  2668                           ;main.c: 75: PORTB = 0x00;
  2669  034E  018D               	clrf	13	;volatile
  2670                           
  2671                           ;main.c: 76: GIE = 1;
  2672  034F  178B               	bsf	11,7	;volatile
  2673                           
  2674                           ;main.c: 77: PEIE = 1;
  2675  0350  170B               	bsf	11,6	;volatile
  2676                           
  2677                           ;main.c: 78: init_Timer4();
  2678  0351  3183  2389  3183   	fcall	_init_Timer4
  2679                           
  2680                           ;main.c: 79: init_I2C_slave(0x02);
  2681  0354  3002               	movlw	2
  2682  0355  3183  2369         	fcall	_init_I2C_slave
  2683  0357  0008               	return
  2684  0358                     __end_of_init:	
  2685                           
  2686                           	psect	text21
  2687  0389                     __ptext21:	
  2688 ;; *************** function _init_Timer4 *****************
  2689 ;; Defined at:
  2690 ;;		line 82 in file "main.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;		None
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;		None
  2695 ;; Return value:  Size  Location     Type
  2696 ;;		None               void
  2697 ;; Registers used:
  2698 ;;		wreg, status,2
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2704 ;;      Params:         0       0       0       0       0       0
  2705 ;;      Locals:         0       0       0       0       0       0
  2706 ;;      Temps:          0       0       0       0       0       0
  2707 ;;      Totals:         0       0       0       0       0       0
  2708 ;;Total ram usage:        0 bytes
  2709 ;; Hardware stack levels used:    1
  2710 ;; Hardware stack levels required when called:    2
  2711 ;; This function calls:
  2712 ;;		Nothing
  2713 ;; This function is called by:
  2714 ;;		_init
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718                           
  2719                           ;psect for function _init_Timer4
  2720  0389                     _init_Timer4:	
  2721                           
  2722                           ;main.c: 83: T4CON = 0b01111011;
  2723                           
  2724                           ;incstack = 0
  2725                           ; Regs used in _init_Timer4: [wreg+status,2]
  2726  0389  307B               	movlw	123
  2727  038A  0028               	movlb	8	; select bank8
  2728  038B  0097               	movwf	23	;volatile
  2729                           
  2730                           ;main.c: 84: PR4 = 243;
  2731  038C  30F3               	movlw	243
  2732  038D  0096               	movwf	22	;volatile
  2733                           
  2734                           ;main.c: 85: TMR4IE = 1;
  2735  038E  0021               	movlb	1	; select bank1
  2736  038F  1493               	bsf	19,1	;volatile
  2737                           
  2738                           ;main.c: 86: TMR4 = 0;
  2739  0390  0028               	movlb	8	; select bank8
  2740  0391  0195               	clrf	21	;volatile
  2741                           
  2742                           ;main.c: 87: TMR4ON = 1;
  2743  0392  1517               	bsf	23,2	;volatile
  2744  0393  0008               	return
  2745  0394                     __end_of_init_Timer4:	
  2746                           
  2747                           	psect	text22
  2748  0369                     __ptext22:	
  2749 ;; *************** function _init_I2C_slave *****************
  2750 ;; Defined at:
  2751 ;;		line 90 in file "main.c"
  2752 ;; Parameters:    Size  Location     Type
  2753 ;;  addr            1    wreg     unsigned char 
  2754 ;; Auto vars:     Size  Location     Type
  2755 ;;  addr            1    4[COMMON] unsigned char 
  2756 ;; Return value:  Size  Location     Type
  2757 ;;		None               void
  2758 ;; Registers used:
  2759 ;;		wreg, status,2, status,0
  2760 ;; Tracked objects:
  2761 ;;		On entry : 0/0
  2762 ;;		On exit  : 0/0
  2763 ;;		Unchanged: 0/0
  2764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2765 ;;      Params:         0       0       0       0       0       0
  2766 ;;      Locals:         1       0       0       0       0       0
  2767 ;;      Temps:          0       0       0       0       0       0
  2768 ;;      Totals:         1       0       0       0       0       0
  2769 ;;Total ram usage:        1 bytes
  2770 ;; Hardware stack levels used:    1
  2771 ;; Hardware stack levels required when called:    2
  2772 ;; This function calls:
  2773 ;;		Nothing
  2774 ;; This function is called by:
  2775 ;;		_init
  2776 ;; This function uses a non-reentrant model
  2777 ;;
  2778                           
  2779                           
  2780                           ;psect for function _init_I2C_slave
  2781  0369                     _init_I2C_slave:	
  2782                           
  2783                           ;incstack = 0
  2784                           ; Regs used in _init_I2C_slave: [wreg+status,2+status,0]
  2785                           ;init_I2C_slave@addr stored from wreg
  2786  0369  00F4               	movwf	init_I2C_slave@addr
  2787                           
  2788                           ;main.c: 91: SSP1STAT = 0b10000000;
  2789  036A  3080               	movlw	128
  2790  036B  0024               	movlb	4	; select bank4
  2791  036C  0094               	movwf	20	;volatile
  2792                           
  2793                           ;main.c: 92: SSP1CON1 = 0b00100110;
  2794  036D  3026               	movlw	38
  2795  036E  0095               	movwf	21	;volatile
  2796                           
  2797                           ;main.c: 93: SSP1CON2bits.SEN = 1;
  2798  036F  1416               	bsf	22,0	;volatile
  2799                           
  2800                           ;main.c: 94: SSP1ADD = addr << 1;
  2801  0370  3574               	lslf	init_I2C_slave@addr,w
  2802  0371  0092               	movwf	18	;volatile
  2803                           
  2804                           ;main.c: 95: SSP1IE = 1;
  2805  0372  0021               	movlb	1	; select bank1
  2806  0373  1591               	bsf	17,3	;volatile
  2807                           
  2808                           ;main.c: 96: BCL1IE = 1;
  2809  0374  1592               	bsf	18,3	;volatile
  2810                           
  2811                           ;main.c: 97: SSP1IF = 0;
  2812  0375  0020               	movlb	0	; select bank0
  2813  0376  1191               	bcf	17,3	;volatile
  2814                           
  2815                           ;main.c: 98: BCL1IF = 0;
  2816  0377  1192               	bcf	18,3	;volatile
  2817  0378  0008               	return
  2818  0379                     __end_of_init_I2C_slave:	
  2819                           
  2820                           	psect	intentry
  2821  0004                     __pintentry:	
  2822 ;; *************** function _interruption *****************
  2823 ;; Defined at:
  2824 ;;		line 44 in file "main.c"
  2825 ;; Parameters:    Size  Location     Type
  2826 ;;		None
  2827 ;; Auto vars:     Size  Location     Type
  2828 ;;		None
  2829 ;; Return value:  Size  Location     Type
  2830 ;;		None               void
  2831 ;; Registers used:
  2832 ;;		wreg, status,2, status,0, pclath, cstack
  2833 ;; Tracked objects:
  2834 ;;		On entry : 0/0
  2835 ;;		On exit  : 0/0
  2836 ;;		Unchanged: 0/0
  2837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2838 ;;      Params:         0       0       0       0       0       0
  2839 ;;      Locals:         0       0       0       0       0       0
  2840 ;;      Temps:          2       0       0       0       0       0
  2841 ;;      Totals:         2       0       0       0       0       0
  2842 ;;Total ram usage:        2 bytes
  2843 ;; Hardware stack levels used:    1
  2844 ;; Hardware stack levels required when called:    1
  2845 ;; This function calls:
  2846 ;;		_interrupt_I2C
  2847 ;; This function is called by:
  2848 ;;		Interrupt level 1
  2849 ;; This function uses a non-reentrant model
  2850 ;;
  2851                           
  2852  0004                     _interruption:	
  2853                           
  2854                           ;incstack = 0
  2855                           ; Regs used in _interruption: [wreg+status,2+status,0+pclath+cstack]
  2856  0004  147E               	bsf	126,0	;set compiler interrupt flag
  2857  0005  3180               	pagesel	$
  2858  0006  0020               	movlb	0	; select bank0
  2859  0007  087F               	movf	127,w
  2860  0008  00F3               	movwf	??_interruption+1
  2861                           
  2862                           ;main.c: 45: if(SSP1IF == 1) {
  2863  0009  1D91               	btfss	17,3	;volatile
  2864  000A  2816               	goto	i1l79
  2865                           
  2866                           ;main.c: 47: interrupt_I2C();
  2867  000B  3183  2379  3180   	fcall	_interrupt_I2C
  2868                           
  2869                           ;main.c: 48: SSP1IF = 0;
  2870  000E  0020               	movlb	0	; select bank0
  2871  000F  1191               	bcf	17,3	;volatile
  2872                           
  2873                           ;main.c: 49: SSP1CON1bits.CKP = 1;
  2874  0010  0024               	movlb	4	; select bank4
  2875  0011  1615               	bsf	21,4	;volatile
  2876                           
  2877                           ;main.c: 50: counter = 0;
  2878  0012  01F9               	clrf	_counter
  2879                           
  2880                           ;main.c: 51: TMR4 = 0;
  2881  0013  0028               	movlb	8	; select bank8
  2882  0014  0195               	clrf	21	;volatile
  2883                           
  2884                           ;main.c: 52: } else if (TMR4IF == 1) {
  2885  0015  2821               	goto	i1l83
  2886  0016                     i1l79:	
  2887  0016  1C93               	btfss	19,1	;volatile
  2888  0017  2821               	goto	i1l83
  2889                           
  2890                           ;main.c: 54: if (counter < 16) counter++;
  2891  0018  3010               	movlw	16
  2892  0019  0279               	subwf	_counter,w
  2893  001A  1803               	skipnc
  2894  001B  2820               	goto	i1l1171
  2895  001C  3001               	movlw	1
  2896  001D  00F2               	movwf	??_interruption
  2897  001E  0872               	movf	??_interruption,w
  2898  001F  07F9               	addwf	_counter,f
  2899  0020                     i1l1171:	
  2900                           
  2901                           ;main.c: 55: TMR4IF = 0;
  2902  0020  1093               	bcf	19,1	;volatile
  2903  0021                     i1l83:	
  2904  0021  0873               	movf	??_interruption+1,w
  2905  0022  0020               	movlb	0	; select bank0
  2906  0023  00FF               	movwf	127
  2907  0024  107E               	bcf	126,0	;clear compiler interrupt flag
  2908  0025  0009               	retfie
  2909  0026                     __end_of_interruption:	
  2910                           
  2911                           	psect	text24
  2912  0379                     __ptext24:	
  2913 ;; *************** function _interrupt_I2C *****************
  2914 ;; Defined at:
  2915 ;;		line 30 in file "main.c"
  2916 ;; Parameters:    Size  Location     Type
  2917 ;;		None
  2918 ;; Auto vars:     Size  Location     Type
  2919 ;;  x               1    1[COMMON] unsigned char 
  2920 ;; Return value:  Size  Location     Type
  2921 ;;		None               void
  2922 ;; Registers used:
  2923 ;;		wreg
  2924 ;; Tracked objects:
  2925 ;;		On entry : 0/0
  2926 ;;		On exit  : 0/0
  2927 ;;		Unchanged: 0/0
  2928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2929 ;;      Params:         0       0       0       0       0       0
  2930 ;;      Locals:         1       0       0       0       0       0
  2931 ;;      Temps:          1       0       0       0       0       0
  2932 ;;      Totals:         2       0       0       0       0       0
  2933 ;;Total ram usage:        2 bytes
  2934 ;; Hardware stack levels used:    1
  2935 ;; This function calls:
  2936 ;;		Nothing
  2937 ;; This function is called by:
  2938 ;;		_interruption
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942                           
  2943                           ;psect for function _interrupt_I2C
  2944  0379                     _interrupt_I2C:	
  2945                           
  2946                           ;main.c: 31: char x;
  2947                           ;main.c: 32: if(SSP1STATbits.R_nW == 0) {
  2948                           
  2949                           ;incstack = 0
  2950                           ; Regs used in _interrupt_I2C: [wreg]
  2951  0379  0024               	movlb	4	; select bank4
  2952  037A  1914               	btfsc	20,2	;volatile
  2953  037B  0008               	return
  2954                           
  2955                           ;main.c: 34: if(SSP1STATbits.D_nA == 0) {
  2956  037C  1A94               	btfsc	20,5	;volatile
  2957  037D  2B83               	goto	i1l1147
  2958                           
  2959                           ;main.c: 36: x = SSP1BUF;
  2960  037E  0811               	movf	17,w	;volatile
  2961  037F  00F0               	movwf	??_interrupt_I2C
  2962  0380  0870               	movf	??_interrupt_I2C,w
  2963  0381  00F1               	movwf	interrupt_I2C@x
  2964                           
  2965                           ;main.c: 37: } else {
  2966  0382  0008               	return
  2967  0383                     i1l1147:	
  2968                           
  2969                           ;main.c: 39: received_data = SSP1BUF;
  2970  0383  0811               	movf	17,w	;volatile
  2971  0384  00F0               	movwf	??_interrupt_I2C
  2972  0385  0870               	movf	??_interrupt_I2C,w
  2973  0386  0020               	movlb	0	; select bank0
  2974  0387  00C8               	movwf	_received_data
  2975  0388  0008               	return
  2976  0389                     __end_of_interrupt_I2C:	
  2977  007E                     btemp	set	126	;btemp
  2978  007E                     pic14e$flags	set	126
  2979  007E                     wtemp	set	126
  2980  007E                     wtemp0	set	126
  2981  0080                     wtemp1	set	128
  2982  0082                     wtemp2	set	130
  2983  0084                     wtemp3	set	132
  2984  0086                     wtemp4	set	134
  2985  0088                     wtemp5	set	136
  2986  007F                     wtemp6	set	127
  2987  007E                     ttemp	set	126
  2988  007E                     ttemp0	set	126
  2989  0081                     ttemp1	set	129
  2990  0084                     ttemp2	set	132
  2991  0087                     ttemp3	set	135
  2992  007F                     ttemp4	set	127
  2993  007E                     ltemp	set	126
  2994  007E                     ltemp0	set	126
  2995  0082                     ltemp1	set	130
  2996  0086                     ltemp2	set	134
  2997  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      10
    BANK0            80     32      41
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    light2@dot	PTR int  size(1) Largest target is 4
		 -> error2@error_dot(BANK0[4]), loop@dot(BANK0[4]), 

    light2@digit	PTR int  size(1) Largest target is 4
		 -> error2@error_digit(BANK0[4]), loop@digit(BANK0[4]), 

    num_digits_conv@digit	PTR int  size(1) Largest target is 4
		 -> loop@digit(BANK0[4]), 

    num_digits_conv@dot	PTR int  size(1) Largest target is 4
		 -> loop@dot(BANK0[4]), 


Critical Paths under _main in COMMON

    _loop->_light2
    _num_digits_conv->___lwdiv
    ___lwmod->___lwdiv
    ___lwdiv->___wmul
    _error2->_light2
    _light2->_set_num
    _light2->_wait
    _set_num->_set_a
    _set_num->_set_b
    _set_num->_set_c
    _set_num->_set_d
    _set_num->_set_e
    _set_num->_set_f
    _set_num->_set_g
    _set_num->_set_p
    _init->_init_I2C_slave

Critical Paths under _interruption in COMMON

    _interruption->_interrupt_I2C

Critical Paths under _main in BANK0

    _main->_loop
    _loop->_num_digits_conv
    _num_digits_conv->___lwmod
    ___lwmod->___lwdiv
    ___lwdiv->___wmul
    _error2->_light2
    _light2->_set_num

Critical Paths under _interruption in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruption in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruption in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruption in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruption in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6526
                               _init
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                10    10      0    6511
                                             22 BANK0     10    10      0
                             _error2
                             _light2
                    _num_digits_conv
 ---------------------------------------------------------------------------------
 (2) _num_digits_conv                                      7     5      2    1745
                                             15 BANK0      7     5      2
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     266
                                              4 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     371
                                              9 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     631
                                              8 COMMON     1     1      0
                                              2 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _error2                                               9     9      0    2337
                                              9 BANK0      9     9      0
                             _light2
 ---------------------------------------------------------------------------------
 (2) _light2                                               7     6      1    2230
                                              8 COMMON     1     1      0
                                              3 BANK0      6     5      1
                             _close2
                              _open2
                            _set_num
                               _wait
 ---------------------------------------------------------------------------------
 (3) _wait                                                 6     4      2     133
                                              4 COMMON     4     2      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _set_num                                              5     3      2     829
                                              6 COMMON     2     0      2
                                              0 BANK0      3     3      0
                              _set_a
                              _set_b
                              _set_c
                              _set_d
                              _set_e
                              _set_f
                              _set_g
                              _set_p
 ---------------------------------------------------------------------------------
 (4) _set_p                                                2     0      2      75
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _set_g                                                2     0      2      75
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _set_f                                                2     0      2      75
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _set_e                                                2     0      2      75
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _set_d                                                2     0      2      75
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _set_c                                                2     0      2      75
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _set_b                                                2     0      2      75
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _set_a                                                2     0      2      75
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _open2                                                2     0      2      97
                                              4 COMMON     2     0      2
                             _close2
 ---------------------------------------------------------------------------------
 (4) _close2                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0      15
                     _init_I2C_slave
                        _init_Timer4
 ---------------------------------------------------------------------------------
 (2) _init_Timer4                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_I2C_slave                                       1     1      0      15
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _interruption                                         2     2      0       1
                                              2 COMMON     2     2      0
                      _interrupt_I2C
 ---------------------------------------------------------------------------------
 (7) _interrupt_I2C                                        2     2      0       1
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _init_I2C_slave
     _init_Timer4
   _loop
     _error2
       _light2
         _close2
         _open2
           _close2
         _set_num
           _set_a
           _set_b
           _set_c
           _set_d
           _set_e
           _set_f
           _set_g
           _set_p
         _wait
     _light2
       _close2
       _open2
         _close2
       _set_num
         _set_a
         _set_b
         _set_c
         _set_d
         _set_e
         _set_f
         _set_g
         _set_p
       _wait
     _num_digits_conv
       ___lwdiv
         ___wmul (ARG)
       ___lwmod
         ___lwdiv (ARG)
           ___wmul (ARG)
       ___wmul

 _interruption (ROOT)
   _interrupt_I2C

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      33       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     20      29       6       51.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      33      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Tue Apr 18 22:20:07 2017

   __end_of_interrupt_I2C 0389               __CFG_CP$OFF 0000       ___wmul@multiplicand 0076  
                     l316 02DC                       l229 0312                       l979 0361  
                     _GIE 005F                       _RA0 0060                       _RA1 0061  
                     _RA2 0062                       _RA3 0063                       _RB2 006A  
                     _RA6 0066                       _RB5 006D                       _RA7 0067  
                     _RB6 006E                       _RB7 006F                       _PR4 0416  
            __CFG_CPD$OFF 0000                       u630 03D9                       u710 03B9  
                     u650 03D1                       u730 03B1                       u805 019E  
                     u670 03C9                       u750 03A9                       u815 01B3  
                     u825 01C8                       u690 03C1                       u770 03A1  
                     u795 0189              __CFG_BORV$HI 0000                       wreg 0009  
            __CFG_LVP$OFF 0000                      l1111 02C2                      l1201 0077  
                    l1105 02AA                      l1107 02B6                      l1115 02CB  
                    l1221 00C7                      l1213 00A7                      l1205 0087  
                    l1301 0225                      l1233 00F8                      l1225 00D7  
                    l1217 00B7                      l1209 0097                      l1305 0233  
                    l1321 03DF                      l1243 011A                      l1229 00E7  
                    l1317 030C                      l1239 0108                      l1255 02D5  
                    l1193 0057                      l1283 0293                      l1275 0275  
                    l1197 0067                      l1277 0281                      l1287 029C  
                    u1135 02AD                      u1305 0083                      u1315 0093  
                    u1155 02BC                      u1325 00A3                      u1165 02C3  
                    u1255 0318                      u1335 00B3                      u1345 00C3  
                    u1265 0046                      u1505 0294                      u1425 02DD  
                    u1355 00D3                      u1435 02E2                      u1365 00E3  
                    u1285 0063                      u1375 00F3                      u1295 0073  
                    u1385 0104                      u1465 0278                      u1547 031E  
                    u1395 0114                      u1485 0282                      u1495 028C  
                    _PEIE 005E                      i1l83 0021                      i1l79 0016  
                    _TMR4 0415              __CFG_WRT$OFF 0000                      _main 03DC  
                    _init 0342                      _loop 02F2                      _wait 030F  
                    fsr0h 0005                      fsr1h 0007                      fsr0l 0004  
                    indf1 0001                      fsr1l 0006                      btemp 007E  
           __CFG_BOREN$ON 0000                      ltemp 007E                      start 0026  
                    ttemp 007E                      wtemp 007E             __CFG_IESO$OFF 0000  
            ?_init_Timer4 0070                     ?_main 0070                     ?_init 0070  
                   ?_loop 0070             __CFG_WDTE$OFF 0000                     ?_wait 0074  
                   _T4CON 0417           __end_of___lwdiv 02A3           __end_of___lwmod 02D2  
                   _PORTA 000C                     _PORTB 000D                     _TRISA 008C  
                   _TRISB 008D             __CFG_PWRTE$ON 0000            __CFG_FCMEN$OFF 0000  
                   _open2 0358                     _set_a 03D4                     _set_b 03CC  
                   _set_c 03C4                     _set_d 03BC                     _set_e 03B4  
                   _set_f 03AC                     _set_g 03A4                     _set_p 039C  
         __end_of_set_num 01D6                     ltemp0 007E                     ltemp1 0082  
                   ltemp2 0086                     ltemp3 0080                     wait@i 0020  
 __size_of_init_I2C_slave 0010                     ttemp0 007E                     ttemp1 0081  
                   ttemp2 0084                     ttemp3 0087                     ttemp4 007F  
                   status 0003                     wtemp0 007E                     wtemp1 0080  
                   wtemp2 0082                     wtemp3 0084                     wtemp4 0086  
                   wtemp5 0088                     wtemp6 007F            __CFG_MCLRE$OFF 0000  
             light2@digit 0026           __initialization 0028              __end_of_main 03E3  
            __end_of_init 0358              __end_of_loop 030F              __end_of_wait 0329  
             error2@F2797 0040               error2@F2799 0044                    ??_main 0079  
                  ??_init 0075                    ??_loop 0036                    ??_wait 0076  
          __CFG_PLLEN$OFF 0000           _num_digits_conv 01D6                    _BCL1IE 0493  
                  _BCL1IF 0093                    ?_open2 0074                    ?_set_a 0074  
                  ?_set_b 0074                    ?_set_c 0074                    ?_set_d 0074  
                  ?_set_e 0074                    ?_set_f 0074                    ?_set_g 0074  
                  ?_set_p 0074                    _ANSELA 018C                    _ANSELB 018D  
                  i1l1147 0383                    i1l1171 0020                    _OSCCON 0099  
                  _TMR4IE 0499                    _TMR4IF 0099                    _TMR4ON 20BA  
                  _SSP1IE 048B                    _SSP1IF 008B                    ___wmul 02D2  
          __CFG_STVREN$ON 0000                    _close2 03E9                 ??___lwdiv 0078  
               ??___lwmod 002D                    _light2 0039                    _error2 0329  
               ??_set_num 0020   __end_of__initialization 0035            __pcstackCOMMON 0070  
            __pidataBANK0 0394             ?_interruption 0070             __end_of_open2 0369  
           __end_of_set_a 03DC             __end_of_set_b 03D4             __end_of_set_c 03CC  
           __end_of_set_d 03C4             __end_of_set_e 03BC             __end_of_set_f 03B4  
           __end_of_set_g 03AC             __end_of_set_p 03A4   __end_of_num_digits_conv 026C  
    __size_of_init_Timer4 000B                   ??_open2 0076                   ??_set_a 0076  
                 ??_set_b 0076                   ??_set_c 0076                   ??_set_d 0076  
                 ??_set_e 0076                   ??_set_f 0076                   ??_set_g 0076  
                 ??_set_p 0076                __pbssBANK0 0048            _init_I2C_slave 0369  
              __pmaintext 03DC            ??_interruption 0072                   ?___wmul 0074  
              __pintentry 0004                   ?_close2 0070        num_digits_conv@dot 0030  
      num_digits_conv@num 0034                   ?_light2 0023                   ?_error2 0070  
                 _SSP1ADD 0212                   _SSP1BUF 0211    __end_of_init_I2C_slave 0379  
             set_a@on_off 0074               set_b@on_off 0074      num_digits_conv@digit 002F  
  __size_of_interrupt_I2C 0010               set_c@on_off 0074               set_d@on_off 0074  
             set_e@on_off 0074               set_f@on_off 0074               set_g@on_off 0074  
       open2@digit_select 0074               set_p@on_off 0074           __size_of___wmul 0020  
                 ___lwdiv 026C                   ___lwmod 02A3           __size_of_close2 0004  
         __size_of_light2 0104           __size_of_error2 0019                   __ptext1 02F2  
                 __ptext2 01D6                   __ptext3 02D2                   __ptext4 02A3  
                 __ptext5 026C                   __ptext6 0329                   __ptext7 0039  
                 __ptext8 030F                   __ptext9 013D          ?_num_digits_conv 002F  
                 _counter 0079                   _set_num 013D             _received_data 0048  
         ?_init_I2C_slave 0070      end_of_initialization 0035            interrupt_I2C@x 0071  
                 light2@i 0027                   init_ram 03E3                   initloop 03E4  
                 loop@dot 0038             _interrupt_I2C 0379          __CFG_FOSC$INTOSC 0000  
    __end_of_interruption 0026            ?_interrupt_I2C 0070            __end_of___wmul 02F2  
          __end_of_close2 03ED            __end_of_light2 013D            __end_of_error2 0342  
     start_initialization 0028                  ??___wmul 0078                  ??_close2 0074  
             __pdataBANK0 0040             ??_init_Timer4 0074                  ??_light2 0078  
                ??_error2 0029               __pbssCOMMON 0079                 ___latbits 0001  
           __pcstackBANK0 0020          ___lwdiv@dividend 0024           ??_interrupt_I2C 0070  
                ?___lwdiv 0022        init_I2C_slave@addr 0074                  ?___lwmod 0029  
           wait@wait_time 0074       num_digits_conv@data 0033           error2@error_dot 002A  
        ??_init_I2C_slave 0074     __size_of_interruption 0022       __end_of_init_Timer4 0394  
                ?_set_num 0076          ___lwdiv@quotient 0027            __size_of_open2 0011  
          __size_of_set_a 0008            __size_of_set_b 0008            __size_of_set_c 0008  
          __size_of_set_d 0008            __size_of_set_e 0008            __size_of_set_f 0008  
          __size_of_set_g 0008            __size_of_set_p 0008            ___wmul@product 0020  
              set_num@num 0076                  _SSP1CON1 0215              _interruption 0004  
                _SSP1STAT 0214         ___wmul@multiplier 0074         error2@error_digit 002E  
__size_of_num_digits_conv 0096                 light2@dot 0023                 light2@num 0024  
        __size_of___lwdiv 0037               _init_Timer4 0389          __size_of___lwmod 002F  
               loop@digit 003C           ___lwdiv@divisor 0022           ___lwdiv@counter 0026  
                __ptext10 039C                  __ptext11 03A4                  __ptext20 0342  
                __ptext12 03AC                  __ptext21 0389                  __ptext13 03B4  
                __ptext22 0369                  __ptext14 03BC                  __ptext15 03C4  
                __ptext24 0379                  __ptext16 03CC                  __ptext17 03D4  
                __ptext18 0358                  __ptext19 03E9          __size_of_set_num 0099  
            _SSP1CON1bits 0215              _SSP1CON2bits 0216             __size_of_main 0007  
           __size_of_init 0016             __size_of_loop 001D             __size_of_wait 001A  
            _SSP1STATbits 0214               pic14e$flags 007E                  intlevel1 0000  
        ___lwmod@dividend 002B         __CFG_CLKOUTEN$OFF 0000         ??_num_digits_conv 0031  
         ___lwmod@divisor 0029           ___lwmod@counter 002E  
