

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Tue Mar 07 18:29:13 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBIGRAM,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	inittext,global,class=CODE,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	psect	text27,local,class=CODE,merge=1,delta=2
    37                           	dabs	1,0x220,48
    38                           	dabs	1,0x1A0,80
    39                           	dabs	1,0x148,40
    40                           	dabs	1,0x20C8,0,_led_disp
    41                           	dabs	1,0x7E,2
    42  0000                     	;# 
    43  0001                     	;# 
    44  0002                     	;# 
    45  0003                     	;# 
    46  0004                     	;# 
    47  0005                     	;# 
    48  0006                     	;# 
    49  0007                     	;# 
    50  0008                     	;# 
    51  0009                     	;# 
    52  000A                     	;# 
    53  000B                     	;# 
    54  000C                     	;# 
    55  000D                     	;# 
    56  0011                     	;# 
    57  0012                     	;# 
    58  0013                     	;# 
    59  0014                     	;# 
    60  0015                     	;# 
    61  0016                     	;# 
    62  0016                     	;# 
    63  0017                     	;# 
    64  0018                     	;# 
    65  0019                     	;# 
    66  001A                     	;# 
    67  001B                     	;# 
    68  001C                     	;# 
    69  001E                     	;# 
    70  001F                     	;# 
    71  008C                     	;# 
    72  008D                     	;# 
    73  0091                     	;# 
    74  0092                     	;# 
    75  0093                     	;# 
    76  0094                     	;# 
    77  0095                     	;# 
    78  0096                     	;# 
    79  0097                     	;# 
    80  0098                     	;# 
    81  0099                     	;# 
    82  009A                     	;# 
    83  009B                     	;# 
    84  009B                     	;# 
    85  009C                     	;# 
    86  009D                     	;# 
    87  009E                     	;# 
    88  010C                     	;# 
    89  010D                     	;# 
    90  0111                     	;# 
    91  0112                     	;# 
    92  0113                     	;# 
    93  0114                     	;# 
    94  0115                     	;# 
    95  0116                     	;# 
    96  0117                     	;# 
    97  0118                     	;# 
    98  0119                     	;# 
    99  011A                     	;# 
   100  011B                     	;# 
   101  011D                     	;# 
   102  011E                     	;# 
   103  018C                     	;# 
   104  018D                     	;# 
   105  0191                     	;# 
   106  0191                     	;# 
   107  0192                     	;# 
   108  0193                     	;# 
   109  0193                     	;# 
   110  0193                     	;# 
   111  0194                     	;# 
   112  0195                     	;# 
   113  0196                     	;# 
   114  0199                     	;# 
   115  019A                     	;# 
   116  019B                     	;# 
   117  019B                     	;# 
   118  019B                     	;# 
   119  019B                     	;# 
   120  019C                     	;# 
   121  019C                     	;# 
   122  019D                     	;# 
   123  019E                     	;# 
   124  019F                     	;# 
   125  020C                     	;# 
   126  020D                     	;# 
   127  0211                     	;# 
   128  0211                     	;# 
   129  0212                     	;# 
   130  0212                     	;# 
   131  0213                     	;# 
   132  0213                     	;# 
   133  0214                     	;# 
   134  0214                     	;# 
   135  0215                     	;# 
   136  0215                     	;# 
   137  0215                     	;# 
   138  0216                     	;# 
   139  0216                     	;# 
   140  0217                     	;# 
   141  0217                     	;# 
   142  0219                     	;# 
   143  021A                     	;# 
   144  021B                     	;# 
   145  021C                     	;# 
   146  021D                     	;# 
   147  021E                     	;# 
   148  021F                     	;# 
   149  0291                     	;# 
   150  0291                     	;# 
   151  0292                     	;# 
   152  0293                     	;# 
   153  0294                     	;# 
   154  0295                     	;# 
   155  0295                     	;# 
   156  0296                     	;# 
   157  0298                     	;# 
   158  0298                     	;# 
   159  0299                     	;# 
   160  029A                     	;# 
   161  029B                     	;# 
   162  029C                     	;# 
   163  029C                     	;# 
   164  029D                     	;# 
   165  029E                     	;# 
   166  029E                     	;# 
   167  0311                     	;# 
   168  0311                     	;# 
   169  0312                     	;# 
   170  0313                     	;# 
   171  0318                     	;# 
   172  0318                     	;# 
   173  0319                     	;# 
   174  031A                     	;# 
   175  0394                     	;# 
   176  0395                     	;# 
   177  0396                     	;# 
   178  039A                     	;# 
   179  039C                     	;# 
   180  039D                     	;# 
   181  039E                     	;# 
   182  039F                     	;# 
   183  0415                     	;# 
   184  0416                     	;# 
   185  0417                     	;# 
   186  041C                     	;# 
   187  041D                     	;# 
   188  041E                     	;# 
   189  0FE4                     	;# 
   190  0FE5                     	;# 
   191  0FE6                     	;# 
   192  0FE7                     	;# 
   193  0FE8                     	;# 
   194  0FE9                     	;# 
   195  0FEA                     	;# 
   196  0FEB                     	;# 
   197  0FED                     	;# 
   198  0FEE                     	;# 
   199  0FEF                     	;_led_disp
   200                           
   201                           	psect	idataBIGRAM
   202  043B                     __pidataBIGRAM:	
   203                           
   204                           ;initializer for _led_disp
   205  043B  3401               	retlw	1
   206  043C  3400               	retlw	0
   207  043D  3401               	retlw	1
   208  043E  3400               	retlw	0
   209  043F  3401               	retlw	1
   210  0440  3400               	retlw	0
   211  0441  3401               	retlw	1
   212  0442  3400               	retlw	0
   213  0443  3401               	retlw	1
   214  0444  3400               	retlw	0
   215  0445  3401               	retlw	1
   216  0446  3400               	retlw	0
   217  0447  3400               	retlw	0
   218  0448  3400               	retlw	0
   219  0449  3400               	retlw	0
   220  044A  3400               	retlw	0
   221  044B  3401               	retlw	1
   222  044C  3400               	retlw	0
   223  044D  3401               	retlw	1
   224  044E  3400               	retlw	0
   225  044F  3400               	retlw	0
   226  0450  3400               	retlw	0
   227  0451  3400               	retlw	0
   228  0452  3400               	retlw	0
   229  0453  3400               	retlw	0
   230  0454  3400               	retlw	0
   231  0455  3400               	retlw	0
   232  0456  3400               	retlw	0
   233  0457  3401               	retlw	1
   234  0458  3400               	retlw	0
   235  0459  3401               	retlw	1
   236  045A  3400               	retlw	0
   237  045B  3400               	retlw	0
   238  045C  3400               	retlw	0
   239  045D  3401               	retlw	1
   240  045E  3400               	retlw	0
   241  045F  3401               	retlw	1
   242  0460  3400               	retlw	0
   243  0461  3400               	retlw	0
   244  0462  3400               	retlw	0
   245  0463  3401               	retlw	1
   246  0464  3400               	retlw	0
   247  0465  3401               	retlw	1
   248  0466  3400               	retlw	0
   249  0467  3401               	retlw	1
   250  0468  3400               	retlw	0
   251  0469  3401               	retlw	1
   252  046A  3400               	retlw	0
   253  046B  3401               	retlw	1
   254  046C  3400               	retlw	0
   255  046D  3400               	retlw	0
   256  046E  3400               	retlw	0
   257  046F  3400               	retlw	0
   258  0470  3400               	retlw	0
   259  0471  3401               	retlw	1
   260  0472  3400               	retlw	0
   261  0473  3400               	retlw	0
   262  0474  3400               	retlw	0
   263  0475  3401               	retlw	1
   264  0476  3400               	retlw	0
   265  0477  3401               	retlw	1
   266  0478  3400               	retlw	0
   267  0479  3400               	retlw	0
   268  047A  3400               	retlw	0
   269  047B  3400               	retlw	0
   270  047C  3400               	retlw	0
   271  047D  3401               	retlw	1
   272  047E  3400               	retlw	0
   273  047F  3401               	retlw	1
   274  0480  3400               	retlw	0
   275  0481  3401               	retlw	1
   276  0482  3400               	retlw	0
   277  0483  3400               	retlw	0
   278  0484  3400               	retlw	0
   279  0485  3401               	retlw	1
   280  0486  3400               	retlw	0
   281  0487  3401               	retlw	1
   282  0488  3400               	retlw	0
   283  0489  3400               	retlw	0
   284  048A  3400               	retlw	0
   285  048B  3401               	retlw	1
   286  048C  3400               	retlw	0
   287  048D  3401               	retlw	1
   288  048E  3400               	retlw	0
   289  048F  3400               	retlw	0
   290  0490  3400               	retlw	0
   291  0491  3400               	retlw	0
   292  0492  3400               	retlw	0
   293  0493  3401               	retlw	1
   294  0494  3400               	retlw	0
   295  0495  3401               	retlw	1
   296  0496  3400               	retlw	0
   297  0497  3401               	retlw	1
   298  0498  3400               	retlw	0
   299  0499  3401               	retlw	1
   300  049A  3400               	retlw	0
   301  049B  3401               	retlw	1
   302  049C  3400               	retlw	0
   303  049D  3401               	retlw	1
   304  049E  3400               	retlw	0
   305  049F  3401               	retlw	1
   306  04A0  3400               	retlw	0
   307  04A1  3401               	retlw	1
   308  04A2  3400               	retlw	0
   309  04A3  3400               	retlw	0
   310  04A4  3400               	retlw	0
   311  04A5  3400               	retlw	0
   312  04A6  3400               	retlw	0
   313  04A7  3400               	retlw	0
   314  04A8  3400               	retlw	0
   315  04A9  3400               	retlw	0
   316  04AA  3400               	retlw	0
   317  04AB  3401               	retlw	1
   318  04AC  3400               	retlw	0
   319  04AD  3401               	retlw	1
   320  04AE  3400               	retlw	0
   321  04AF  3401               	retlw	1
   322  04B0  3400               	retlw	0
   323  04B1  3401               	retlw	1
   324  04B2  3400               	retlw	0
   325  04B3  3401               	retlw	1
   326  04B4  3400               	retlw	0
   327  04B5  3401               	retlw	1
   328  04B6  3400               	retlw	0
   329  04B7  3401               	retlw	1
   330  04B8  3400               	retlw	0
   331  04B9  3401               	retlw	1
   332  04BA  3400               	retlw	0
   333  04BB  3401               	retlw	1
   334  04BC  3400               	retlw	0
   335  04BD  3401               	retlw	1
   336  04BE  3400               	retlw	0
   337  04BF  3401               	retlw	1
   338  04C0  3400               	retlw	0
   339  04C1  3400               	retlw	0
   340  04C2  3400               	retlw	0
   341  04C3  3401               	retlw	1
   342  04C4  3400               	retlw	0
   343  04C5  3401               	retlw	1
   344  04C6  3400               	retlw	0
   345  04C7  3400               	retlw	0
   346  04C8  3400               	retlw	0
   347  04C9  3400               	retlw	0
   348  04CA  3400               	retlw	0
   349  04CB  3400               	retlw	0
   350  04CC  3400               	retlw	0
   351  04CD  3400               	retlw	0
   352  04CE  3400               	retlw	0
   353  04CF  3400               	retlw	0
   354  04D0  3400               	retlw	0
   355  04D1  3400               	retlw	0
   356  04D2  3400               	retlw	0
   357  04D3  3400               	retlw	0
   358  04D4  3400               	retlw	0
   359  04D5  3401               	retlw	1
   360  04D6  3400               	retlw	0
   361  04D7  3400               	retlw	0
   362  04D8  3400               	retlw	0
   363  04D9  3400               	retlw	0
   364  04DA  3400               	retlw	0
   365  04DB  3401               	retlw	1
   366  04DC  3400               	retlw	0
   367  04DD  3401               	retlw	1
   368  04DE  3400               	retlw	0
   369  04DF  3401               	retlw	1
   370  04E0  3400               	retlw	0
   371  04E1  3401               	retlw	1
   372  04E2  3400               	retlw	0
   373  000C                     _PORTA	set	12
   374  000D                     _PORTB	set	13
   375  0060                     _RA0	set	96
   376  0061                     _RA1	set	97
   377  0062                     _RA2	set	98
   378  0063                     _RA3	set	99
   379  0066                     _RA6	set	102
   380  0067                     _RA7	set	103
   381  006C                     _RB4	set	108
   382  006D                     _RB5	set	109
   383  006E                     _RB6	set	110
   384  006F                     _RB7	set	111
   385  009D                     _ADCON0	set	157
   386  009E                     _ADCON1	set	158
   387  009C                     _ADRESH	set	156
   388  009B                     _ADRESL	set	155
   389  0099                     _OSCCON	set	153
   390  008C                     _TRISA	set	140
   391  008D                     _TRISB	set	141
   392  04E9                     _GO_nDONE	set	1257
   393  018C                     _ANSELA	set	396
   394  018D                     _ANSELB	set	397
   395                           
   396                           ; #config settings
   397  0000                     
   398                           	psect	cinit
   399  07F0                     start_initialization:	
   400  07F0                     __initialization:		;BIGRAM
   401                           
   402                           ; Initialize objects allocated to BIGRAM
   403  07F0  303B               	movlw	low __pidataBIGRAM
   404  07F1  0084               	movwf	4
   405  07F2  3084               	movlw	(high __pidataBIGRAM)| (0+128)
   406  07F3  0085               	movwf	5
   407  07F4  30C8               	movlw	low (0+8392)
   408  07F5  0086               	movwf	6
   409  07F6  3020               	movlw	high (0+8392)
   410  07F7  0087               	movwf	7
   411  07F8  3000               	movlw	0
   412  07F9  00FF               	movwf	btemp+1
   413  07FA  30A8               	movlw	168
   414  07FB  3181  2171         	fcall	init_ram
   415  07FD                     end_of_initialization:	
   416                           ;End of C runtime variable initialization code
   417                           
   418  07FD                     __end_of__initialization:	
   419  07FD  0020               	movlb	0
   420  07FE  3181  290E         	ljmp	_main	;jump to C main() function
   421                           
   422                           	psect	inittext
   423  0171                     init_ram:	
   424  0171  00FE               	movwf	126
   425  0172                     initloop:	
   426  0172  0012               	moviw fsr0++
   427  0173  001E               	movwi fsr1++
   428  0174  3001               	movlw	1
   429  0175  02FE               	subwf	126,f
   430  0176  3000               	movlw	0
   431  0177  3BFF               	subwfb	127,f
   432  0178  087F               	movf	127,w
   433  0179  047E               	iorwf	126,w
   434  017A  1903               	btfsc	3,2
   435  017B  3400               	retlw	0
   436  017C  2972               	goto	initloop
   437                           
   438                           	psect	cstackCOMMON
   439  0070                     __pcstackCOMMON:	
   440  0070                     ?___ftge:	
   441  0070                     ?_init:	
   442                           ; 1 bit 
   443                           
   444  0070                     ??_init:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     ?_loop:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0070                     ?_close:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0070                     ?_set_A:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0070                     ?_set_B:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0070                     ?_set_C:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  0070                     ?_set_D:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0070                     ?_set_E:	
   466                           ; 1 bytes @ 0x0
   467                           
   468  0070                     ?_set_F:	
   469                           ; 1 bytes @ 0x0
   470                           
   471  0070                     ?_set_G:	
   472                           ; 1 bytes @ 0x0
   473                           
   474  0070                     ?_set_DP:	
   475                           ; 1 bytes @ 0x0
   476                           
   477  0070                     ?_set_BIT0:	
   478                           ; 1 bytes @ 0x0
   479                           
   480  0070                     ?_set_BIT1:	
   481                           ; 1 bytes @ 0x0
   482                           
   483  0070                     ?_wait:	
   484                           ; 1 bytes @ 0x0
   485                           
   486  0070                     ?_ad_conv:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0070                     ?_main:	
   490                           ; 2 bytes @ 0x0
   491                           
   492  0070                     ?___wmul:	
   493                           ; 2 bytes @ 0x0
   494                           
   495  0070                     ?___ftpack:	
   496                           ; 2 bytes @ 0x0
   497                           
   498  0070                     set_A@on_off:	
   499                           ; 3 bytes @ 0x0
   500                           
   501  0070                     set_B@on_off:	
   502                           ; 2 bytes @ 0x0
   503                           
   504  0070                     set_C@on_off:	
   505                           ; 2 bytes @ 0x0
   506                           
   507  0070                     set_D@on_off:	
   508                           ; 2 bytes @ 0x0
   509                           
   510  0070                     set_E@on_off:	
   511                           ; 2 bytes @ 0x0
   512                           
   513  0070                     set_F@on_off:	
   514                           ; 2 bytes @ 0x0
   515                           
   516  0070                     set_G@on_off:	
   517                           ; 2 bytes @ 0x0
   518                           
   519  0070                     set_DP@on_off:	
   520                           ; 2 bytes @ 0x0
   521                           
   522  0070                     set_BIT0@open_close:	
   523                           ; 2 bytes @ 0x0
   524                           
   525  0070                     set_BIT1@open_close:	
   526                           ; 2 bytes @ 0x0
   527                           
   528  0070                     ad_conv@pin_select:	
   529                           ; 2 bytes @ 0x0
   530                           
   531  0070                     wait@wait_time:	
   532                           ; 2 bytes @ 0x0
   533                           
   534  0070                     ___wmul@multiplier:	
   535                           ; 2 bytes @ 0x0
   536                           
   537  0070                     ___ftpack@arg:	
   538                           ; 2 bytes @ 0x0
   539                           
   540  0070                     ___ftge@ff1:	
   541                           ; 3 bytes @ 0x0
   542                           
   543                           
   544                           ; 3 bytes @ 0x0
   545  0070                     	ds	2
   546  0072                     ??_ad_conv:	
   547  0072                     ?_open:	
   548                           ; 1 bytes @ 0x2
   549                           
   550  0072                     ??_close:	
   551                           ; 1 bytes @ 0x2
   552                           
   553  0072                     ??_set_A:	
   554                           ; 1 bytes @ 0x2
   555                           
   556  0072                     ??_set_B:	
   557                           ; 1 bytes @ 0x2
   558                           
   559  0072                     ??_set_C:	
   560                           ; 1 bytes @ 0x2
   561                           
   562  0072                     ??_set_D:	
   563                           ; 1 bytes @ 0x2
   564                           
   565  0072                     ??_set_E:	
   566                           ; 1 bytes @ 0x2
   567                           
   568  0072                     ??_set_F:	
   569                           ; 1 bytes @ 0x2
   570                           
   571  0072                     ??_set_G:	
   572                           ; 1 bytes @ 0x2
   573                           
   574  0072                     ??_set_DP:	
   575                           ; 1 bytes @ 0x2
   576                           
   577  0072                     ??_set_BIT0:	
   578                           ; 1 bytes @ 0x2
   579                           
   580  0072                     ??_set_BIT1:	
   581                           ; 1 bytes @ 0x2
   582                           
   583  0072                     ??_wait:	
   584                           ; 1 bytes @ 0x2
   585                           
   586  0072                     open@select:	
   587                           ; 1 bytes @ 0x2
   588                           
   589  0072                     ___wmul@multiplicand:	
   590                           ; 2 bytes @ 0x2
   591                           
   592                           
   593                           ; 2 bytes @ 0x2
   594  0072                     	ds	1
   595  0073                     ___ftpack@exp:	
   596  0073                     ___ftge@ff2:	
   597                           ; 1 bytes @ 0x3
   598                           
   599                           
   600                           ; 3 bytes @ 0x3
   601  0073                     	ds	1
   602  0074                     ??_open:	
   603  0074                     ??___wmul:	
   604                           ; 1 bytes @ 0x4
   605                           
   606  0074                     ___ftpack@sign:	
   607                           ; 1 bytes @ 0x4
   608                           
   609  0074                     wait@i:	
   610                           ; 1 bytes @ 0x4
   611                           
   612  0074                     ___wmul@product:	
   613                           ; 2 bytes @ 0x4
   614                           
   615                           
   616                           ; 2 bytes @ 0x4
   617  0074                     	ds	1
   618  0075                     ??___ftpack:	
   619                           
   620                           ; 1 bytes @ 0x5
   621  0075                     	ds	1
   622  0076                     ?_set_disp:	
   623  0076                     ??___ftge:	
   624                           ; 1 bytes @ 0x6
   625                           
   626  0076                     set_disp@disp:	
   627                           ; 1 bytes @ 0x6
   628                           
   629                           
   630                           ; 2 bytes @ 0x6
   631  0076                     	ds	2
   632  0078                     ?___awtoft:	
   633  0078                     set_disp@dp:	
   634                           ; 3 bytes @ 0x8
   635                           
   636  0078                     ___awtoft@c:	
   637                           ; 2 bytes @ 0x8
   638                           
   639                           
   640                           ; 2 bytes @ 0x8
   641  0078                     	ds	1
   642  0079                     ad_conv@temp:	
   643                           
   644                           ; 2 bytes @ 0x9
   645  0079                     	ds	1
   646  007A                     ??_set_disp:	
   647                           
   648                           ; 1 bytes @ 0xA
   649  007A                     	ds	1
   650  007B                     ??___awtoft:	
   651                           
   652                           ; 1 bytes @ 0xB
   653  007B                     	ds	2
   654  007D                     ___awtoft@sign:	
   655                           
   656                           ; 1 bytes @ 0xD
   657  007D                     	ds	1
   658  007E                     ??_loop:	
   659  007E                     ??_da_conv:	
   660                           ; 1 bytes @ 0xE
   661                           
   662  007E                     ??_main:	
   663                           ; 1 bytes @ 0xE
   664                           
   665                           
   666                           	psect	cstackBANK0
   667  0020                     __pcstackBANK0:	
   668                           ; 1 bytes @ 0xE
   669                           
   670  0020                     ?___ftmul:	
   671  0020                     ___ftmul@f1:	
   672                           ; 3 bytes @ 0x0
   673                           
   674                           
   675                           ; 3 bytes @ 0x0
   676  0020                     	ds	3
   677  0023                     ___ftmul@f2:	
   678                           
   679                           ; 3 bytes @ 0x3
   680  0023                     	ds	3
   681  0026                     ??___ftmul:	
   682                           
   683                           ; 1 bytes @ 0x6
   684  0026                     	ds	4
   685  002A                     ___ftmul@exp:	
   686                           
   687                           ; 1 bytes @ 0xA
   688  002A                     	ds	1
   689  002B                     ___ftmul@f3_as_product:	
   690                           
   691                           ; 3 bytes @ 0xB
   692  002B                     	ds	3
   693  002E                     ___ftmul@cntr:	
   694                           
   695                           ; 1 bytes @ 0xE
   696  002E                     	ds	1
   697  002F                     ___ftmul@sign:	
   698                           
   699                           ; 1 bytes @ 0xF
   700  002F                     	ds	1
   701  0030                     ?___ftdiv:	
   702  0030                     ___ftdiv@f2:	
   703                           ; 3 bytes @ 0x10
   704                           
   705                           
   706                           ; 3 bytes @ 0x10
   707  0030                     	ds	3
   708  0033                     ___ftdiv@f1:	
   709                           
   710                           ; 3 bytes @ 0x13
   711  0033                     	ds	3
   712  0036                     ??___ftdiv:	
   713                           
   714                           ; 1 bytes @ 0x16
   715  0036                     	ds	4
   716  003A                     ___ftdiv@cntr:	
   717                           
   718                           ; 1 bytes @ 0x1A
   719  003A                     	ds	1
   720  003B                     ___ftdiv@f3:	
   721                           
   722                           ; 3 bytes @ 0x1B
   723  003B                     	ds	3
   724  003E                     ___ftdiv@exp:	
   725                           
   726                           ; 1 bytes @ 0x1E
   727  003E                     	ds	1
   728  003F                     ___ftdiv@sign:	
   729                           
   730                           ; 1 bytes @ 0x1F
   731  003F                     	ds	1
   732  0040                     ?_da_conv:	
   733  0040                     ?___fttol:	
   734                           ; 3 bytes @ 0x20
   735                           
   736  0040                     da_conv@digital:	
   737                           ; 4 bytes @ 0x20
   738                           
   739  0040                     ___fttol@f1:	
   740                           ; 2 bytes @ 0x20
   741                           
   742                           
   743                           ; 3 bytes @ 0x20
   744  0040                     	ds	3
   745  0043                     da_conv@analog:	
   746                           
   747                           ; 3 bytes @ 0x23
   748  0043                     	ds	1
   749  0044                     ??___fttol:	
   750                           
   751                           ; 1 bytes @ 0x24
   752  0044                     	ds	4
   753  0048                     ___fttol@sign1:	
   754                           
   755                           ; 1 bytes @ 0x28
   756  0048                     	ds	1
   757  0049                     ___fttol@lval:	
   758                           
   759                           ; 4 bytes @ 0x29
   760  0049                     	ds	4
   761  004D                     ___fttol@exp1:	
   762                           
   763                           ; 1 bytes @ 0x2D
   764  004D                     	ds	1
   765  004E                     ?___awmod:	
   766  004E                     ___awmod@divisor:	
   767                           ; 2 bytes @ 0x2E
   768                           
   769                           
   770                           ; 2 bytes @ 0x2E
   771  004E                     	ds	2
   772  0050                     ___awmod@dividend:	
   773                           
   774                           ; 2 bytes @ 0x30
   775  0050                     	ds	2
   776  0052                     ??___awmod:	
   777                           
   778                           ; 1 bytes @ 0x32
   779  0052                     	ds	1
   780  0053                     ___awmod@counter:	
   781                           
   782                           ; 1 bytes @ 0x33
   783  0053                     	ds	1
   784  0054                     ___awmod@sign:	
   785                           
   786                           ; 1 bytes @ 0x34
   787  0054                     	ds	1
   788  0055                     ?_disp:	
   789  0055                     disp@num:	
   790                           ; 1 bytes @ 0x35
   791                           
   792                           
   793                           ; 3 bytes @ 0x35
   794  0055                     	ds	3
   795  0058                     ??_disp:	
   796                           
   797                           ; 1 bytes @ 0x38
   798  0058                     	ds	2
   799  005A                     disp@dp:	
   800                           
   801                           ; 2 bytes @ 0x3A
   802  005A                     	ds	2
   803  005C                     disp@over:	
   804                           
   805                           ; 2 bytes @ 0x3C
   806  005C                     	ds	2
   807  005E                     disp@dp_index:	
   808                           
   809                           ; 2 bytes @ 0x3E
   810  005E                     	ds	2
   811  0060                     disp@digits:	
   812                           
   813                           ; 8 bytes @ 0x40
   814  0060                     	ds	8
   815  0068                     disp@i:	
   816                           
   817                           ; 2 bytes @ 0x48
   818  0068                     	ds	2
   819                           
   820                           	psect	maintext
   821  010E                     __pmaintext:	
   822 ;;
   823 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   824 ;;
   825 ;; *************** function _main *****************
   826 ;; Defined at:
   827 ;;		line 85 in file "main.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;		None
   830 ;; Auto vars:     Size  Location     Type
   831 ;;		None
   832 ;; Return value:  Size  Location     Type
   833 ;;                  2   94[None  ] int 
   834 ;; Registers used:
   835 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   836 ;; Tracked objects:
   837 ;;		On entry : B1F/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   841 ;;      Params:         0       0       0       0       0       0
   842 ;;      Locals:         0       0       0       0       0       0
   843 ;;      Temps:          0       0       0       0       0       0
   844 ;;      Totals:         0       0       0       0       0       0
   845 ;;Total ram usage:        0 bytes
   846 ;; Hardware stack levels required when called:    5
   847 ;; This function calls:
   848 ;;		_init
   849 ;;		_loop
   850 ;; This function is called by:
   851 ;;		Startup code after reset
   852 ;; This function uses a non-reentrant model
   853 ;;
   854                           
   855                           
   856                           ;psect for function _main
   857  010E                     _main:	
   858                           
   859                           ;main.c: 86: init();
   860                           
   861                           ;incstack = 0
   862                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   863  010E  3181  217D  3181   	fcall	_init
   864  0111                     l1377:	
   865                           ;main.c: 87: while(1) {
   866                           
   867                           
   868                           ;main.c: 88: loop();
   869  0111  3181  21A7  3181   	fcall	_loop
   870  0114  2911               	goto	l1377
   871  0115                     __end_of_main:	
   872                           ;main.c: 89: }
   873                           ;main.c: 90: return 0;
   874                           ;	Return value of _main is never used
   875                           
   876                           
   877                           	psect	text1
   878  01A7                     __ptext1:	
   879 ;; *************** function _loop *****************
   880 ;; Defined at:
   881 ;;		line 105 in file "main.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;		None
   884 ;; Auto vars:     Size  Location     Type
   885 ;;		None
   886 ;; Return value:  Size  Location     Type
   887 ;;                  1    wreg      void 
   888 ;; Registers used:
   889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   890 ;; Tracked objects:
   891 ;;		On entry : 0/0
   892 ;;		On exit  : 0/0
   893 ;;		Unchanged: 0/0
   894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   895 ;;      Params:         0       0       0       0       0       0
   896 ;;      Locals:         0       0       0       0       0       0
   897 ;;      Temps:          0       0       0       0       0       0
   898 ;;      Totals:         0       0       0       0       0       0
   899 ;;Total ram usage:        0 bytes
   900 ;; Hardware stack levels used:    1
   901 ;; Hardware stack levels required when called:    4
   902 ;; This function calls:
   903 ;;		_ad_conv
   904 ;;		_da_conv
   905 ;;		_disp
   906 ;; This function is called by:
   907 ;;		_main
   908 ;; This function uses a non-reentrant model
   909 ;;
   910                           
   911                           
   912                           ;psect for function _loop
   913  01A7                     _loop:	
   914                           
   915                           ;main.c: 106: disp(da_conv(ad_conv(0b00010011)));
   916                           
   917                           ;incstack = 0
   918                           ; Regs used in _loop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   919  01A7  3013               	movlw	19
   920  01A8  00F0               	movwf	ad_conv@pin_select
   921  01A9  3000               	movlw	0
   922  01AA  00F1               	movwf	ad_conv@pin_select+1
   923  01AB  3182  221B  3181   	fcall	_ad_conv
   924  01AE  0871               	movf	?_ad_conv+1,w
   925  01AF  0020               	movlb	0	; select bank0
   926  01B0  00C1               	movwf	da_conv@digital+1
   927  01B1  0870               	movf	?_ad_conv,w
   928  01B2  00C0               	movwf	da_conv@digital
   929  01B3  3182  2240  3181   	fcall	_da_conv
   930  01B6  0020               	movlb	0	; select bank0
   931  01B7  0840               	movf	?_da_conv,w
   932  01B8  00D5               	movwf	disp@num
   933  01B9  0841               	movf	?_da_conv+1,w
   934  01BA  00D6               	movwf	disp@num+1
   935  01BB  0842               	movf	?_da_conv+2,w
   936  01BC  00D7               	movwf	disp@num+2
   937  01BD  3186  2640         	fcall	_disp
   938  01BF  0008               	return
   939  01C0                     __end_of_loop:	
   940                           
   941                           	psect	text2
   942  0640                     __ptext2:	
   943 ;; *************** function _disp *****************
   944 ;; Defined at:
   945 ;;		line 145 in file "main.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;  num             3   53[BANK0 ] void 
   948 ;; Auto vars:     Size  Location     Type
   949 ;;  digits          8   64[BANK0 ] int [4]
   950 ;;  i               2   72[BANK0 ] int 
   951 ;;  dp_index        2   62[BANK0 ] int 
   952 ;;  over            2   60[BANK0 ] int 
   953 ;;  dp              2   58[BANK0 ] int 
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      void 
   956 ;; Registers used:
   957 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   963 ;;      Params:         0       3       0       0       0       0
   964 ;;      Locals:         0      16       0       0       0       0
   965 ;;      Temps:          0       2       0       0       0       0
   966 ;;      Totals:         0      21       0       0       0       0
   967 ;;Total ram usage:       21 bytes
   968 ;; Hardware stack levels used:    1
   969 ;; Hardware stack levels required when called:    3
   970 ;; This function calls:
   971 ;;		___awmod
   972 ;;		___ftdiv
   973 ;;		___ftge
   974 ;;		___ftmul
   975 ;;		___fttol
   976 ;;		___wmul
   977 ;;		_close
   978 ;;		_open
   979 ;;		_set_disp
   980 ;;		_wait
   981 ;; This function is called by:
   982 ;;		_loop
   983 ;; This function uses a non-reentrant model
   984 ;;
   985                           
   986                           
   987                           ;psect for function _disp
   988  0640                     _disp:	
   989                           
   990                           ;main.c: 146: int digits[4];
   991                           ;main.c: 147: int i;
   992                           ;main.c: 148: int dp;
   993                           ;main.c: 149: int dp_index=-1;
   994                           
   995                           ;incstack = 0
   996                           ; Regs used in _disp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   997  0640  30FF               	movlw	255
   998  0641  0020               	movlb	0	; select bank0
   999  0642  00DE               	movwf	disp@dp_index
  1000  0643  30FF               	movlw	255
  1001  0644  00DF               	movwf	disp@dp_index+1
  1002                           
  1003                           ;main.c: 150: int over=0;
  1004  0645  01DC               	clrf	disp@over
  1005  0646  01DD               	clrf	disp@over+1
  1006                           
  1007                           ;main.c: 152: if (num >= 10000) {
  1008  0647  0855               	movf	disp@num,w
  1009  0648  00F0               	movwf	___ftge@ff1
  1010  0649  0856               	movf	disp@num+1,w
  1011  064A  00F1               	movwf	___ftge@ff1+1
  1012  064B  0857               	movf	disp@num+2,w
  1013  064C  00F2               	movwf	___ftge@ff1+2
  1014  064D  3040               	movlw	64
  1015  064E  00F3               	movwf	___ftge@ff2
  1016  064F  301C               	movlw	28
  1017  0650  00F4               	movwf	___ftge@ff2+1
  1018  0651  3046               	movlw	70
  1019  0652  00F5               	movwf	___ftge@ff2+2
  1020  0653  3182  2275  3186   	fcall	___ftge
  1021  0656  1C03               	btfss	3,0
  1022  0657  2E6E               	goto	l1329
  1023                           
  1024                           ;main.c: 153: digits[3] = 10;
  1025  0658  300A               	movlw	10
  1026  0659  0020               	movlb	0	; select bank0
  1027  065A  00E6               	movwf	disp@digits+6
  1028  065B  3000               	movlw	0
  1029  065C  00E7               	movwf	disp@digits+7
  1030                           
  1031                           ;main.c: 154: digits[2] = 10;
  1032  065D  300A               	movlw	10
  1033  065E  00E4               	movwf	disp@digits+4
  1034  065F  3000               	movlw	0
  1035  0660  00E5               	movwf	disp@digits+5
  1036                           
  1037                           ;main.c: 155: digits[1] = 10;
  1038  0661  300A               	movlw	10
  1039  0662  00E2               	movwf	disp@digits+2
  1040  0663  3000               	movlw	0
  1041  0664  00E3               	movwf	disp@digits+3
  1042                           
  1043                           ;main.c: 156: digits[0] = 11;
  1044  0665  300B               	movlw	11
  1045  0666  00E0               	movwf	disp@digits
  1046  0667  3000               	movlw	0
  1047  0668  00E1               	movwf	disp@digits+1
  1048                           
  1049                           ;main.c: 157: over = 1;
  1050  0669  3001               	movlw	1
  1051  066A  00DC               	movwf	disp@over
  1052  066B  3000               	movlw	0
  1053  066C  00DD               	movwf	disp@over+1
  1054                           
  1055                           ;main.c: 158: } else if (num >= 1000) {
  1056  066D  2EF1               	goto	l1349
  1057  066E                     l1329:	
  1058  066E  0020               	movlb	0	; select bank0
  1059  066F  0855               	movf	disp@num,w
  1060  0670  00F0               	movwf	___ftge@ff1
  1061  0671  0856               	movf	disp@num+1,w
  1062  0672  00F1               	movwf	___ftge@ff1+1
  1063  0673  0857               	movf	disp@num+2,w
  1064  0674  00F2               	movwf	___ftge@ff1+2
  1065  0675  3000               	movlw	0
  1066  0676  00F3               	movwf	___ftge@ff2
  1067  0677  307A               	movlw	122
  1068  0678  00F4               	movwf	___ftge@ff2+1
  1069  0679  3044               	movlw	68
  1070  067A  00F5               	movwf	___ftge@ff2+2
  1071  067B  3182  2275  3186   	fcall	___ftge
  1072  067E  1803               	btfsc	3,0
  1073  067F  2EF1               	goto	l1349
  1074                           
  1075                           ;main.c: 160: } else if (num >= 100) {
  1076  0680  0020               	movlb	0	; select bank0
  1077  0681  0855               	movf	disp@num,w
  1078  0682  00F0               	movwf	___ftge@ff1
  1079  0683  0856               	movf	disp@num+1,w
  1080  0684  00F1               	movwf	___ftge@ff1+1
  1081  0685  0857               	movf	disp@num+2,w
  1082  0686  00F2               	movwf	___ftge@ff1+2
  1083  0687  3000               	movlw	0
  1084  0688  00F3               	movwf	___ftge@ff2
  1085  0689  30C8               	movlw	200
  1086  068A  00F4               	movwf	___ftge@ff2+1
  1087  068B  3042               	movlw	66
  1088  068C  00F5               	movwf	___ftge@ff2+2
  1089  068D  3182  2275  3186   	fcall	___ftge
  1090  0690  1C03               	btfss	3,0
  1091  0691  2EAB               	goto	l1339
  1092                           
  1093                           ;main.c: 161: num *= 10;
  1094  0692  3000               	movlw	0
  1095  0693  0020               	movlb	0	; select bank0
  1096  0694  00A0               	movwf	___ftmul@f1
  1097  0695  3020               	movlw	32
  1098  0696  00A1               	movwf	___ftmul@f1+1
  1099  0697  3041               	movlw	65
  1100  0698  00A2               	movwf	___ftmul@f1+2
  1101  0699  0855               	movf	disp@num,w
  1102  069A  00A3               	movwf	___ftmul@f2
  1103  069B  0856               	movf	disp@num+1,w
  1104  069C  00A4               	movwf	___ftmul@f2+1
  1105  069D  0857               	movf	disp@num+2,w
  1106  069E  00A5               	movwf	___ftmul@f2+2
  1107  069F  3185  258C  3186   	fcall	___ftmul
  1108  06A2  0020               	movlb	0	; select bank0
  1109  06A3  0820               	movf	?___ftmul,w
  1110  06A4  00D5               	movwf	disp@num
  1111  06A5  0821               	movf	?___ftmul+1,w
  1112  06A6  00D6               	movwf	disp@num+1
  1113  06A7  0822               	movf	?___ftmul+2,w
  1114  06A8  00D7               	movwf	disp@num+2
  1115                           
  1116                           ;main.c: 162: dp_index = 1;
  1117  06A9  3001               	movlw	1
  1118  06AA  2EEE               	goto	L2
  1119  06AB                     l1339:	
  1120                           ;main.c: 163: } else if (num >= 10) {
  1121                           
  1122  06AB  0020               	movlb	0	; select bank0
  1123  06AC  0855               	movf	disp@num,w
  1124  06AD  00F0               	movwf	___ftge@ff1
  1125  06AE  0856               	movf	disp@num+1,w
  1126  06AF  00F1               	movwf	___ftge@ff1+1
  1127  06B0  0857               	movf	disp@num+2,w
  1128  06B1  00F2               	movwf	___ftge@ff1+2
  1129  06B2  3000               	movlw	0
  1130  06B3  00F3               	movwf	___ftge@ff2
  1131  06B4  3020               	movlw	32
  1132  06B5  00F4               	movwf	___ftge@ff2+1
  1133  06B6  3041               	movlw	65
  1134  06B7  00F5               	movwf	___ftge@ff2+2
  1135  06B8  3182  2275  3186   	fcall	___ftge
  1136  06BB  1C03               	btfss	3,0
  1137  06BC  2ED6               	goto	l1345
  1138                           
  1139                           ;main.c: 164: num *= 100;
  1140  06BD  3000               	movlw	0
  1141  06BE  0020               	movlb	0	; select bank0
  1142  06BF  00A0               	movwf	___ftmul@f1
  1143  06C0  30C8               	movlw	200
  1144  06C1  00A1               	movwf	___ftmul@f1+1
  1145  06C2  3042               	movlw	66
  1146  06C3  00A2               	movwf	___ftmul@f1+2
  1147  06C4  0855               	movf	disp@num,w
  1148  06C5  00A3               	movwf	___ftmul@f2
  1149  06C6  0856               	movf	disp@num+1,w
  1150  06C7  00A4               	movwf	___ftmul@f2+1
  1151  06C8  0857               	movf	disp@num+2,w
  1152  06C9  00A5               	movwf	___ftmul@f2+2
  1153  06CA  3185  258C  3186   	fcall	___ftmul
  1154  06CD  0020               	movlb	0	; select bank0
  1155  06CE  0820               	movf	?___ftmul,w
  1156  06CF  00D5               	movwf	disp@num
  1157  06D0  0821               	movf	?___ftmul+1,w
  1158  06D1  00D6               	movwf	disp@num+1
  1159  06D2  0822               	movf	?___ftmul+2,w
  1160  06D3  00D7               	movwf	disp@num+2
  1161                           
  1162                           ;main.c: 165: dp_index = 2;
  1163  06D4  3002               	movlw	2
  1164  06D5  2EEE               	goto	L2
  1165  06D6                     l1345:	
  1166                           ;main.c: 166: } else {
  1167                           
  1168                           
  1169                           ;main.c: 167: num *= 1000;
  1170  06D6  3000               	movlw	0
  1171  06D7  0020               	movlb	0	; select bank0
  1172  06D8  00A0               	movwf	___ftmul@f1
  1173  06D9  307A               	movlw	122
  1174  06DA  00A1               	movwf	___ftmul@f1+1
  1175  06DB  3044               	movlw	68
  1176  06DC  00A2               	movwf	___ftmul@f1+2
  1177  06DD  0855               	movf	disp@num,w
  1178  06DE  00A3               	movwf	___ftmul@f2
  1179  06DF  0856               	movf	disp@num+1,w
  1180  06E0  00A4               	movwf	___ftmul@f2+1
  1181  06E1  0857               	movf	disp@num+2,w
  1182  06E2  00A5               	movwf	___ftmul@f2+2
  1183  06E3  3185  258C  3186   	fcall	___ftmul
  1184  06E6  0020               	movlb	0	; select bank0
  1185  06E7  0820               	movf	?___ftmul,w
  1186  06E8  00D5               	movwf	disp@num
  1187  06E9  0821               	movf	?___ftmul+1,w
  1188  06EA  00D6               	movwf	disp@num+1
  1189  06EB  0822               	movf	?___ftmul+2,w
  1190  06EC  00D7               	movwf	disp@num+2
  1191                           
  1192                           ;main.c: 168: dp_index = 3;
  1193  06ED  3003               	movlw	3
  1194  06EE                     L2:	
  1195  06EE  00DE               	movwf	disp@dp_index
  1196  06EF  3000               	movlw	0
  1197  06F0  00DF               	movwf	disp@dp_index+1
  1198  06F1                     l1349:	
  1199                           
  1200                           ;main.c: 169: }
  1201                           ;main.c: 171: if (!over) {
  1202  06F1  0020               	movlb	0	; select bank0
  1203  06F2  085C               	movf	disp@over,w
  1204  06F3  045D               	iorwf	disp@over+1,w
  1205  06F4  1D03               	btfss	3,2
  1206  06F5  2F8E               	goto	l1353
  1207                           
  1208                           ;main.c: 172: digits[3] = (int) (num/1000)%10;
  1209  06F6  300A               	movlw	10
  1210  06F7  00CE               	movwf	___awmod@divisor
  1211  06F8  3000               	movlw	0
  1212  06F9  00CF               	movwf	___awmod@divisor+1
  1213  06FA  0855               	movf	disp@num,w
  1214  06FB  00B3               	movwf	___ftdiv@f1
  1215  06FC  0856               	movf	disp@num+1,w
  1216  06FD  00B4               	movwf	___ftdiv@f1+1
  1217  06FE  0857               	movf	disp@num+2,w
  1218  06FF  00B5               	movwf	___ftdiv@f1+2
  1219  0700  3000               	movlw	0
  1220  0701  00B0               	movwf	___ftdiv@f2
  1221  0702  307A               	movlw	122
  1222  0703  00B1               	movwf	___ftdiv@f2+1
  1223  0704  3044               	movlw	68
  1224  0705  00B2               	movwf	___ftdiv@f2+2
  1225  0706  3184  24E3  3186   	fcall	___ftdiv
  1226  0709  0020               	movlb	0	; select bank0
  1227  070A  0830               	movf	?___ftdiv,w
  1228  070B  00C0               	movwf	___fttol@f1
  1229  070C  0831               	movf	?___ftdiv+1,w
  1230  070D  00C1               	movwf	___fttol@f1+1
  1231  070E  0832               	movf	?___ftdiv+2,w
  1232  070F  00C2               	movwf	___fttol@f1+2
  1233  0710  3183  23B4  3186   	fcall	___fttol
  1234  0713  0020               	movlb	0	; select bank0
  1235  0714  0841               	movf	?___fttol+1,w
  1236  0715  00D1               	movwf	___awmod@dividend+1
  1237  0716  0840               	movf	?___fttol,w
  1238  0717  00D0               	movwf	___awmod@dividend
  1239  0718  3182  22B0  3186   	fcall	___awmod
  1240  071B  0020               	movlb	0	; select bank0
  1241  071C  084F               	movf	?___awmod+1,w
  1242  071D  00E7               	movwf	disp@digits+7
  1243  071E  084E               	movf	?___awmod,w
  1244  071F  00E6               	movwf	disp@digits+6
  1245                           
  1246                           ;main.c: 173: digits[2] = (int) (num/100)%10;
  1247  0720  300A               	movlw	10
  1248  0721  00CE               	movwf	___awmod@divisor
  1249  0722  3000               	movlw	0
  1250  0723  00CF               	movwf	___awmod@divisor+1
  1251  0724  0855               	movf	disp@num,w
  1252  0725  00B3               	movwf	___ftdiv@f1
  1253  0726  0856               	movf	disp@num+1,w
  1254  0727  00B4               	movwf	___ftdiv@f1+1
  1255  0728  0857               	movf	disp@num+2,w
  1256  0729  00B5               	movwf	___ftdiv@f1+2
  1257  072A  3000               	movlw	0
  1258  072B  00B0               	movwf	___ftdiv@f2
  1259  072C  30C8               	movlw	200
  1260  072D  00B1               	movwf	___ftdiv@f2+1
  1261  072E  3042               	movlw	66
  1262  072F  00B2               	movwf	___ftdiv@f2+2
  1263  0730  3184  24E3  3186   	fcall	___ftdiv
  1264  0733  0020               	movlb	0	; select bank0
  1265  0734  0830               	movf	?___ftdiv,w
  1266  0735  00C0               	movwf	___fttol@f1
  1267  0736  0831               	movf	?___ftdiv+1,w
  1268  0737  00C1               	movwf	___fttol@f1+1
  1269  0738  0832               	movf	?___ftdiv+2,w
  1270  0739  00C2               	movwf	___fttol@f1+2
  1271  073A  3183  23B4  3186   	fcall	___fttol
  1272  073D  0020               	movlb	0	; select bank0
  1273  073E  0841               	movf	?___fttol+1,w
  1274  073F  00D1               	movwf	___awmod@dividend+1
  1275  0740  0840               	movf	?___fttol,w
  1276  0741  00D0               	movwf	___awmod@dividend
  1277  0742  3182  22B0  3186   	fcall	___awmod
  1278  0745  0020               	movlb	0	; select bank0
  1279  0746  084F               	movf	?___awmod+1,w
  1280  0747  00E5               	movwf	disp@digits+5
  1281  0748  084E               	movf	?___awmod,w
  1282  0749  00E4               	movwf	disp@digits+4
  1283                           
  1284                           ;main.c: 174: digits[1] = (int) (num/10)%10;
  1285  074A  300A               	movlw	10
  1286  074B  00CE               	movwf	___awmod@divisor
  1287  074C  3000               	movlw	0
  1288  074D  00CF               	movwf	___awmod@divisor+1
  1289  074E  0855               	movf	disp@num,w
  1290  074F  00B3               	movwf	___ftdiv@f1
  1291  0750  0856               	movf	disp@num+1,w
  1292  0751  00B4               	movwf	___ftdiv@f1+1
  1293  0752  0857               	movf	disp@num+2,w
  1294  0753  00B5               	movwf	___ftdiv@f1+2
  1295  0754  3000               	movlw	0
  1296  0755  00B0               	movwf	___ftdiv@f2
  1297  0756  3020               	movlw	32
  1298  0757  00B1               	movwf	___ftdiv@f2+1
  1299  0758  3041               	movlw	65
  1300  0759  00B2               	movwf	___ftdiv@f2+2
  1301  075A  3184  24E3  3186   	fcall	___ftdiv
  1302  075D  0020               	movlb	0	; select bank0
  1303  075E  0830               	movf	?___ftdiv,w
  1304  075F  00C0               	movwf	___fttol@f1
  1305  0760  0831               	movf	?___ftdiv+1,w
  1306  0761  00C1               	movwf	___fttol@f1+1
  1307  0762  0832               	movf	?___ftdiv+2,w
  1308  0763  00C2               	movwf	___fttol@f1+2
  1309  0764  3183  23B4  3186   	fcall	___fttol
  1310  0767  0020               	movlb	0	; select bank0
  1311  0768  0841               	movf	?___fttol+1,w
  1312  0769  00D1               	movwf	___awmod@dividend+1
  1313  076A  0840               	movf	?___fttol,w
  1314  076B  00D0               	movwf	___awmod@dividend
  1315  076C  3182  22B0  3186   	fcall	___awmod
  1316  076F  0020               	movlb	0	; select bank0
  1317  0770  084F               	movf	?___awmod+1,w
  1318  0771  00E3               	movwf	disp@digits+3
  1319  0772  084E               	movf	?___awmod,w
  1320  0773  00E2               	movwf	disp@digits+2
  1321                           
  1322                           ;main.c: 175: digits[0] = (int) (num)%10;
  1323  0774  300A               	movlw	10
  1324  0775  00CE               	movwf	___awmod@divisor
  1325  0776  3000               	movlw	0
  1326  0777  00CF               	movwf	___awmod@divisor+1
  1327  0778  0855               	movf	disp@num,w
  1328  0779  00C0               	movwf	___fttol@f1
  1329  077A  0856               	movf	disp@num+1,w
  1330  077B  00C1               	movwf	___fttol@f1+1
  1331  077C  0857               	movf	disp@num+2,w
  1332  077D  00C2               	movwf	___fttol@f1+2
  1333  077E  3183  23B4  3186   	fcall	___fttol
  1334  0781  0020               	movlb	0	; select bank0
  1335  0782  0841               	movf	?___fttol+1,w
  1336  0783  00D1               	movwf	___awmod@dividend+1
  1337  0784  0840               	movf	?___fttol,w
  1338  0785  00D0               	movwf	___awmod@dividend
  1339  0786  3182  22B0  3186   	fcall	___awmod
  1340  0789  0020               	movlb	0	; select bank0
  1341  078A  084F               	movf	?___awmod+1,w
  1342  078B  00E1               	movwf	disp@digits+1
  1343  078C  084E               	movf	?___awmod,w
  1344  078D  00E0               	movwf	disp@digits
  1345  078E                     l1353:	
  1346                           
  1347                           ;main.c: 176: }
  1348                           ;main.c: 178: for (i=0; i<4; i++) {
  1349  078E  01E8               	clrf	disp@i
  1350  078F  01E9               	clrf	disp@i+1
  1351  0790  0869               	movf	disp@i+1,w
  1352  0791  3A80               	xorlw	128
  1353  0792  00D8               	movwf	??_disp
  1354  0793  3080               	movlw	128
  1355  0794  0258               	subwf	??_disp,w
  1356  0795  1D03               	skipz
  1357  0796  2F99               	goto	u1775
  1358  0797  3004               	movlw	4
  1359  0798  0268               	subwf	disp@i,w
  1360  0799                     u1775:	
  1361  0799  1803               	btfsc	3,0
  1362  079A  2FED               	goto	l1371
  1363  079B                     l1359:	
  1364                           
  1365                           ;main.c: 179: dp = ((i==dp_index) ? (1:0));
  1366  079B  0020               	movlb	0	; select bank0
  1367  079C  085F               	movf	disp@dp_index+1,w
  1368  079D  0669               	xorwf	disp@i+1,w
  1369  079E  1D03               	skipz
  1370  079F  2FA2               	goto	u1785
  1371  07A0  085E               	movf	disp@dp_index,w
  1372  07A1  0668               	xorwf	disp@i,w
  1373  07A2                     u1785:	
  1374  07A2  1D03               	btfss	3,2
  1375  07A3  2FA6               	goto	u1780
  1376  07A4  3001               	movlw	1
  1377  07A5  2FA7               	goto	u1790
  1378  07A6                     u1780:	
  1379  07A6  3000               	movlw	0
  1380  07A7                     u1790:	
  1381  07A7  00D8               	movwf	??_disp
  1382  07A8  01D9               	clrf	??_disp+1
  1383  07A9  0858               	movf	??_disp,w
  1384  07AA  00DA               	movwf	disp@dp
  1385  07AB  0859               	movf	??_disp+1,w
  1386  07AC  00DB               	movwf	disp@dp+1
  1387                           
  1388                           ;main.c: 180: set_disp(led_disp[digits[i]],dp);
  1389  07AD  3568               	lslf	disp@i,w
  1390  07AE  3E60               	addlw	(low (disp@digits| 0))& (0+255)
  1391  07AF  0086               	movwf	6
  1392  07B0  0187               	clrf	7
  1393  07B1  3F40               	moviw [0]fsr1
  1394  07B2  00F0               	movwf	___wmul@multiplier
  1395  07B3  3F41               	moviw [1]fsr1
  1396  07B4  00F1               	movwf	___wmul@multiplier+1
  1397  07B5  300E               	movlw	14
  1398  07B6  00F2               	movwf	___wmul@multiplicand
  1399  07B7  3000               	movlw	0
  1400  07B8  00F3               	movwf	___wmul@multiplicand+1
  1401  07B9  3181  21C0  3186   	fcall	___wmul
  1402  07BC  30C8               	movlw	200
  1403  07BD  0020               	movlb	0	; select bank0
  1404  07BE  00D8               	movwf	??_disp
  1405  07BF  3020               	movlw	32
  1406  07C0  00D9               	movwf	??_disp+1
  1407  07C1  0870               	movf	?___wmul,w
  1408  07C2  0758               	addwf	??_disp,w
  1409  07C3  00F6               	movwf	set_disp@disp
  1410  07C4  0871               	movf	?___wmul+1,w
  1411  07C5  3D59               	addwfc	??_disp+1,w
  1412  07C6  00F7               	movwf	set_disp@disp+1
  1413  07C7  085B               	movf	disp@dp+1,w
  1414  07C8  00F9               	movwf	set_disp@dp+1
  1415  07C9  085A               	movf	disp@dp,w
  1416  07CA  00F8               	movwf	set_disp@dp
  1417  07CB  3182  22F6  3186   	fcall	_set_disp
  1418                           
  1419                           ;main.c: 181: open(i);
  1420  07CE  0020               	movlb	0	; select bank0
  1421  07CF  0869               	movf	disp@i+1,w
  1422  07D0  00F3               	movwf	open@select+1
  1423  07D1  0868               	movf	disp@i,w
  1424  07D2  00F2               	movwf	open@select
  1425  07D3  3181  21FB  3186   	fcall	_open
  1426                           
  1427                           ;main.c: 182: wait(3);
  1428  07D6  3003               	movlw	3
  1429  07D7  00F0               	movwf	wait@wait_time
  1430  07D8  3000               	movlw	0
  1431  07D9  00F1               	movwf	wait@wait_time+1
  1432  07DA  3181  218F  3186   	fcall	_wait
  1433  07DD  3001               	movlw	1
  1434  07DE  0020               	movlb	0	; select bank0
  1435  07DF  07E8               	addwf	disp@i,f
  1436  07E0  3000               	movlw	0
  1437  07E1  3DE9               	addwfc	disp@i+1,f
  1438  07E2  0869               	movf	disp@i+1,w
  1439  07E3  3A80               	xorlw	128
  1440  07E4  00D8               	movwf	??_disp
  1441  07E5  3080               	movlw	128
  1442  07E6  0258               	subwf	??_disp,w
  1443  07E7  1D03               	skipz
  1444  07E8  2FEB               	goto	u1805
  1445  07E9  3004               	movlw	4
  1446  07EA  0268               	subwf	disp@i,w
  1447  07EB                     u1805:	
  1448  07EB  1C03               	skipc
  1449  07EC  2F9B               	goto	l1359
  1450  07ED                     l1371:	
  1451                           
  1452                           ;main.c: 183: }
  1453                           ;main.c: 184: close();
  1454  07ED  3181  2165         	fcall	_close
  1455  07EF  0008               	return
  1456  07F0                     __end_of_disp:	
  1457                           
  1458                           	psect	text3
  1459  018F                     __ptext3:	
  1460 ;; *************** function _wait *****************
  1461 ;; Defined at:
  1462 ;;		line 127 in file "main.c"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;  wait_time       2    0[COMMON] unsigned int 
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;  i               2    4[COMMON] int 
  1467 ;; Return value:  Size  Location     Type
  1468 ;;                  1    wreg      void 
  1469 ;; Registers used:
  1470 ;;		wreg, status,2
  1471 ;; Tracked objects:
  1472 ;;		On entry : 0/0
  1473 ;;		On exit  : 0/0
  1474 ;;		Unchanged: 0/0
  1475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1476 ;;      Params:         2       0       0       0       0       0
  1477 ;;      Locals:         2       0       0       0       0       0
  1478 ;;      Temps:          2       0       0       0       0       0
  1479 ;;      Totals:         6       0       0       0       0       0
  1480 ;;Total ram usage:        6 bytes
  1481 ;; Hardware stack levels used:    1
  1482 ;; This function calls:
  1483 ;;		Nothing
  1484 ;; This function is called by:
  1485 ;;		_disp
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489                           
  1490                           ;psect for function _wait
  1491  018F                     _wait:	
  1492                           
  1493                           ;main.c: 128: int i;
  1494                           ;main.c: 129: for (i=0; i<wait_time; i++) {
  1495                           
  1496                           ;incstack = 0
  1497                           ; Regs used in _wait: [wreg+status,2]
  1498  018F  01F4               	clrf	wait@i
  1499  0190  01F5               	clrf	wait@i+1
  1500  0191                     l116:	
  1501  0191  0871               	movf	wait@wait_time+1,w
  1502  0192  0275               	subwf	wait@i+1,w
  1503  0193  1D03               	skipz
  1504  0194  2997               	goto	u1235
  1505  0195  0870               	movf	wait@wait_time,w
  1506  0196  0274               	subwf	wait@i,w
  1507  0197                     u1235:	
  1508  0197  1803               	btfsc	3,0
  1509  0198  0008               	return
  1510                           
  1511                           ;main.c: 130: _delay((unsigned long)((1)*(8000000/4000.0)));
  1512  0199  3003               	movlw	3
  1513  019A  00F3               	movwf	??_wait+1
  1514  019B  3097               	movlw	151
  1515  019C  00F2               	movwf	??_wait
  1516  019D                     u1817:	
  1517  019D  0BF2               	decfsz	??_wait,f
  1518  019E  299D               	goto	u1817
  1519  019F  0BF3               	decfsz	??_wait+1,f
  1520  01A0  299D               	goto	u1817
  1521  01A1  3200               	nop2
  1522  01A2  3001               	movlw	1
  1523  01A3  07F4               	addwf	wait@i,f
  1524  01A4  3000               	movlw	0
  1525  01A5  3DF5               	addwfc	wait@i+1,f
  1526  01A6  2991               	goto	l116
  1527  01A7                     __end_of_wait:	
  1528                           
  1529                           	psect	text4
  1530  02F6                     __ptext4:	
  1531 ;; *************** function _set_disp *****************
  1532 ;; Defined at:
  1533 ;;		line 134 in file "main.c"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;  disp            2    6[COMMON] PTR int 
  1536 ;;		 -> led_disp(168), 
  1537 ;;  dp              2    8[COMMON] int 
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;		None
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  1    wreg      void 
  1542 ;; Registers used:
  1543 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1549 ;;      Params:         4       0       0       0       0       0
  1550 ;;      Locals:         0       0       0       0       0       0
  1551 ;;      Temps:          0       0       0       0       0       0
  1552 ;;      Totals:         4       0       0       0       0       0
  1553 ;;Total ram usage:        4 bytes
  1554 ;; Hardware stack levels used:    1
  1555 ;; Hardware stack levels required when called:    1
  1556 ;; This function calls:
  1557 ;;		_set_A
  1558 ;;		_set_B
  1559 ;;		_set_C
  1560 ;;		_set_D
  1561 ;;		_set_DP
  1562 ;;		_set_E
  1563 ;;		_set_F
  1564 ;;		_set_G
  1565 ;; This function is called by:
  1566 ;;		_disp
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           
  1571                           ;psect for function _set_disp
  1572  02F6                     _set_disp:	
  1573                           
  1574                           ;main.c: 135: set_A(disp[0]);
  1575                           
  1576                           ;incstack = 0
  1577                           ; Regs used in _set_disp: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1578  02F6  0876               	movf	set_disp@disp,w
  1579  02F7  0086               	movwf	6
  1580  02F8  0877               	movf	set_disp@disp+1,w
  1581  02F9  0087               	movwf	7
  1582  02FA  3F40               	moviw [0]fsr1
  1583  02FB  00F0               	movwf	set_A@on_off
  1584  02FC  3F41               	moviw [1]fsr1
  1585  02FD  00F1               	movwf	set_A@on_off+1
  1586  02FE  3181  2125  3182   	fcall	_set_A
  1587                           
  1588                           ;main.c: 136: set_B(disp[1]);
  1589  0301  0876               	movf	set_disp@disp,w
  1590  0302  0086               	movwf	6
  1591  0303  0877               	movf	set_disp@disp+1,w
  1592  0304  0087               	movwf	7
  1593  0305  3142               	addfsr 1,2
  1594  0306  3F40               	moviw [0]fsr1
  1595  0307  00F0               	movwf	set_B@on_off
  1596  0308  3F41               	moviw [1]fsr1
  1597  0309  00F1               	movwf	set_B@on_off+1
  1598  030A  3181  212D  3182   	fcall	_set_B
  1599                           
  1600                           ;main.c: 137: set_C(disp[2]);
  1601  030D  0876               	movf	set_disp@disp,w
  1602  030E  0086               	movwf	6
  1603  030F  0877               	movf	set_disp@disp+1,w
  1604  0310  0087               	movwf	7
  1605  0311  3144               	addfsr 1,4
  1606  0312  3F40               	moviw [0]fsr1
  1607  0313  00F0               	movwf	set_C@on_off
  1608  0314  3F41               	moviw [1]fsr1
  1609  0315  00F1               	movwf	set_C@on_off+1
  1610  0316  3181  2135  3182   	fcall	_set_C
  1611                           
  1612                           ;main.c: 138: set_D(disp[3]);
  1613  0319  0876               	movf	set_disp@disp,w
  1614  031A  0086               	movwf	6
  1615  031B  0877               	movf	set_disp@disp+1,w
  1616  031C  0087               	movwf	7
  1617  031D  3146               	addfsr 1,6
  1618  031E  3F40               	moviw [0]fsr1
  1619  031F  00F0               	movwf	set_D@on_off
  1620  0320  3F41               	moviw [1]fsr1
  1621  0321  00F1               	movwf	set_D@on_off+1
  1622  0322  3181  213D  3182   	fcall	_set_D
  1623                           
  1624                           ;main.c: 139: set_E(disp[4]);
  1625  0325  0876               	movf	set_disp@disp,w
  1626  0326  0086               	movwf	6
  1627  0327  0877               	movf	set_disp@disp+1,w
  1628  0328  0087               	movwf	7
  1629  0329  3148               	addfsr 1,8
  1630  032A  3F40               	moviw [0]fsr1
  1631  032B  00F0               	movwf	set_E@on_off
  1632  032C  3F41               	moviw [1]fsr1
  1633  032D  00F1               	movwf	set_E@on_off+1
  1634  032E  3181  214D  3182   	fcall	_set_E
  1635                           
  1636                           ;main.c: 140: set_F(disp[5]);
  1637  0331  0876               	movf	set_disp@disp,w
  1638  0332  0086               	movwf	6
  1639  0333  0877               	movf	set_disp@disp+1,w
  1640  0334  0087               	movwf	7
  1641  0335  314A               	addfsr 1,10
  1642  0336  3F40               	moviw [0]fsr1
  1643  0337  00F0               	movwf	set_F@on_off
  1644  0338  3F41               	moviw [1]fsr1
  1645  0339  00F1               	movwf	set_F@on_off+1
  1646  033A  3181  2155  3182   	fcall	_set_F
  1647                           
  1648                           ;main.c: 141: set_G(disp[6]);
  1649  033D  0876               	movf	set_disp@disp,w
  1650  033E  0086               	movwf	6
  1651  033F  0877               	movf	set_disp@disp+1,w
  1652  0340  0087               	movwf	7
  1653  0341  314C               	addfsr 1,12
  1654  0342  3F40               	moviw [0]fsr1
  1655  0343  00F0               	movwf	set_G@on_off
  1656  0344  3F41               	moviw [1]fsr1
  1657  0345  00F1               	movwf	set_G@on_off+1
  1658  0346  3181  215D  3182   	fcall	_set_G
  1659                           
  1660                           ;main.c: 142: set_DP(dp);
  1661  0349  0879               	movf	set_disp@dp+1,w
  1662  034A  00F1               	movwf	set_DP@on_off+1
  1663  034B  0878               	movf	set_disp@dp,w
  1664  034C  00F0               	movwf	set_DP@on_off
  1665  034D  3181  2145         	fcall	_set_DP
  1666  034F  0008               	return
  1667  0350                     __end_of_set_disp:	
  1668                           
  1669                           	psect	text5
  1670  015D                     __ptext5:	
  1671 ;; *************** function _set_G *****************
  1672 ;; Defined at:
  1673 ;;		line 80 in file "main.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;  on_off          2    0[COMMON] int 
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;		None
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  1    wreg      void 
  1680 ;; Registers used:
  1681 ;;		None
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1687 ;;      Params:         2       0       0       0       0       0
  1688 ;;      Locals:         0       0       0       0       0       0
  1689 ;;      Temps:          0       0       0       0       0       0
  1690 ;;      Totals:         2       0       0       0       0       0
  1691 ;;Total ram usage:        2 bytes
  1692 ;; Hardware stack levels used:    1
  1693 ;; This function calls:
  1694 ;;		Nothing
  1695 ;; This function is called by:
  1696 ;;		_set_disp
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           
  1701                           ;psect for function _set_G
  1702  015D                     _set_G:	
  1703                           
  1704                           ;incstack = 0
  1705                           ; Regs used in _set_G: []
  1706  015D  1C70               	btfss	set_G@on_off,0
  1707  015E  2962               	goto	u1070
  1708  015F  0020               	movlb	0	; select bank0
  1709  0160  140C               	bsf	12,0	;volatile
  1710  0161  0008               	return
  1711  0162                     u1070:	
  1712  0162  0020               	movlb	0	; select bank0
  1713  0163  100C               	bcf	12,0	;volatile
  1714  0164  0008               	return
  1715  0165                     __end_of_set_G:	
  1716                           
  1717                           	psect	text6
  1718  0155                     __ptext6:	
  1719 ;; *************** function _set_F *****************
  1720 ;; Defined at:
  1721 ;;		line 79 in file "main.c"
  1722 ;; Parameters:    Size  Location     Type
  1723 ;;  on_off          2    0[COMMON] int 
  1724 ;; Auto vars:     Size  Location     Type
  1725 ;;		None
  1726 ;; Return value:  Size  Location     Type
  1727 ;;                  1    wreg      void 
  1728 ;; Registers used:
  1729 ;;		None
  1730 ;; Tracked objects:
  1731 ;;		On entry : 0/0
  1732 ;;		On exit  : 0/0
  1733 ;;		Unchanged: 0/0
  1734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1735 ;;      Params:         2       0       0       0       0       0
  1736 ;;      Locals:         0       0       0       0       0       0
  1737 ;;      Temps:          0       0       0       0       0       0
  1738 ;;      Totals:         2       0       0       0       0       0
  1739 ;;Total ram usage:        2 bytes
  1740 ;; Hardware stack levels used:    1
  1741 ;; This function calls:
  1742 ;;		Nothing
  1743 ;; This function is called by:
  1744 ;;		_set_disp
  1745 ;; This function uses a non-reentrant model
  1746 ;;
  1747                           
  1748                           
  1749                           ;psect for function _set_F
  1750  0155                     _set_F:	
  1751                           
  1752                           ;incstack = 0
  1753                           ; Regs used in _set_F: []
  1754  0155  1C70               	btfss	set_F@on_off,0
  1755  0156  295A               	goto	u1050
  1756  0157  0020               	movlb	0	; select bank0
  1757  0158  178C               	bsf	12,7	;volatile
  1758  0159  0008               	return
  1759  015A                     u1050:	
  1760  015A  0020               	movlb	0	; select bank0
  1761  015B  138C               	bcf	12,7	;volatile
  1762  015C  0008               	return
  1763  015D                     __end_of_set_F:	
  1764                           
  1765                           	psect	text7
  1766  014D                     __ptext7:	
  1767 ;; *************** function _set_E *****************
  1768 ;; Defined at:
  1769 ;;		line 78 in file "main.c"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;  on_off          2    0[COMMON] int 
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;		None
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  1    wreg      void 
  1776 ;; Registers used:
  1777 ;;		None
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1783 ;;      Params:         2       0       0       0       0       0
  1784 ;;      Locals:         0       0       0       0       0       0
  1785 ;;      Temps:          0       0       0       0       0       0
  1786 ;;      Totals:         2       0       0       0       0       0
  1787 ;;Total ram usage:        2 bytes
  1788 ;; Hardware stack levels used:    1
  1789 ;; This function calls:
  1790 ;;		Nothing
  1791 ;; This function is called by:
  1792 ;;		_set_disp
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           
  1797                           ;psect for function _set_E
  1798  014D                     _set_E:	
  1799                           
  1800                           ;incstack = 0
  1801                           ; Regs used in _set_E: []
  1802  014D  1C70               	btfss	set_E@on_off,0
  1803  014E  2952               	goto	u1030
  1804  014F  0020               	movlb	0	; select bank0
  1805  0150  170C               	bsf	12,6	;volatile
  1806  0151  0008               	return
  1807  0152                     u1030:	
  1808  0152  0020               	movlb	0	; select bank0
  1809  0153  130C               	bcf	12,6	;volatile
  1810  0154  0008               	return
  1811  0155                     __end_of_set_E:	
  1812                           
  1813                           	psect	text8
  1814  0145                     __ptext8:	
  1815 ;; *************** function _set_DP *****************
  1816 ;; Defined at:
  1817 ;;		line 81 in file "main.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;  on_off          2    0[COMMON] int 
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;		None
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  1    wreg      void 
  1824 ;; Registers used:
  1825 ;;		None
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1831 ;;      Params:         2       0       0       0       0       0
  1832 ;;      Locals:         0       0       0       0       0       0
  1833 ;;      Temps:          0       0       0       0       0       0
  1834 ;;      Totals:         2       0       0       0       0       0
  1835 ;;Total ram usage:        2 bytes
  1836 ;; Hardware stack levels used:    1
  1837 ;; This function calls:
  1838 ;;		Nothing
  1839 ;; This function is called by:
  1840 ;;		_set_disp
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844                           
  1845                           ;psect for function _set_DP
  1846  0145                     _set_DP:	
  1847                           
  1848                           ;incstack = 0
  1849                           ; Regs used in _set_DP: []
  1850  0145  1C70               	btfss	set_DP@on_off,0
  1851  0146  294A               	goto	u1090
  1852  0147  0020               	movlb	0	; select bank0
  1853  0148  148C               	bsf	12,1	;volatile
  1854  0149  0008               	return
  1855  014A                     u1090:	
  1856  014A  0020               	movlb	0	; select bank0
  1857  014B  108C               	bcf	12,1	;volatile
  1858  014C  0008               	return
  1859  014D                     __end_of_set_DP:	
  1860                           
  1861                           	psect	text9
  1862  013D                     __ptext9:	
  1863 ;; *************** function _set_D *****************
  1864 ;; Defined at:
  1865 ;;		line 77 in file "main.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;  on_off          2    0[COMMON] int 
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;		None
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  1    wreg      void 
  1872 ;; Registers used:
  1873 ;;		None
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1879 ;;      Params:         2       0       0       0       0       0
  1880 ;;      Locals:         0       0       0       0       0       0
  1881 ;;      Temps:          0       0       0       0       0       0
  1882 ;;      Totals:         2       0       0       0       0       0
  1883 ;;Total ram usage:        2 bytes
  1884 ;; Hardware stack levels used:    1
  1885 ;; This function calls:
  1886 ;;		Nothing
  1887 ;; This function is called by:
  1888 ;;		_set_disp
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892                           
  1893                           ;psect for function _set_D
  1894  013D                     _set_D:	
  1895                           
  1896                           ;incstack = 0
  1897                           ; Regs used in _set_D: []
  1898  013D  1C70               	btfss	set_D@on_off,0
  1899  013E  2942               	goto	u1010
  1900  013F  0020               	movlb	0	; select bank0
  1901  0140  178D               	bsf	13,7	;volatile
  1902  0141  0008               	return
  1903  0142                     u1010:	
  1904  0142  0020               	movlb	0	; select bank0
  1905  0143  138D               	bcf	13,7	;volatile
  1906  0144  0008               	return
  1907  0145                     __end_of_set_D:	
  1908                           
  1909                           	psect	text10
  1910  0135                     __ptext10:	
  1911 ;; *************** function _set_C *****************
  1912 ;; Defined at:
  1913 ;;		line 76 in file "main.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;  on_off          2    0[COMMON] int 
  1916 ;; Auto vars:     Size  Location     Type
  1917 ;;		None
  1918 ;; Return value:  Size  Location     Type
  1919 ;;                  1    wreg      void 
  1920 ;; Registers used:
  1921 ;;		None
  1922 ;; Tracked objects:
  1923 ;;		On entry : 0/0
  1924 ;;		On exit  : 0/0
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1927 ;;      Params:         2       0       0       0       0       0
  1928 ;;      Locals:         0       0       0       0       0       0
  1929 ;;      Temps:          0       0       0       0       0       0
  1930 ;;      Totals:         2       0       0       0       0       0
  1931 ;;Total ram usage:        2 bytes
  1932 ;; Hardware stack levels used:    1
  1933 ;; This function calls:
  1934 ;;		Nothing
  1935 ;; This function is called by:
  1936 ;;		_set_disp
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940                           
  1941                           ;psect for function _set_C
  1942  0135                     _set_C:	
  1943                           
  1944                           ;incstack = 0
  1945                           ; Regs used in _set_C: []
  1946  0135  1C70               	btfss	set_C@on_off,0
  1947  0136  293A               	goto	u990
  1948  0137  0020               	movlb	0	; select bank0
  1949  0138  170D               	bsf	13,6	;volatile
  1950  0139  0008               	return
  1951  013A                     u990:	
  1952  013A  0020               	movlb	0	; select bank0
  1953  013B  130D               	bcf	13,6	;volatile
  1954  013C  0008               	return
  1955  013D                     __end_of_set_C:	
  1956                           
  1957                           	psect	text11
  1958  012D                     __ptext11:	
  1959 ;; *************** function _set_B *****************
  1960 ;; Defined at:
  1961 ;;		line 75 in file "main.c"
  1962 ;; Parameters:    Size  Location     Type
  1963 ;;  on_off          2    0[COMMON] int 
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;		None
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  1    wreg      void 
  1968 ;; Registers used:
  1969 ;;		None
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1975 ;;      Params:         2       0       0       0       0       0
  1976 ;;      Locals:         0       0       0       0       0       0
  1977 ;;      Temps:          0       0       0       0       0       0
  1978 ;;      Totals:         2       0       0       0       0       0
  1979 ;;Total ram usage:        2 bytes
  1980 ;; Hardware stack levels used:    1
  1981 ;; This function calls:
  1982 ;;		Nothing
  1983 ;; This function is called by:
  1984 ;;		_set_disp
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           
  1988                           
  1989                           ;psect for function _set_B
  1990  012D                     _set_B:	
  1991                           
  1992                           ;incstack = 0
  1993                           ; Regs used in _set_B: []
  1994  012D  1C70               	btfss	set_B@on_off,0
  1995  012E  2932               	goto	u970
  1996  012F  0020               	movlb	0	; select bank0
  1997  0130  168D               	bsf	13,5	;volatile
  1998  0131  0008               	return
  1999  0132                     u970:	
  2000  0132  0020               	movlb	0	; select bank0
  2001  0133  128D               	bcf	13,5	;volatile
  2002  0134  0008               	return
  2003  0135                     __end_of_set_B:	
  2004                           
  2005                           	psect	text12
  2006  0125                     __ptext12:	
  2007 ;; *************** function _set_A *****************
  2008 ;; Defined at:
  2009 ;;		line 74 in file "main.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;  on_off          2    0[COMMON] int 
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;		None
  2014 ;; Return value:  Size  Location     Type
  2015 ;;                  1    wreg      void 
  2016 ;; Registers used:
  2017 ;;		None
  2018 ;; Tracked objects:
  2019 ;;		On entry : 0/0
  2020 ;;		On exit  : 0/0
  2021 ;;		Unchanged: 0/0
  2022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2023 ;;      Params:         2       0       0       0       0       0
  2024 ;;      Locals:         0       0       0       0       0       0
  2025 ;;      Temps:          0       0       0       0       0       0
  2026 ;;      Totals:         2       0       0       0       0       0
  2027 ;;Total ram usage:        2 bytes
  2028 ;; Hardware stack levels used:    1
  2029 ;; This function calls:
  2030 ;;		Nothing
  2031 ;; This function is called by:
  2032 ;;		_set_disp
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           
  2036                           
  2037                           ;psect for function _set_A
  2038  0125                     _set_A:	
  2039                           
  2040                           ;incstack = 0
  2041                           ; Regs used in _set_A: []
  2042  0125  1C70               	btfss	set_A@on_off,0
  2043  0126  292A               	goto	u950
  2044  0127  0020               	movlb	0	; select bank0
  2045  0128  160D               	bsf	13,4	;volatile
  2046  0129  0008               	return
  2047  012A                     u950:	
  2048  012A  0020               	movlb	0	; select bank0
  2049  012B  120D               	bcf	13,4	;volatile
  2050  012C  0008               	return
  2051  012D                     __end_of_set_A:	
  2052                           
  2053                           	psect	text13
  2054  01FB                     __ptext13:	
  2055 ;; *************** function _open *****************
  2056 ;; Defined at:
  2057 ;;		line 187 in file "main.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;  select          2    2[COMMON] int 
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;		None
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  1    wreg      void 
  2064 ;; Registers used:
  2065 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2071 ;;      Params:         2       0       0       0       0       0
  2072 ;;      Locals:         0       0       0       0       0       0
  2073 ;;      Temps:          0       0       0       0       0       0
  2074 ;;      Totals:         2       0       0       0       0       0
  2075 ;;Total ram usage:        2 bytes
  2076 ;; Hardware stack levels used:    1
  2077 ;; Hardware stack levels required when called:    2
  2078 ;; This function calls:
  2079 ;;		_close
  2080 ;;		_set_BIT0
  2081 ;;		_set_BIT1
  2082 ;; This function is called by:
  2083 ;;		_disp
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           
  2088                           ;psect for function _open
  2089  01FB                     _open:	
  2090                           
  2091                           ;main.c: 188: close();
  2092                           
  2093                           ;incstack = 0
  2094                           ; Regs used in _open: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2095  01FB  3181  2165  3181   	fcall	_close
  2096                           
  2097                           ;main.c: 189: switch (select) {
  2098  01FE  2A0D               	goto	l1085
  2099  01FF                     l1079:	
  2100                           ;main.c: 190: case 0:
  2101                           
  2102                           
  2103                           ;main.c: 191: set_BIT0(1);
  2104  01FF  3001               	movlw	1
  2105  0200  00F0               	movwf	set_BIT0@open_close
  2106  0201  3000               	movlw	0
  2107  0202  00F1               	movwf	set_BIT0@open_close+1
  2108  0203  3181  2115         	fcall	_set_BIT0
  2109                           
  2110                           ;main.c: 192: break;
  2111  0205  0008               	return
  2112  0206                     l1081:	
  2113                           ;main.c: 193: case 1:
  2114                           
  2115                           
  2116                           ;main.c: 194: set_BIT1(1);
  2117  0206  3001               	movlw	1
  2118  0207  00F0               	movwf	set_BIT1@open_close
  2119  0208  3000               	movlw	0
  2120  0209  00F1               	movwf	set_BIT1@open_close+1
  2121  020A  3181  211D         	fcall	_set_BIT1
  2122                           
  2123                           ;main.c: 198: }
  2124                           
  2125                           ;main.c: 197: break;
  2126                           
  2127                           ;main.c: 196: default:
  2128                           
  2129                           ;main.c: 195: break;
  2130  020C  0008               	return
  2131  020D                     l1085:	
  2132                           
  2133                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2134                           ; Switch size 1, requested type "space"
  2135                           ; Number of cases is 1, Range of values is 0 to 0
  2136                           ; switch strategies available:
  2137                           ; Name         Instructions Cycles
  2138                           ; simple_byte            4     3 (average)
  2139                           ; direct_byte            8     6 (fixed)
  2140                           ; jumptable            260     6 (fixed)
  2141                           ;	Chosen strategy is simple_byte
  2142  020D  0873               	movf	open@select+1,w
  2143  020E  3A00               	xorlw	0	; case 0
  2144  020F  1903               	skipnz
  2145  0210  2A12               	goto	l1399
  2146  0211  2A1A               	goto	l144
  2147  0212                     l1399:	
  2148                           
  2149                           ; Switch size 1, requested type "space"
  2150                           ; Number of cases is 2, Range of values is 0 to 1
  2151                           ; switch strategies available:
  2152                           ; Name         Instructions Cycles
  2153                           ; simple_byte            7     4 (average)
  2154                           ; direct_byte           10     6 (fixed)
  2155                           ; jumptable            260     6 (fixed)
  2156                           ;	Chosen strategy is simple_byte
  2157  0212  0872               	movf	open@select,w
  2158  0213  3A00               	xorlw	0	; case 0
  2159  0214  1903               	skipnz
  2160  0215  29FF               	goto	l1079
  2161  0216  3A01               	xorlw	1	; case 1
  2162  0217  1903               	skipnz
  2163  0218  2A06               	goto	l1081
  2164  0219  2A1A               	goto	l144
  2165  021A                     l144:	
  2166  021A  0008               	return
  2167  021B                     __end_of_open:	
  2168                           
  2169                           	psect	text14
  2170  0165                     __ptext14:	
  2171 ;; *************** function _close *****************
  2172 ;; Defined at:
  2173 ;;		line 201 in file "main.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;		None
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;		None
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  1    wreg      void 
  2180 ;; Registers used:
  2181 ;;		wreg, status,2, status,0, pclath, cstack
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2187 ;;      Params:         0       0       0       0       0       0
  2188 ;;      Locals:         0       0       0       0       0       0
  2189 ;;      Temps:          0       0       0       0       0       0
  2190 ;;      Totals:         0       0       0       0       0       0
  2191 ;;Total ram usage:        0 bytes
  2192 ;; Hardware stack levels used:    1
  2193 ;; Hardware stack levels required when called:    1
  2194 ;; This function calls:
  2195 ;;		_set_BIT0
  2196 ;;		_set_BIT1
  2197 ;; This function is called by:
  2198 ;;		_disp
  2199 ;;		_open
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203                           
  2204                           ;psect for function _close
  2205  0165                     _close:	
  2206                           
  2207                           ;main.c: 202: set_BIT0(0);
  2208                           
  2209                           ;incstack = 0
  2210                           ; Regs used in _close: [wreg+status,2+status,0+pclath+cstack]
  2211  0165  3000               	movlw	0
  2212  0166  00F0               	movwf	set_BIT0@open_close
  2213  0167  00F1               	movwf	set_BIT0@open_close+1
  2214  0168  3181  2115  3181   	fcall	_set_BIT0
  2215                           
  2216                           ;main.c: 203: set_BIT1(0);
  2217  016B  3000               	movlw	0
  2218  016C  00F0               	movwf	set_BIT1@open_close
  2219  016D  00F1               	movwf	set_BIT1@open_close+1
  2220  016E  3181  211D         	fcall	_set_BIT1
  2221  0170  0008               	return
  2222  0171                     __end_of_close:	
  2223                           
  2224                           	psect	text15
  2225  011D                     __ptext15:	
  2226 ;; *************** function _set_BIT1 *****************
  2227 ;; Defined at:
  2228 ;;		line 83 in file "main.c"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;  open_close      2    0[COMMON] int 
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;		None
  2233 ;; Return value:  Size  Location     Type
  2234 ;;                  1    wreg      void 
  2235 ;; Registers used:
  2236 ;;		None
  2237 ;; Tracked objects:
  2238 ;;		On entry : 0/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2242 ;;      Params:         2       0       0       0       0       0
  2243 ;;      Locals:         0       0       0       0       0       0
  2244 ;;      Temps:          0       0       0       0       0       0
  2245 ;;      Totals:         2       0       0       0       0       0
  2246 ;;Total ram usage:        2 bytes
  2247 ;; Hardware stack levels used:    1
  2248 ;; This function calls:
  2249 ;;		Nothing
  2250 ;; This function is called by:
  2251 ;;		_open
  2252 ;;		_close
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           
  2257                           ;psect for function _set_BIT1
  2258  011D                     _set_BIT1:	
  2259                           
  2260                           ;incstack = 0
  2261                           ; Regs used in _set_BIT1: []
  2262  011D  1C70               	btfss	set_BIT1@open_close,0
  2263  011E  2922               	goto	u930
  2264  011F  0020               	movlb	0	; select bank0
  2265  0120  150C               	bsf	12,2	;volatile
  2266  0121  0008               	return
  2267  0122                     u930:	
  2268  0122  0020               	movlb	0	; select bank0
  2269  0123  110C               	bcf	12,2	;volatile
  2270  0124  0008               	return
  2271  0125                     __end_of_set_BIT1:	
  2272                           
  2273                           	psect	text16
  2274  0115                     __ptext16:	
  2275 ;; *************** function _set_BIT0 *****************
  2276 ;; Defined at:
  2277 ;;		line 82 in file "main.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;  open_close      2    0[COMMON] int 
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;		None
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  1    wreg      void 
  2284 ;; Registers used:
  2285 ;;		None
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2291 ;;      Params:         2       0       0       0       0       0
  2292 ;;      Locals:         0       0       0       0       0       0
  2293 ;;      Temps:          0       0       0       0       0       0
  2294 ;;      Totals:         2       0       0       0       0       0
  2295 ;;Total ram usage:        2 bytes
  2296 ;; Hardware stack levels used:    1
  2297 ;; This function calls:
  2298 ;;		Nothing
  2299 ;; This function is called by:
  2300 ;;		_open
  2301 ;;		_close
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           
  2306                           ;psect for function _set_BIT0
  2307  0115                     _set_BIT0:	
  2308                           
  2309                           ;incstack = 0
  2310                           ; Regs used in _set_BIT0: []
  2311  0115  1C70               	btfss	set_BIT0@open_close,0
  2312  0116  291A               	goto	u910
  2313  0117  0020               	movlb	0	; select bank0
  2314  0118  158C               	bsf	12,3	;volatile
  2315  0119  0008               	return
  2316  011A                     u910:	
  2317  011A  0020               	movlb	0	; select bank0
  2318  011B  118C               	bcf	12,3	;volatile
  2319  011C  0008               	return
  2320  011D                     __end_of_set_BIT0:	
  2321                           
  2322                           	psect	text17
  2323  01C0                     __ptext17:	
  2324 ;; *************** function ___wmul *****************
  2325 ;; Defined at:
  2326 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;  multiplier      2    0[COMMON] unsigned int 
  2329 ;;  multiplicand    2    2[COMMON] unsigned int 
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;  product         2    4[COMMON] unsigned int 
  2332 ;; Return value:  Size  Location     Type
  2333 ;;                  2    0[COMMON] unsigned int 
  2334 ;; Registers used:
  2335 ;;		wreg, status,2, status,0
  2336 ;; Tracked objects:
  2337 ;;		On entry : 0/0
  2338 ;;		On exit  : 0/0
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2341 ;;      Params:         4       0       0       0       0       0
  2342 ;;      Locals:         2       0       0       0       0       0
  2343 ;;      Temps:          0       0       0       0       0       0
  2344 ;;      Totals:         6       0       0       0       0       0
  2345 ;;Total ram usage:        6 bytes
  2346 ;; Hardware stack levels used:    1
  2347 ;; This function calls:
  2348 ;;		Nothing
  2349 ;; This function is called by:
  2350 ;;		_disp
  2351 ;; This function uses a non-reentrant model
  2352 ;;
  2353                           
  2354                           
  2355                           ;psect for function ___wmul
  2356  01C0                     ___wmul:	
  2357                           
  2358                           ;incstack = 0
  2359                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2360  01C0  01F4               	clrf	___wmul@product
  2361  01C1  01F5               	clrf	___wmul@product+1
  2362  01C2                     l1093:	
  2363  01C2  1C70               	btfss	___wmul@multiplier,0
  2364  01C3  29C8               	goto	l231
  2365  01C4  0872               	movf	___wmul@multiplicand,w
  2366  01C5  07F4               	addwf	___wmul@product,f
  2367  01C6  0873               	movf	___wmul@multiplicand+1,w
  2368  01C7  3DF5               	addwfc	___wmul@product+1,f
  2369  01C8                     l231:	
  2370  01C8  3001               	movlw	1
  2371  01C9                     u1255:	
  2372  01C9  35F2               	lslf	___wmul@multiplicand,f
  2373  01CA  0DF3               	rlf	___wmul@multiplicand+1,f
  2374  01CB  0B89               	decfsz	9,f
  2375  01CC  29C9               	goto	u1255
  2376  01CD  3001               	movlw	1
  2377  01CE                     u1265:	
  2378  01CE  36F1               	lsrf	___wmul@multiplier+1,f
  2379  01CF  0CF0               	rrf	___wmul@multiplier,f
  2380  01D0  0B89               	decfsz	9,f
  2381  01D1  29CE               	goto	u1265
  2382  01D2  0870               	movf	___wmul@multiplier,w
  2383  01D3  0471               	iorwf	___wmul@multiplier+1,w
  2384  01D4  1D03               	btfss	3,2
  2385  01D5  29C2               	goto	l1093
  2386  01D6  0875               	movf	___wmul@product+1,w
  2387  01D7  00F1               	movwf	?___wmul+1
  2388  01D8  0874               	movf	___wmul@product,w
  2389  01D9  00F0               	movwf	?___wmul
  2390  01DA  0008               	return
  2391  01DB                     __end_of___wmul:	
  2392                           
  2393                           	psect	text18
  2394  03B4                     __ptext18:	
  2395 ;; *************** function ___fttol *****************
  2396 ;; Defined at:
  2397 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;  f1              3   32[BANK0 ] float 
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;  lval            4   41[BANK0 ] unsigned long 
  2402 ;;  exp1            1   45[BANK0 ] unsigned char 
  2403 ;;  sign1           1   40[BANK0 ] unsigned char 
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  4   32[BANK0 ] long 
  2406 ;; Registers used:
  2407 ;;		wreg, status,2, status,0
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2413 ;;      Params:         0       4       0       0       0       0
  2414 ;;      Locals:         0       6       0       0       0       0
  2415 ;;      Temps:          0       4       0       0       0       0
  2416 ;;      Totals:         0      14       0       0       0       0
  2417 ;;Total ram usage:       14 bytes
  2418 ;; Hardware stack levels used:    1
  2419 ;; This function calls:
  2420 ;;		Nothing
  2421 ;; This function is called by:
  2422 ;;		_disp
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           
  2426                           
  2427                           ;psect for function ___fttol
  2428  03B4                     ___fttol:	
  2429                           
  2430                           ;incstack = 0
  2431                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2432  03B4  0020               	movlb	0	; select bank0
  2433  03B5  0840               	movf	___fttol@f1,w
  2434  03B6  00C4               	movwf	??___fttol
  2435  03B7  0841               	movf	___fttol@f1+1,w
  2436  03B8  00C5               	movwf	??___fttol+1
  2437  03B9  0842               	movf	___fttol@f1+2,w
  2438  03BA  00C6               	movwf	??___fttol+2
  2439  03BB  1003               	clrc
  2440  03BC  0D45               	rlf	??___fttol+1,w
  2441  03BD  0D46               	rlf	??___fttol+2,w
  2442  03BE  00C7               	movwf	??___fttol+3
  2443  03BF  0847               	movf	??___fttol+3,w
  2444  03C0  00CD               	movwf	___fttol@exp1
  2445  03C1  084D               	movf	___fttol@exp1,w
  2446  03C2  1D03               	btfss	3,2
  2447  03C3  2BCD               	goto	l1273
  2448  03C4  3000               	movlw	0
  2449  03C5  00C3               	movwf	?___fttol+3
  2450  03C6  3000               	movlw	0
  2451  03C7  00C2               	movwf	?___fttol+2
  2452  03C8  3000               	movlw	0
  2453  03C9  00C1               	movwf	?___fttol+1
  2454  03CA  3000               	movlw	0
  2455  03CB  00C0               	movwf	?___fttol
  2456  03CC  0008               	return
  2457  03CD                     l1273:	
  2458  03CD  0840               	movf	___fttol@f1,w
  2459  03CE  00C4               	movwf	??___fttol
  2460  03CF  0841               	movf	___fttol@f1+1,w
  2461  03D0  00C5               	movwf	??___fttol+1
  2462  03D1  0842               	movf	___fttol@f1+2,w
  2463  03D2  00C6               	movwf	??___fttol+2
  2464  03D3  3017               	movlw	23
  2465  03D4                     u1625:	
  2466  03D4  36C6               	lsrf	??___fttol+2,f
  2467  03D5  0CC5               	rrf	??___fttol+1,f
  2468  03D6  0CC4               	rrf	??___fttol,f
  2469  03D7  0B89               	decfsz	9,f
  2470  03D8  2BD4               	goto	u1625
  2471  03D9  0844               	movf	??___fttol,w
  2472  03DA  00C7               	movwf	??___fttol+3
  2473  03DB  0847               	movf	??___fttol+3,w
  2474  03DC  00C8               	movwf	___fttol@sign1
  2475  03DD  17C1               	bsf	___fttol@f1+1,7
  2476  03DE  30FF               	movlw	255
  2477  03DF  05C0               	andwf	___fttol@f1,f
  2478  03E0  30FF               	movlw	255
  2479  03E1  05C1               	andwf	___fttol@f1+1,f
  2480  03E2  3000               	movlw	0
  2481  03E3  05C2               	andwf	___fttol@f1+2,f
  2482  03E4  0840               	movf	___fttol@f1,w
  2483  03E5  00C9               	movwf	___fttol@lval
  2484  03E6  0841               	movf	___fttol@f1+1,w
  2485  03E7  00CA               	movwf	___fttol@lval+1
  2486  03E8  0842               	movf	___fttol@f1+2,w
  2487  03E9  00CB               	movwf	___fttol@lval+2
  2488  03EA  01CC               	clrf	___fttol@lval+3
  2489  03EB  308E               	movlw	142
  2490  03EC  02CD               	subwf	___fttol@exp1,f
  2491  03ED  1FCD               	btfss	___fttol@exp1,7
  2492  03EE  2C0B               	goto	l1293
  2493  03EF  084D               	movf	___fttol@exp1,w
  2494  03F0  3A80               	xorlw	128
  2495  03F1  3E8F               	addlw	143
  2496  03F2  1803               	skipnc
  2497  03F3  2BFD               	goto	l1291
  2498  03F4  3000               	movlw	0
  2499  03F5  00C3               	movwf	?___fttol+3
  2500  03F6  3000               	movlw	0
  2501  03F7  00C2               	movwf	?___fttol+2
  2502  03F8  3000               	movlw	0
  2503  03F9  00C1               	movwf	?___fttol+1
  2504  03FA  3000               	movlw	0
  2505  03FB  00C0               	movwf	?___fttol
  2506  03FC  0008               	return
  2507  03FD                     l1291:	
  2508  03FD  3001               	movlw	1
  2509  03FE                     u1655:	
  2510  03FE  36CC               	lsrf	___fttol@lval+3,f
  2511  03FF  0CCB               	rrf	___fttol@lval+2,f
  2512  0400  0CCA               	rrf	___fttol@lval+1,f
  2513  0401  0CC9               	rrf	___fttol@lval,f
  2514  0402  0B89               	decfsz	9,f
  2515  0403  2BFE               	goto	u1655
  2516  0404  3001               	movlw	1
  2517  0405  00C4               	movwf	??___fttol
  2518  0406  0844               	movf	??___fttol,w
  2519  0407  07CD               	addwf	___fttol@exp1,f
  2520  0408  1903               	btfsc	3,2
  2521  0409  2C24               	goto	l1301
  2522  040A  2BFD               	goto	l1291
  2523  040B                     l1293:	
  2524  040B  3018               	movlw	24
  2525  040C  024D               	subwf	___fttol@exp1,w
  2526  040D  1C03               	skipc
  2527  040E  2C21               	goto	l483
  2528  040F  3000               	movlw	0
  2529  0410  00C3               	movwf	?___fttol+3
  2530  0411  3000               	movlw	0
  2531  0412  00C2               	movwf	?___fttol+2
  2532  0413  3000               	movlw	0
  2533  0414  00C1               	movwf	?___fttol+1
  2534  0415  3000               	movlw	0
  2535  0416  00C0               	movwf	?___fttol
  2536  0417  0008               	return
  2537  0418                     l1299:	
  2538  0418  3001               	movlw	1
  2539  0419                     u1685:	
  2540  0419  35C9               	lslf	___fttol@lval,f
  2541  041A  0DCA               	rlf	___fttol@lval+1,f
  2542  041B  0DCB               	rlf	___fttol@lval+2,f
  2543  041C  0DCC               	rlf	___fttol@lval+3,f
  2544  041D  0B89               	decfsz	9,f
  2545  041E  2C19               	goto	u1685
  2546  041F  3001               	movlw	1
  2547  0420  02CD               	subwf	___fttol@exp1,f
  2548  0421                     l483:	
  2549  0421  084D               	movf	___fttol@exp1,w
  2550  0422  1D03               	btfss	3,2
  2551  0423  2C18               	goto	l1299
  2552  0424                     l1301:	
  2553  0424  0848               	movf	___fttol@sign1,w
  2554  0425  1903               	btfsc	3,2
  2555  0426  2C32               	goto	l1305
  2556  0427  09C9               	comf	___fttol@lval,f
  2557  0428  09CA               	comf	___fttol@lval+1,f
  2558  0429  09CB               	comf	___fttol@lval+2,f
  2559  042A  09CC               	comf	___fttol@lval+3,f
  2560  042B  0AC9               	incf	___fttol@lval,f
  2561  042C  1903               	skipnz
  2562  042D  0ACA               	incf	___fttol@lval+1,f
  2563  042E  1903               	skipnz
  2564  042F  0ACB               	incf	___fttol@lval+2,f
  2565  0430  1903               	skipnz
  2566  0431  0ACC               	incf	___fttol@lval+3,f
  2567  0432                     l1305:	
  2568  0432  084C               	movf	___fttol@lval+3,w
  2569  0433  00C3               	movwf	?___fttol+3
  2570  0434  084B               	movf	___fttol@lval+2,w
  2571  0435  00C2               	movwf	?___fttol+2
  2572  0436  084A               	movf	___fttol@lval+1,w
  2573  0437  00C1               	movwf	?___fttol+1
  2574  0438  0849               	movf	___fttol@lval,w
  2575  0439  00C0               	movwf	?___fttol
  2576  043A  0008               	return
  2577  043B                     __end_of___fttol:	
  2578                           
  2579                           	psect	text19
  2580  0275                     __ptext19:	
  2581 ;; *************** function ___ftge *****************
  2582 ;; Defined at:
  2583 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;  ff1             3    0[COMMON] float 
  2586 ;;  ff2             3    3[COMMON] float 
  2587 ;; Auto vars:     Size  Location     Type
  2588 ;;		None
  2589 ;; Return value:  Size  Location     Type
  2590 ;;		None               void
  2591 ;; Registers used:
  2592 ;;		wreg, status,2, status,0
  2593 ;; Tracked objects:
  2594 ;;		On entry : 0/0
  2595 ;;		On exit  : 0/0
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2598 ;;      Params:         6       0       0       0       0       0
  2599 ;;      Locals:         0       0       0       0       0       0
  2600 ;;      Temps:          3       0       0       0       0       0
  2601 ;;      Totals:         9       0       0       0       0       0
  2602 ;;Total ram usage:        9 bytes
  2603 ;; Hardware stack levels used:    1
  2604 ;; This function calls:
  2605 ;;		Nothing
  2606 ;; This function is called by:
  2607 ;;		_disp
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611                           
  2612                           ;psect for function ___ftge
  2613  0275                     ___ftge:	
  2614                           
  2615                           ;incstack = 0
  2616                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  2617  0275  1FF2               	btfss	___ftge@ff1+2,7
  2618  0276  2A8B               	goto	l1201
  2619  0277  0970               	comf	___ftge@ff1,w
  2620  0278  00F6               	movwf	??___ftge
  2621  0279  0971               	comf	___ftge@ff1+1,w
  2622  027A  00F7               	movwf	??___ftge+1
  2623  027B  0972               	comf	___ftge@ff1+2,w
  2624  027C  00F8               	movwf	??___ftge+2
  2625  027D  0AF6               	incf	??___ftge,f
  2626  027E  1903               	skipnz
  2627  027F  0AF7               	incf	??___ftge+1,f
  2628  0280  1903               	skipnz
  2629  0281  0AF8               	incf	??___ftge+2,f
  2630  0282  3000               	movlw	0
  2631  0283  0776               	addwf	??___ftge,w
  2632  0284  00F0               	movwf	___ftge@ff1
  2633  0285  3000               	movlw	0
  2634  0286  3D77               	addwfc	??___ftge+1,w
  2635  0287  00F1               	movwf	___ftge@ff1+1
  2636  0288  3080               	movlw	128
  2637  0289  3D78               	addwfc	??___ftge+2,w
  2638  028A  00F2               	movwf	___ftge@ff1+2
  2639  028B                     l1201:	
  2640  028B  1FF5               	btfss	___ftge@ff2+2,7
  2641  028C  2AA1               	goto	l1205
  2642  028D  0973               	comf	___ftge@ff2,w
  2643  028E  00F6               	movwf	??___ftge
  2644  028F  0974               	comf	___ftge@ff2+1,w
  2645  0290  00F7               	movwf	??___ftge+1
  2646  0291  0975               	comf	___ftge@ff2+2,w
  2647  0292  00F8               	movwf	??___ftge+2
  2648  0293  0AF6               	incf	??___ftge,f
  2649  0294  1903               	skipnz
  2650  0295  0AF7               	incf	??___ftge+1,f
  2651  0296  1903               	skipnz
  2652  0297  0AF8               	incf	??___ftge+2,f
  2653  0298  3000               	movlw	0
  2654  0299  0776               	addwf	??___ftge,w
  2655  029A  00F3               	movwf	___ftge@ff2
  2656  029B  3000               	movlw	0
  2657  029C  3D77               	addwfc	??___ftge+1,w
  2658  029D  00F4               	movwf	___ftge@ff2+1
  2659  029E  3080               	movlw	128
  2660  029F  3D78               	addwfc	??___ftge+2,w
  2661  02A0  00F5               	movwf	___ftge@ff2+2
  2662  02A1                     l1205:	
  2663  02A1  3080               	movlw	128
  2664  02A2  06F2               	xorwf	___ftge@ff1+2,f
  2665  02A3  3080               	movlw	128
  2666  02A4  06F5               	xorwf	___ftge@ff2+2,f
  2667  02A5  0875               	movf	___ftge@ff2+2,w
  2668  02A6  0272               	subwf	___ftge@ff1+2,w
  2669  02A7  1D03               	skipz
  2670  02A8  0008               	return
  2671  02A9  0874               	movf	___ftge@ff2+1,w
  2672  02AA  0271               	subwf	___ftge@ff1+1,w
  2673  02AB  1D03               	skipz
  2674  02AC  0008               	return
  2675  02AD  0873               	movf	___ftge@ff2,w
  2676  02AE  0270               	subwf	___ftge@ff1,w
  2677  02AF  0008               	return
  2678  02B0                     __end_of___ftge:	
  2679                           
  2680                           	psect	text20
  2681  02B0                     __ptext20:	
  2682 ;; *************** function ___awmod *****************
  2683 ;; Defined at:
  2684 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;  divisor         2   46[BANK0 ] int 
  2687 ;;  dividend        2   48[BANK0 ] int 
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;  sign            1   52[BANK0 ] unsigned char 
  2690 ;;  counter         1   51[BANK0 ] unsigned char 
  2691 ;; Return value:  Size  Location     Type
  2692 ;;                  2   46[BANK0 ] int 
  2693 ;; Registers used:
  2694 ;;		wreg, status,2, status,0
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2700 ;;      Params:         0       4       0       0       0       0
  2701 ;;      Locals:         0       2       0       0       0       0
  2702 ;;      Temps:          0       1       0       0       0       0
  2703 ;;      Totals:         0       7       0       0       0       0
  2704 ;;Total ram usage:        7 bytes
  2705 ;; Hardware stack levels used:    1
  2706 ;; This function calls:
  2707 ;;		Nothing
  2708 ;; This function is called by:
  2709 ;;		_disp
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712                           
  2713                           
  2714                           ;psect for function ___awmod
  2715  02B0                     ___awmod:	
  2716                           
  2717                           ;incstack = 0
  2718                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2719  02B0  0020               	movlb	0	; select bank0
  2720  02B1  01D4               	clrf	___awmod@sign
  2721  02B2  1FD1               	btfss	___awmod@dividend+1,7
  2722  02B3  2ABB               	goto	l1113
  2723  02B4  09D0               	comf	___awmod@dividend,f
  2724  02B5  09D1               	comf	___awmod@dividend+1,f
  2725  02B6  0AD0               	incf	___awmod@dividend,f
  2726  02B7  1903               	skipnz
  2727  02B8  0AD1               	incf	___awmod@dividend+1,f
  2728  02B9  01D4               	clrf	___awmod@sign
  2729  02BA  0AD4               	incf	___awmod@sign,f
  2730  02BB                     l1113:	
  2731  02BB  1FCF               	btfss	___awmod@divisor+1,7
  2732  02BC  2AC2               	goto	l1117
  2733  02BD  09CE               	comf	___awmod@divisor,f
  2734  02BE  09CF               	comf	___awmod@divisor+1,f
  2735  02BF  0ACE               	incf	___awmod@divisor,f
  2736  02C0  1903               	skipnz
  2737  02C1  0ACF               	incf	___awmod@divisor+1,f
  2738  02C2                     l1117:	
  2739  02C2  084E               	movf	___awmod@divisor,w
  2740  02C3  044F               	iorwf	___awmod@divisor+1,w
  2741  02C4  1903               	btfsc	3,2
  2742  02C5  2AE9               	goto	l1135
  2743  02C6  01D3               	clrf	___awmod@counter
  2744  02C7  0AD3               	incf	___awmod@counter,f
  2745  02C8                     l1125:	
  2746  02C8  1BCF               	btfsc	___awmod@divisor+1,7
  2747  02C9  2AD4               	goto	l1127
  2748  02CA  3001               	movlw	1
  2749  02CB                     u1315:	
  2750  02CB  35CE               	lslf	___awmod@divisor,f
  2751  02CC  0DCF               	rlf	___awmod@divisor+1,f
  2752  02CD  0B89               	decfsz	9,f
  2753  02CE  2ACB               	goto	u1315
  2754  02CF  3001               	movlw	1
  2755  02D0  00D2               	movwf	??___awmod
  2756  02D1  0852               	movf	??___awmod,w
  2757  02D2  07D3               	addwf	___awmod@counter,f
  2758  02D3  2AC8               	goto	l1125
  2759  02D4                     l1127:	
  2760  02D4  084F               	movf	___awmod@divisor+1,w
  2761  02D5  0251               	subwf	___awmod@dividend+1,w
  2762  02D6  1D03               	skipz
  2763  02D7  2ADA               	goto	u1335
  2764  02D8  084E               	movf	___awmod@divisor,w
  2765  02D9  0250               	subwf	___awmod@dividend,w
  2766  02DA                     u1335:	
  2767  02DA  1C03               	skipc
  2768  02DB  2AE0               	goto	l1131
  2769  02DC  084E               	movf	___awmod@divisor,w
  2770  02DD  02D0               	subwf	___awmod@dividend,f
  2771  02DE  084F               	movf	___awmod@divisor+1,w
  2772  02DF  3BD1               	subwfb	___awmod@dividend+1,f
  2773  02E0                     l1131:	
  2774  02E0  3001               	movlw	1
  2775  02E1                     u1345:	
  2776  02E1  36CF               	lsrf	___awmod@divisor+1,f
  2777  02E2  0CCE               	rrf	___awmod@divisor,f
  2778  02E3  0B89               	decfsz	9,f
  2779  02E4  2AE1               	goto	u1345
  2780  02E5  3001               	movlw	1
  2781  02E6  02D3               	subwf	___awmod@counter,f
  2782  02E7  1D03               	btfss	3,2
  2783  02E8  2AD4               	goto	l1127
  2784  02E9                     l1135:	
  2785  02E9  0854               	movf	___awmod@sign,w
  2786  02EA  1903               	btfsc	3,2
  2787  02EB  2AF1               	goto	l1139
  2788  02EC  09D0               	comf	___awmod@dividend,f
  2789  02ED  09D1               	comf	___awmod@dividend+1,f
  2790  02EE  0AD0               	incf	___awmod@dividend,f
  2791  02EF  1903               	skipnz
  2792  02F0  0AD1               	incf	___awmod@dividend+1,f
  2793  02F1                     l1139:	
  2794  02F1  0851               	movf	___awmod@dividend+1,w
  2795  02F2  00CF               	movwf	?___awmod+1
  2796  02F3  0850               	movf	___awmod@dividend,w
  2797  02F4  00CE               	movwf	?___awmod
  2798  02F5  0008               	return
  2799  02F6                     __end_of___awmod:	
  2800                           
  2801                           	psect	text21
  2802  0240                     __ptext21:	
  2803 ;; *************** function _da_conv *****************
  2804 ;; Defined at:
  2805 ;;		line 121 in file "main.c"
  2806 ;; Parameters:    Size  Location     Type
  2807 ;;  digital         2   32[BANK0 ] int 
  2808 ;; Auto vars:     Size  Location     Type
  2809 ;;  analog          3   35[BANK0 ] int 
  2810 ;; Return value:  Size  Location     Type
  2811 ;;                  3   32[BANK0 ] int 
  2812 ;; Registers used:
  2813 ;;		wreg, status,2, status,0, pclath, cstack
  2814 ;; Tracked objects:
  2815 ;;		On entry : 0/0
  2816 ;;		On exit  : 0/0
  2817 ;;		Unchanged: 0/0
  2818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2819 ;;      Params:         0       3       0       0       0       0
  2820 ;;      Locals:         0       3       0       0       0       0
  2821 ;;      Temps:          0       0       0       0       0       0
  2822 ;;      Totals:         0       6       0       0       0       0
  2823 ;;Total ram usage:        6 bytes
  2824 ;; Hardware stack levels used:    1
  2825 ;; Hardware stack levels required when called:    2
  2826 ;; This function calls:
  2827 ;;		___awtoft
  2828 ;;		___ftdiv
  2829 ;;		___ftmul
  2830 ;; This function is called by:
  2831 ;;		_loop
  2832 ;; This function uses a non-reentrant model
  2833 ;;
  2834                           
  2835                           
  2836                           ;psect for function _da_conv
  2837  0240                     _da_conv:	
  2838                           
  2839                           ;main.c: 122: double analog;
  2840                           ;main.c: 123: analog = digital * 5.0 * 1.0 / 1024;
  2841                           
  2842                           ;incstack = 0
  2843                           ; Regs used in _da_conv: [wreg+status,2+status,0+pclath+cstack]
  2844  0240  3000               	movlw	0
  2845  0241  0020               	movlb	0	; select bank0
  2846  0242  00B0               	movwf	___ftdiv@f2
  2847  0243  3080               	movlw	128
  2848  0244  00B1               	movwf	___ftdiv@f2+1
  2849  0245  3044               	movlw	68
  2850  0246  00B2               	movwf	___ftdiv@f2+2
  2851  0247  3000               	movlw	0
  2852  0248  00A0               	movwf	___ftmul@f1
  2853  0249  30A0               	movlw	160
  2854  024A  00A1               	movwf	___ftmul@f1+1
  2855  024B  3040               	movlw	64
  2856  024C  00A2               	movwf	___ftmul@f1+2
  2857  024D  0841               	movf	da_conv@digital+1,w
  2858  024E  00F9               	movwf	___awtoft@c+1
  2859  024F  0840               	movf	da_conv@digital,w
  2860  0250  00F8               	movwf	___awtoft@c
  2861  0251  3181  21DB  3182   	fcall	___awtoft
  2862  0254  0878               	movf	?___awtoft,w
  2863  0255  0020               	movlb	0	; select bank0
  2864  0256  00A3               	movwf	___ftmul@f2
  2865  0257  0879               	movf	?___awtoft+1,w
  2866  0258  00A4               	movwf	___ftmul@f2+1
  2867  0259  087A               	movf	?___awtoft+2,w
  2868  025A  00A5               	movwf	___ftmul@f2+2
  2869  025B  3185  258C  3182   	fcall	___ftmul
  2870  025E  0020               	movlb	0	; select bank0
  2871  025F  0820               	movf	?___ftmul,w
  2872  0260  00B3               	movwf	___ftdiv@f1
  2873  0261  0821               	movf	?___ftmul+1,w
  2874  0262  00B4               	movwf	___ftdiv@f1+1
  2875  0263  0822               	movf	?___ftmul+2,w
  2876  0264  00B5               	movwf	___ftdiv@f1+2
  2877  0265  3184  24E3         	fcall	___ftdiv
  2878  0267  0020               	movlb	0	; select bank0
  2879  0268  0830               	movf	?___ftdiv,w
  2880  0269  00C3               	movwf	da_conv@analog
  2881  026A  0831               	movf	?___ftdiv+1,w
  2882  026B  00C4               	movwf	da_conv@analog+1
  2883  026C  0832               	movf	?___ftdiv+2,w
  2884  026D  00C5               	movwf	da_conv@analog+2
  2885                           
  2886                           ;main.c: 124: return analog;
  2887  026E  0843               	movf	da_conv@analog,w
  2888  026F  00C0               	movwf	?_da_conv
  2889  0270  0844               	movf	da_conv@analog+1,w
  2890  0271  00C1               	movwf	?_da_conv+1
  2891  0272  0845               	movf	da_conv@analog+2,w
  2892  0273  00C2               	movwf	?_da_conv+2
  2893  0274  0008               	return
  2894  0275                     __end_of_da_conv:	
  2895                           
  2896                           	psect	text22
  2897  058C                     __ptext22:	
  2898 ;; *************** function ___ftmul *****************
  2899 ;; Defined at:
  2900 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;  f1              3    0[BANK0 ] float 
  2903 ;;  f2              3    3[BANK0 ] float 
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  2906 ;;  sign            1   15[BANK0 ] unsigned char 
  2907 ;;  cntr            1   14[BANK0 ] unsigned char 
  2908 ;;  exp             1   10[BANK0 ] unsigned char 
  2909 ;; Return value:  Size  Location     Type
  2910 ;;                  3    0[BANK0 ] float 
  2911 ;; Registers used:
  2912 ;;		wreg, status,2, status,0, pclath, cstack
  2913 ;; Tracked objects:
  2914 ;;		On entry : 0/0
  2915 ;;		On exit  : 0/0
  2916 ;;		Unchanged: 0/0
  2917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2918 ;;      Params:         0       6       0       0       0       0
  2919 ;;      Locals:         0       6       0       0       0       0
  2920 ;;      Temps:          0       4       0       0       0       0
  2921 ;;      Totals:         0      16       0       0       0       0
  2922 ;;Total ram usage:       16 bytes
  2923 ;; Hardware stack levels used:    1
  2924 ;; Hardware stack levels required when called:    1
  2925 ;; This function calls:
  2926 ;;		___ftpack
  2927 ;; This function is called by:
  2928 ;;		_da_conv
  2929 ;;		_disp
  2930 ;; This function uses a non-reentrant model
  2931 ;;
  2932                           
  2933                           
  2934                           ;psect for function ___ftmul
  2935  058C                     ___ftmul:	
  2936                           
  2937                           ;incstack = 0
  2938                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2939  058C  0020               	movlb	0	; select bank0
  2940  058D  0820               	movf	___ftmul@f1,w
  2941  058E  00A6               	movwf	??___ftmul
  2942  058F  0821               	movf	___ftmul@f1+1,w
  2943  0590  00A7               	movwf	??___ftmul+1
  2944  0591  0822               	movf	___ftmul@f1+2,w
  2945  0592  00A8               	movwf	??___ftmul+2
  2946  0593  1003               	clrc
  2947  0594  0D27               	rlf	??___ftmul+1,w
  2948  0595  0D28               	rlf	??___ftmul+2,w
  2949  0596  00A9               	movwf	??___ftmul+3
  2950  0597  0829               	movf	??___ftmul+3,w
  2951  0598  00AA               	movwf	___ftmul@exp
  2952  0599  082A               	movf	___ftmul@exp,w
  2953  059A  1D03               	btfss	3,2
  2954  059B  2DA3               	goto	l1223
  2955  059C  3000               	movlw	0
  2956  059D  00A0               	movwf	?___ftmul
  2957  059E  3000               	movlw	0
  2958  059F  00A1               	movwf	?___ftmul+1
  2959  05A0  3000               	movlw	0
  2960  05A1  00A2               	movwf	?___ftmul+2
  2961  05A2  0008               	return
  2962  05A3                     l1223:	
  2963  05A3  0823               	movf	___ftmul@f2,w
  2964  05A4  00A6               	movwf	??___ftmul
  2965  05A5  0824               	movf	___ftmul@f2+1,w
  2966  05A6  00A7               	movwf	??___ftmul+1
  2967  05A7  0825               	movf	___ftmul@f2+2,w
  2968  05A8  00A8               	movwf	??___ftmul+2
  2969  05A9  1003               	clrc
  2970  05AA  0D27               	rlf	??___ftmul+1,w
  2971  05AB  0D28               	rlf	??___ftmul+2,w
  2972  05AC  00A9               	movwf	??___ftmul+3
  2973  05AD  0829               	movf	??___ftmul+3,w
  2974  05AE  00AF               	movwf	___ftmul@sign
  2975  05AF  082F               	movf	___ftmul@sign,w
  2976  05B0  1D03               	btfss	3,2
  2977  05B1  2DB9               	goto	l1229
  2978  05B2  3000               	movlw	0
  2979  05B3  00A0               	movwf	?___ftmul
  2980  05B4  3000               	movlw	0
  2981  05B5  00A1               	movwf	?___ftmul+1
  2982  05B6  3000               	movlw	0
  2983  05B7  00A2               	movwf	?___ftmul+2
  2984  05B8  0008               	return
  2985  05B9                     l1229:	
  2986  05B9  082F               	movf	___ftmul@sign,w
  2987  05BA  3E7B               	addlw	123
  2988  05BB  00A6               	movwf	??___ftmul
  2989  05BC  0826               	movf	??___ftmul,w
  2990  05BD  07AA               	addwf	___ftmul@exp,f
  2991  05BE  0820               	movf	___ftmul@f1,w
  2992  05BF  00A6               	movwf	??___ftmul
  2993  05C0  0821               	movf	___ftmul@f1+1,w
  2994  05C1  00A7               	movwf	??___ftmul+1
  2995  05C2  0822               	movf	___ftmul@f1+2,w
  2996  05C3  00A8               	movwf	??___ftmul+2
  2997  05C4  3010               	movlw	16
  2998  05C5                     u1515:	
  2999  05C5  36A8               	lsrf	??___ftmul+2,f
  3000  05C6  0CA7               	rrf	??___ftmul+1,f
  3001  05C7  0CA6               	rrf	??___ftmul,f
  3002  05C8  0B89               	decfsz	9,f
  3003  05C9  2DC5               	goto	u1515
  3004  05CA  0826               	movf	??___ftmul,w
  3005  05CB  00A9               	movwf	??___ftmul+3
  3006  05CC  0829               	movf	??___ftmul+3,w
  3007  05CD  00AF               	movwf	___ftmul@sign
  3008  05CE  0823               	movf	___ftmul@f2,w
  3009  05CF  00A6               	movwf	??___ftmul
  3010  05D0  0824               	movf	___ftmul@f2+1,w
  3011  05D1  00A7               	movwf	??___ftmul+1
  3012  05D2  0825               	movf	___ftmul@f2+2,w
  3013  05D3  00A8               	movwf	??___ftmul+2
  3014  05D4  3010               	movlw	16
  3015  05D5                     u1525:	
  3016  05D5  36A8               	lsrf	??___ftmul+2,f
  3017  05D6  0CA7               	rrf	??___ftmul+1,f
  3018  05D7  0CA6               	rrf	??___ftmul,f
  3019  05D8  0B89               	decfsz	9,f
  3020  05D9  2DD5               	goto	u1525
  3021  05DA  0826               	movf	??___ftmul,w
  3022  05DB  00A9               	movwf	??___ftmul+3
  3023  05DC  0829               	movf	??___ftmul+3,w
  3024  05DD  06AF               	xorwf	___ftmul@sign,f
  3025  05DE  3080               	movlw	128
  3026  05DF  00A6               	movwf	??___ftmul
  3027  05E0  0826               	movf	??___ftmul,w
  3028  05E1  05AF               	andwf	___ftmul@sign,f
  3029  05E2  17A1               	bsf	___ftmul@f1+1,7
  3030  05E3  17A4               	bsf	___ftmul@f2+1,7
  3031  05E4  30FF               	movlw	255
  3032  05E5  05A3               	andwf	___ftmul@f2,f
  3033  05E6  30FF               	movlw	255
  3034  05E7  05A4               	andwf	___ftmul@f2+1,f
  3035  05E8  3000               	movlw	0
  3036  05E9  05A5               	andwf	___ftmul@f2+2,f
  3037  05EA  3000               	movlw	0
  3038  05EB  00AB               	movwf	___ftmul@f3_as_product
  3039  05EC  3000               	movlw	0
  3040  05ED  00AC               	movwf	___ftmul@f3_as_product+1
  3041  05EE  3000               	movlw	0
  3042  05EF  00AD               	movwf	___ftmul@f3_as_product+2
  3043  05F0  3007               	movlw	7
  3044  05F1  00A6               	movwf	??___ftmul
  3045  05F2  0826               	movf	??___ftmul,w
  3046  05F3  00AE               	movwf	___ftmul@cntr
  3047  05F4                     l1241:	
  3048  05F4  1C20               	btfss	___ftmul@f1,0
  3049  05F5  2DFC               	goto	l1245
  3050  05F6  0823               	movf	___ftmul@f2,w
  3051  05F7  07AB               	addwf	___ftmul@f3_as_product,f
  3052  05F8  0824               	movf	___ftmul@f2+1,w
  3053  05F9  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  3054  05FA  0825               	movf	___ftmul@f2+2,w
  3055  05FB  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  3056  05FC                     l1245:	
  3057  05FC  3001               	movlw	1
  3058  05FD                     u1545:	
  3059  05FD  36A2               	lsrf	___ftmul@f1+2,f
  3060  05FE  0CA1               	rrf	___ftmul@f1+1,f
  3061  05FF  0CA0               	rrf	___ftmul@f1,f
  3062  0600  0B89               	decfsz	9,f
  3063  0601  2DFD               	goto	u1545
  3064  0602  3001               	movlw	1
  3065  0603                     u1555:	
  3066  0603  35A3               	lslf	___ftmul@f2,f
  3067  0604  0DA4               	rlf	___ftmul@f2+1,f
  3068  0605  0DA5               	rlf	___ftmul@f2+2,f
  3069  0606  0B89               	decfsz	9,f
  3070  0607  2E03               	goto	u1555
  3071  0608  3001               	movlw	1
  3072  0609  02AE               	subwf	___ftmul@cntr,f
  3073  060A  1D03               	btfss	3,2
  3074  060B  2DF4               	goto	l1241
  3075  060C  3009               	movlw	9
  3076  060D  00A6               	movwf	??___ftmul
  3077  060E  0826               	movf	??___ftmul,w
  3078  060F  00AE               	movwf	___ftmul@cntr
  3079  0610                     l1253:	
  3080  0610  1C20               	btfss	___ftmul@f1,0
  3081  0611  2E18               	goto	l1257
  3082  0612  0823               	movf	___ftmul@f2,w
  3083  0613  07AB               	addwf	___ftmul@f3_as_product,f
  3084  0614  0824               	movf	___ftmul@f2+1,w
  3085  0615  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  3086  0616  0825               	movf	___ftmul@f2+2,w
  3087  0617  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  3088  0618                     l1257:	
  3089  0618  3001               	movlw	1
  3090  0619                     u1585:	
  3091  0619  36A2               	lsrf	___ftmul@f1+2,f
  3092  061A  0CA1               	rrf	___ftmul@f1+1,f
  3093  061B  0CA0               	rrf	___ftmul@f1,f
  3094  061C  0B89               	decfsz	9,f
  3095  061D  2E19               	goto	u1585
  3096  061E  3001               	movlw	1
  3097  061F                     u1595:	
  3098  061F  36AD               	lsrf	___ftmul@f3_as_product+2,f
  3099  0620  0CAC               	rrf	___ftmul@f3_as_product+1,f
  3100  0621  0CAB               	rrf	___ftmul@f3_as_product,f
  3101  0622  0B89               	decfsz	9,f
  3102  0623  2E1F               	goto	u1595
  3103  0624  3001               	movlw	1
  3104  0625  02AE               	subwf	___ftmul@cntr,f
  3105  0626  1D03               	btfss	3,2
  3106  0627  2E10               	goto	l1253
  3107  0628  082B               	movf	___ftmul@f3_as_product,w
  3108  0629  00F0               	movwf	___ftpack@arg
  3109  062A  082C               	movf	___ftmul@f3_as_product+1,w
  3110  062B  00F1               	movwf	___ftpack@arg+1
  3111  062C  082D               	movf	___ftmul@f3_as_product+2,w
  3112  062D  00F2               	movwf	___ftpack@arg+2
  3113  062E  082A               	movf	___ftmul@exp,w
  3114  062F  00A6               	movwf	??___ftmul
  3115  0630  0826               	movf	??___ftmul,w
  3116  0631  00F3               	movwf	___ftpack@exp
  3117  0632  082F               	movf	___ftmul@sign,w
  3118  0633  00A7               	movwf	??___ftmul+1
  3119  0634  0827               	movf	??___ftmul+1,w
  3120  0635  00F4               	movwf	___ftpack@sign
  3121  0636  3183  2350         	fcall	___ftpack
  3122  0638  0870               	movf	?___ftpack,w
  3123  0639  0020               	movlb	0	; select bank0
  3124  063A  00A0               	movwf	?___ftmul
  3125  063B  0871               	movf	?___ftpack+1,w
  3126  063C  00A1               	movwf	?___ftmul+1
  3127  063D  0872               	movf	?___ftpack+2,w
  3128  063E  00A2               	movwf	?___ftmul+2
  3129  063F  0008               	return
  3130  0640                     __end_of___ftmul:	
  3131                           
  3132                           	psect	text23
  3133  04E3                     __ptext23:	
  3134 ;; *************** function ___ftdiv *****************
  3135 ;; Defined at:
  3136 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  3137 ;; Parameters:    Size  Location     Type
  3138 ;;  f2              3   16[BANK0 ] float 
  3139 ;;  f1              3   19[BANK0 ] float 
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;  f3              3   27[BANK0 ] float 
  3142 ;;  sign            1   31[BANK0 ] unsigned char 
  3143 ;;  exp             1   30[BANK0 ] unsigned char 
  3144 ;;  cntr            1   26[BANK0 ] unsigned char 
  3145 ;; Return value:  Size  Location     Type
  3146 ;;                  3   16[BANK0 ] float 
  3147 ;; Registers used:
  3148 ;;		wreg, status,2, status,0, pclath, cstack
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3154 ;;      Params:         0       6       0       0       0       0
  3155 ;;      Locals:         0       6       0       0       0       0
  3156 ;;      Temps:          0       4       0       0       0       0
  3157 ;;      Totals:         0      16       0       0       0       0
  3158 ;;Total ram usage:       16 bytes
  3159 ;; Hardware stack levels used:    1
  3160 ;; Hardware stack levels required when called:    1
  3161 ;; This function calls:
  3162 ;;		___ftpack
  3163 ;; This function is called by:
  3164 ;;		_da_conv
  3165 ;;		_disp
  3166 ;; This function uses a non-reentrant model
  3167 ;;
  3168                           
  3169                           
  3170                           ;psect for function ___ftdiv
  3171  04E3                     ___ftdiv:	
  3172                           
  3173                           ;incstack = 0
  3174                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3175  04E3  0020               	movlb	0	; select bank0
  3176  04E4  0833               	movf	___ftdiv@f1,w
  3177  04E5  00B6               	movwf	??___ftdiv
  3178  04E6  0834               	movf	___ftdiv@f1+1,w
  3179  04E7  00B7               	movwf	??___ftdiv+1
  3180  04E8  0835               	movf	___ftdiv@f1+2,w
  3181  04E9  00B8               	movwf	??___ftdiv+2
  3182  04EA  1003               	clrc
  3183  04EB  0D37               	rlf	??___ftdiv+1,w
  3184  04EC  0D38               	rlf	??___ftdiv+2,w
  3185  04ED  00B9               	movwf	??___ftdiv+3
  3186  04EE  0839               	movf	??___ftdiv+3,w
  3187  04EF  00BE               	movwf	___ftdiv@exp
  3188  04F0  083E               	movf	___ftdiv@exp,w
  3189  04F1  1D03               	btfss	3,2
  3190  04F2  2CFA               	goto	l1161
  3191  04F3  3000               	movlw	0
  3192  04F4  00B0               	movwf	?___ftdiv
  3193  04F5  3000               	movlw	0
  3194  04F6  00B1               	movwf	?___ftdiv+1
  3195  04F7  3000               	movlw	0
  3196  04F8  00B2               	movwf	?___ftdiv+2
  3197  04F9  0008               	return
  3198  04FA                     l1161:	
  3199  04FA  0830               	movf	___ftdiv@f2,w
  3200  04FB  00B6               	movwf	??___ftdiv
  3201  04FC  0831               	movf	___ftdiv@f2+1,w
  3202  04FD  00B7               	movwf	??___ftdiv+1
  3203  04FE  0832               	movf	___ftdiv@f2+2,w
  3204  04FF  00B8               	movwf	??___ftdiv+2
  3205  0500  1003               	clrc
  3206  0501  0D37               	rlf	??___ftdiv+1,w
  3207  0502  0D38               	rlf	??___ftdiv+2,w
  3208  0503  00B9               	movwf	??___ftdiv+3
  3209  0504  0839               	movf	??___ftdiv+3,w
  3210  0505  00BF               	movwf	___ftdiv@sign
  3211  0506  083F               	movf	___ftdiv@sign,w
  3212  0507  1D03               	btfss	3,2
  3213  0508  2D10               	goto	l1167
  3214  0509  3000               	movlw	0
  3215  050A  00B0               	movwf	?___ftdiv
  3216  050B  3000               	movlw	0
  3217  050C  00B1               	movwf	?___ftdiv+1
  3218  050D  3000               	movlw	0
  3219  050E  00B2               	movwf	?___ftdiv+2
  3220  050F  0008               	return
  3221  0510                     l1167:	
  3222  0510  3000               	movlw	0
  3223  0511  00BB               	movwf	___ftdiv@f3
  3224  0512  3000               	movlw	0
  3225  0513  00BC               	movwf	___ftdiv@f3+1
  3226  0514  3000               	movlw	0
  3227  0515  00BD               	movwf	___ftdiv@f3+2
  3228  0516  3089               	movlw	137
  3229  0517  073F               	addwf	___ftdiv@sign,w
  3230  0518  00B6               	movwf	??___ftdiv
  3231  0519  0836               	movf	??___ftdiv,w
  3232  051A  02BE               	subwf	___ftdiv@exp,f
  3233  051B  0833               	movf	___ftdiv@f1,w
  3234  051C  00B6               	movwf	??___ftdiv
  3235  051D  0834               	movf	___ftdiv@f1+1,w
  3236  051E  00B7               	movwf	??___ftdiv+1
  3237  051F  0835               	movf	___ftdiv@f1+2,w
  3238  0520  00B8               	movwf	??___ftdiv+2
  3239  0521  3010               	movlw	16
  3240  0522                     u1405:	
  3241  0522  36B8               	lsrf	??___ftdiv+2,f
  3242  0523  0CB7               	rrf	??___ftdiv+1,f
  3243  0524  0CB6               	rrf	??___ftdiv,f
  3244  0525  0B89               	decfsz	9,f
  3245  0526  2D22               	goto	u1405
  3246  0527  0836               	movf	??___ftdiv,w
  3247  0528  00B9               	movwf	??___ftdiv+3
  3248  0529  0839               	movf	??___ftdiv+3,w
  3249  052A  00BF               	movwf	___ftdiv@sign
  3250  052B  0830               	movf	___ftdiv@f2,w
  3251  052C  00B6               	movwf	??___ftdiv
  3252  052D  0831               	movf	___ftdiv@f2+1,w
  3253  052E  00B7               	movwf	??___ftdiv+1
  3254  052F  0832               	movf	___ftdiv@f2+2,w
  3255  0530  00B8               	movwf	??___ftdiv+2
  3256  0531  3010               	movlw	16
  3257  0532                     u1415:	
  3258  0532  36B8               	lsrf	??___ftdiv+2,f
  3259  0533  0CB7               	rrf	??___ftdiv+1,f
  3260  0534  0CB6               	rrf	??___ftdiv,f
  3261  0535  0B89               	decfsz	9,f
  3262  0536  2D32               	goto	u1415
  3263  0537  0836               	movf	??___ftdiv,w
  3264  0538  00B9               	movwf	??___ftdiv+3
  3265  0539  0839               	movf	??___ftdiv+3,w
  3266  053A  06BF               	xorwf	___ftdiv@sign,f
  3267  053B  3080               	movlw	128
  3268  053C  00B6               	movwf	??___ftdiv
  3269  053D  0836               	movf	??___ftdiv,w
  3270  053E  05BF               	andwf	___ftdiv@sign,f
  3271  053F  17B4               	bsf	___ftdiv@f1+1,7
  3272  0540  30FF               	movlw	255
  3273  0541  05B3               	andwf	___ftdiv@f1,f
  3274  0542  30FF               	movlw	255
  3275  0543  05B4               	andwf	___ftdiv@f1+1,f
  3276  0544  3000               	movlw	0
  3277  0545  05B5               	andwf	___ftdiv@f1+2,f
  3278  0546  17B1               	bsf	___ftdiv@f2+1,7
  3279  0547  30FF               	movlw	255
  3280  0548  05B0               	andwf	___ftdiv@f2,f
  3281  0549  30FF               	movlw	255
  3282  054A  05B1               	andwf	___ftdiv@f2+1,f
  3283  054B  3000               	movlw	0
  3284  054C  05B2               	andwf	___ftdiv@f2+2,f
  3285  054D  3018               	movlw	24
  3286  054E  00B6               	movwf	??___ftdiv
  3287  054F  0836               	movf	??___ftdiv,w
  3288  0550  00BA               	movwf	___ftdiv@cntr
  3289  0551                     l1181:	
  3290  0551  3001               	movlw	1
  3291  0552                     u1425:	
  3292  0552  35BB               	lslf	___ftdiv@f3,f
  3293  0553  0DBC               	rlf	___ftdiv@f3+1,f
  3294  0554  0DBD               	rlf	___ftdiv@f3+2,f
  3295  0555  0B89               	decfsz	9,f
  3296  0556  2D52               	goto	u1425
  3297  0557  0832               	movf	___ftdiv@f2+2,w
  3298  0558  0235               	subwf	___ftdiv@f1+2,w
  3299  0559  1D03               	skipz
  3300  055A  2D61               	goto	u1435
  3301  055B  0831               	movf	___ftdiv@f2+1,w
  3302  055C  0234               	subwf	___ftdiv@f1+1,w
  3303  055D  1D03               	skipz
  3304  055E  2D61               	goto	u1435
  3305  055F  0830               	movf	___ftdiv@f2,w
  3306  0560  0233               	subwf	___ftdiv@f1,w
  3307  0561                     u1435:	
  3308  0561  1C03               	skipc
  3309  0562  2D6A               	goto	l1189
  3310  0563  0830               	movf	___ftdiv@f2,w
  3311  0564  02B3               	subwf	___ftdiv@f1,f
  3312  0565  0831               	movf	___ftdiv@f2+1,w
  3313  0566  3BB4               	subwfb	___ftdiv@f1+1,f
  3314  0567  0832               	movf	___ftdiv@f2+2,w
  3315  0568  3BB5               	subwfb	___ftdiv@f1+2,f
  3316  0569  143B               	bsf	___ftdiv@f3,0
  3317  056A                     l1189:	
  3318  056A  3001               	movlw	1
  3319  056B                     u1445:	
  3320  056B  35B3               	lslf	___ftdiv@f1,f
  3321  056C  0DB4               	rlf	___ftdiv@f1+1,f
  3322  056D  0DB5               	rlf	___ftdiv@f1+2,f
  3323  056E  0B89               	decfsz	9,f
  3324  056F  2D6B               	goto	u1445
  3325  0570  3001               	movlw	1
  3326  0571  02BA               	subwf	___ftdiv@cntr,f
  3327  0572  1D03               	btfss	3,2
  3328  0573  2D51               	goto	l1181
  3329  0574  083B               	movf	___ftdiv@f3,w
  3330  0575  00F0               	movwf	___ftpack@arg
  3331  0576  083C               	movf	___ftdiv@f3+1,w
  3332  0577  00F1               	movwf	___ftpack@arg+1
  3333  0578  083D               	movf	___ftdiv@f3+2,w
  3334  0579  00F2               	movwf	___ftpack@arg+2
  3335  057A  083E               	movf	___ftdiv@exp,w
  3336  057B  00B6               	movwf	??___ftdiv
  3337  057C  0836               	movf	??___ftdiv,w
  3338  057D  00F3               	movwf	___ftpack@exp
  3339  057E  083F               	movf	___ftdiv@sign,w
  3340  057F  00B7               	movwf	??___ftdiv+1
  3341  0580  0837               	movf	??___ftdiv+1,w
  3342  0581  00F4               	movwf	___ftpack@sign
  3343  0582  3183  2350         	fcall	___ftpack
  3344  0584  0870               	movf	?___ftpack,w
  3345  0585  0020               	movlb	0	; select bank0
  3346  0586  00B0               	movwf	?___ftdiv
  3347  0587  0871               	movf	?___ftpack+1,w
  3348  0588  00B1               	movwf	?___ftdiv+1
  3349  0589  0872               	movf	?___ftpack+2,w
  3350  058A  00B2               	movwf	?___ftdiv+2
  3351  058B  0008               	return
  3352  058C                     __end_of___ftdiv:	
  3353                           
  3354                           	psect	text24
  3355  01DB                     __ptext24:	
  3356 ;; *************** function ___awtoft *****************
  3357 ;; Defined at:
  3358 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  3359 ;; Parameters:    Size  Location     Type
  3360 ;;  c               2    8[COMMON] int 
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;  sign            1   13[COMMON] unsigned char 
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  3    8[COMMON] float 
  3365 ;; Registers used:
  3366 ;;		wreg, status,2, status,0, pclath, cstack
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3372 ;;      Params:         3       0       0       0       0       0
  3373 ;;      Locals:         1       0       0       0       0       0
  3374 ;;      Temps:          2       0       0       0       0       0
  3375 ;;      Totals:         6       0       0       0       0       0
  3376 ;;Total ram usage:        6 bytes
  3377 ;; Hardware stack levels used:    1
  3378 ;; Hardware stack levels required when called:    1
  3379 ;; This function calls:
  3380 ;;		___ftpack
  3381 ;; This function is called by:
  3382 ;;		_da_conv
  3383 ;; This function uses a non-reentrant model
  3384 ;;
  3385                           
  3386                           
  3387                           ;psect for function ___awtoft
  3388  01DB                     ___awtoft:	
  3389                           
  3390                           ;incstack = 0
  3391                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  3392  01DB  01FD               	clrf	___awtoft@sign
  3393  01DC  1FF9               	btfss	___awtoft@c+1,7
  3394  01DD  29E5               	goto	l1151
  3395  01DE  09F8               	comf	___awtoft@c,f
  3396  01DF  09F9               	comf	___awtoft@c+1,f
  3397  01E0  0AF8               	incf	___awtoft@c,f
  3398  01E1  1903               	skipnz
  3399  01E2  0AF9               	incf	___awtoft@c+1,f
  3400  01E3  01FD               	clrf	___awtoft@sign
  3401  01E4  0AFD               	incf	___awtoft@sign,f
  3402  01E5                     l1151:	
  3403  01E5  0878               	movf	___awtoft@c,w
  3404  01E6  00F0               	movwf	___ftpack@arg
  3405  01E7  0879               	movf	___awtoft@c+1,w
  3406  01E8  00F1               	movwf	___ftpack@arg+1
  3407  01E9  01F2               	clrf	___ftpack@arg+2
  3408  01EA  308E               	movlw	142
  3409  01EB  00FB               	movwf	??___awtoft
  3410  01EC  087B               	movf	??___awtoft,w
  3411  01ED  00F3               	movwf	___ftpack@exp
  3412  01EE  087D               	movf	___awtoft@sign,w
  3413  01EF  00FC               	movwf	??___awtoft+1
  3414  01F0  087C               	movf	??___awtoft+1,w
  3415  01F1  00F4               	movwf	___ftpack@sign
  3416  01F2  3183  2350         	fcall	___ftpack
  3417  01F4  0870               	movf	?___ftpack,w
  3418  01F5  00F8               	movwf	?___awtoft
  3419  01F6  0871               	movf	?___ftpack+1,w
  3420  01F7  00F9               	movwf	?___awtoft+1
  3421  01F8  0872               	movf	?___ftpack+2,w
  3422  01F9  00FA               	movwf	?___awtoft+2
  3423  01FA  0008               	return
  3424  01FB                     __end_of___awtoft:	
  3425                           
  3426                           	psect	text25
  3427  0350                     __ptext25:	
  3428 ;; *************** function ___ftpack *****************
  3429 ;; Defined at:
  3430 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;  arg             3    0[COMMON] unsigned um
  3433 ;;  exp             1    3[COMMON] unsigned char 
  3434 ;;  sign            1    4[COMMON] unsigned char 
  3435 ;; Auto vars:     Size  Location     Type
  3436 ;;		None
  3437 ;; Return value:  Size  Location     Type
  3438 ;;                  3    0[COMMON] float 
  3439 ;; Registers used:
  3440 ;;		wreg, status,2, status,0
  3441 ;; Tracked objects:
  3442 ;;		On entry : 0/0
  3443 ;;		On exit  : 0/0
  3444 ;;		Unchanged: 0/0
  3445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3446 ;;      Params:         5       0       0       0       0       0
  3447 ;;      Locals:         0       0       0       0       0       0
  3448 ;;      Temps:          3       0       0       0       0       0
  3449 ;;      Totals:         8       0       0       0       0       0
  3450 ;;Total ram usage:        8 bytes
  3451 ;; Hardware stack levels used:    1
  3452 ;; This function calls:
  3453 ;;		Nothing
  3454 ;; This function is called by:
  3455 ;;		___awtoft
  3456 ;;		___ftdiv
  3457 ;;		___ftmul
  3458 ;; This function uses a non-reentrant model
  3459 ;;
  3460                           
  3461                           
  3462                           ;psect for function ___ftpack
  3463  0350                     ___ftpack:	
  3464                           
  3465                           ;incstack = 0
  3466                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3467  0350  0873               	movf	___ftpack@exp,w
  3468  0351  1903               	btfsc	3,2
  3469  0352  2B58               	goto	l1041
  3470  0353  0872               	movf	___ftpack@arg+2,w
  3471  0354  0471               	iorwf	___ftpack@arg+1,w
  3472  0355  0470               	iorwf	___ftpack@arg,w
  3473  0356  1D03               	skipz
  3474  0357  2B69               	goto	l1047
  3475  0358                     l1041:	
  3476  0358  3000               	movlw	0
  3477  0359  00F0               	movwf	?___ftpack
  3478  035A  3000               	movlw	0
  3479  035B  00F1               	movwf	?___ftpack+1
  3480  035C  3000               	movlw	0
  3481  035D  00F2               	movwf	?___ftpack+2
  3482  035E  0008               	return
  3483  035F                     l1045:	
  3484  035F  3001               	movlw	1
  3485  0360  00F5               	movwf	??___ftpack
  3486  0361  0875               	movf	??___ftpack,w
  3487  0362  07F3               	addwf	___ftpack@exp,f
  3488  0363  3001               	movlw	1
  3489  0364                     u1135:	
  3490  0364  36F2               	lsrf	___ftpack@arg+2,f
  3491  0365  0CF1               	rrf	___ftpack@arg+1,f
  3492  0366  0CF0               	rrf	___ftpack@arg,f
  3493  0367  0B89               	decfsz	9,f
  3494  0368  2B64               	goto	u1135
  3495  0369                     l1047:	
  3496  0369  30FE               	movlw	254
  3497  036A  0572               	andwf	___ftpack@arg+2,w
  3498  036B  1903               	btfsc	3,2
  3499  036C  2B82               	goto	l392
  3500  036D  2B5F               	goto	l1045
  3501  036E                     l1049:	
  3502  036E  3001               	movlw	1
  3503  036F  00F5               	movwf	??___ftpack
  3504  0370  0875               	movf	??___ftpack,w
  3505  0371  07F3               	addwf	___ftpack@exp,f
  3506  0372  3001               	movlw	1
  3507  0373  07F0               	addwf	___ftpack@arg,f
  3508  0374  3000               	movlw	0
  3509  0375  1803               	skipnc
  3510  0376  3001               	movlw	1
  3511  0377  07F1               	addwf	___ftpack@arg+1,f
  3512  0378  3000               	movlw	0
  3513  0379  1803               	skipnc
  3514  037A  3001               	movlw	1
  3515  037B  07F2               	addwf	___ftpack@arg+2,f
  3516  037C  3001               	movlw	1
  3517  037D                     u1155:	
  3518  037D  36F2               	lsrf	___ftpack@arg+2,f
  3519  037E  0CF1               	rrf	___ftpack@arg+1,f
  3520  037F  0CF0               	rrf	___ftpack@arg,f
  3521  0380  0B89               	decfsz	9,f
  3522  0381  2B7D               	goto	u1155
  3523  0382                     l392:	
  3524  0382  30FF               	movlw	255
  3525  0383  0572               	andwf	___ftpack@arg+2,w
  3526  0384  1903               	btfsc	3,2
  3527  0385  2B8F               	goto	l1057
  3528  0386  2B6E               	goto	l1049
  3529  0387                     l1055:	
  3530  0387  3001               	movlw	1
  3531  0388  02F3               	subwf	___ftpack@exp,f
  3532  0389  3001               	movlw	1
  3533  038A                     u1175:	
  3534  038A  35F0               	lslf	___ftpack@arg,f
  3535  038B  0DF1               	rlf	___ftpack@arg+1,f
  3536  038C  0DF2               	rlf	___ftpack@arg+2,f
  3537  038D  0B89               	decfsz	9,f
  3538  038E  2B8A               	goto	u1175
  3539  038F                     l1057:	
  3540  038F  1BF1               	btfsc	___ftpack@arg+1,7
  3541  0390  2B95               	goto	l399
  3542  0391  3002               	movlw	2
  3543  0392  0273               	subwf	___ftpack@exp,w
  3544  0393  1803               	skipnc
  3545  0394  2B87               	goto	l1055
  3546  0395                     l399:	
  3547  0395  1873               	btfsc	___ftpack@exp,0
  3548  0396  2B9D               	goto	l400
  3549  0397  30FF               	movlw	255
  3550  0398  05F0               	andwf	___ftpack@arg,f
  3551  0399  307F               	movlw	127
  3552  039A  05F1               	andwf	___ftpack@arg+1,f
  3553  039B  30FF               	movlw	255
  3554  039C  05F2               	andwf	___ftpack@arg+2,f
  3555  039D                     l400:	
  3556  039D  1003               	clrc
  3557  039E  0CF3               	rrf	___ftpack@exp,f
  3558  039F  0873               	movf	___ftpack@exp,w
  3559  03A0  00F5               	movwf	??___ftpack
  3560  03A1  01F6               	clrf	??___ftpack+1
  3561  03A2  01F7               	clrf	??___ftpack+2
  3562  03A3  3010               	movlw	16
  3563  03A4                     u1215:	
  3564  03A4  35F5               	lslf	??___ftpack,f
  3565  03A5  0DF6               	rlf	??___ftpack+1,f
  3566  03A6  0DF7               	rlf	??___ftpack+2,f
  3567  03A7  0B89               	decfsz	9,f
  3568  03A8  2BA4               	goto	u1215
  3569  03A9  0875               	movf	??___ftpack,w
  3570  03AA  04F0               	iorwf	___ftpack@arg,f
  3571  03AB  0876               	movf	??___ftpack+1,w
  3572  03AC  04F1               	iorwf	___ftpack@arg+1,f
  3573  03AD  0877               	movf	??___ftpack+2,w
  3574  03AE  04F2               	iorwf	___ftpack@arg+2,f
  3575  03AF  0874               	movf	___ftpack@sign,w
  3576  03B0  1903               	btfsc	3,2
  3577  03B1  0008               	return
  3578  03B2  17F2               	bsf	___ftpack@arg+2,7
  3579  03B3  0008               	return
  3580  03B4                     __end_of___ftpack:	
  3581                           
  3582                           	psect	text26
  3583  021B                     __ptext26:	
  3584 ;; *************** function _ad_conv *****************
  3585 ;; Defined at:
  3586 ;;		line 109 in file "main.c"
  3587 ;; Parameters:    Size  Location     Type
  3588 ;;  pin_select      2    0[COMMON] int 
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;  temp            2    9[COMMON] int 
  3591 ;; Return value:  Size  Location     Type
  3592 ;;                  2    0[COMMON] int 
  3593 ;; Registers used:
  3594 ;;		wreg
  3595 ;; Tracked objects:
  3596 ;;		On entry : 0/0
  3597 ;;		On exit  : 0/0
  3598 ;;		Unchanged: 0/0
  3599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3600 ;;      Params:         2       0       0       0       0       0
  3601 ;;      Locals:         2       0       0       0       0       0
  3602 ;;      Temps:          7       0       0       0       0       0
  3603 ;;      Totals:        11       0       0       0       0       0
  3604 ;;Total ram usage:       11 bytes
  3605 ;; Hardware stack levels used:    1
  3606 ;; This function calls:
  3607 ;;		Nothing
  3608 ;; This function is called by:
  3609 ;;		_loop
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612                           
  3613                           
  3614                           ;psect for function _ad_conv
  3615  021B                     _ad_conv:	
  3616                           
  3617                           ;main.c: 110: int temp;
  3618                           ;main.c: 112: ADCON0 = pin_select;
  3619                           
  3620                           ;incstack = 0
  3621                           ; Regs used in _ad_conv: [wreg]
  3622  021B  0870               	movf	ad_conv@pin_select,w
  3623  021C  0021               	movlb	1	; select bank1
  3624  021D  009D               	movwf	29	;volatile
  3625  021E                     l107:	
  3626                           ;main.c: 114: while(GO_nDONE);
  3627                           
  3628  021E  189D               	btfsc	29,1	;volatile
  3629  021F  2A1E               	goto	l107
  3630                           
  3631                           ;main.c: 115: temp = ADRESH;
  3632  0220  081C               	movf	28,w	;volatile
  3633  0221  00F2               	movwf	??_ad_conv
  3634  0222  01F3               	clrf	??_ad_conv+1
  3635  0223  0872               	movf	??_ad_conv,w
  3636  0224  00F9               	movwf	ad_conv@temp
  3637  0225  0873               	movf	??_ad_conv+1,w
  3638  0226  00FA               	movwf	ad_conv@temp+1
  3639                           
  3640                           ;main.c: 116: temp = ( temp << 8 ) | ADRESL;
  3641  0227  081B               	movf	27,w	;volatile
  3642  0228  00F2               	movwf	??_ad_conv
  3643  0229  01F3               	clrf	??_ad_conv+1
  3644  022A  087A               	movf	ad_conv@temp+1,w
  3645  022B  00F5               	movwf	??_ad_conv+3
  3646  022C  0879               	movf	ad_conv@temp,w
  3647  022D  00F4               	movwf	??_ad_conv+2
  3648  022E  0874               	movf	??_ad_conv+2,w
  3649  022F  00F5               	movwf	??_ad_conv+3
  3650  0230  01F4               	clrf	??_ad_conv+2
  3651  0231  0872               	movf	??_ad_conv,w
  3652  0232  0474               	iorwf	??_ad_conv+2,w
  3653  0233  00F7               	movwf	??_ad_conv+5
  3654  0234  0873               	movf	??_ad_conv+1,w
  3655  0235  0475               	iorwf	??_ad_conv+3,w
  3656  0236  00F8               	movwf	??_ad_conv+6
  3657  0237  0877               	movf	??_ad_conv+5,w
  3658  0238  00F9               	movwf	ad_conv@temp
  3659  0239  0878               	movf	??_ad_conv+6,w
  3660  023A  00FA               	movwf	ad_conv@temp+1
  3661                           
  3662                           ;main.c: 118: return temp;
  3663  023B  087A               	movf	ad_conv@temp+1,w
  3664  023C  00F1               	movwf	?_ad_conv+1
  3665  023D  0879               	movf	ad_conv@temp,w
  3666  023E  00F0               	movwf	?_ad_conv
  3667  023F  0008               	return
  3668  0240                     __end_of_ad_conv:	
  3669                           
  3670                           	psect	text27
  3671  017D                     __ptext27:	
  3672 ;; *************** function _init *****************
  3673 ;; Defined at:
  3674 ;;		line 93 in file "main.c"
  3675 ;; Parameters:    Size  Location     Type
  3676 ;;		None
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;		None
  3679 ;; Return value:  Size  Location     Type
  3680 ;;                  1    wreg      void 
  3681 ;; Registers used:
  3682 ;;		wreg, status,2
  3683 ;; Tracked objects:
  3684 ;;		On entry : 0/0
  3685 ;;		On exit  : 0/0
  3686 ;;		Unchanged: 0/0
  3687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3688 ;;      Params:         0       0       0       0       0       0
  3689 ;;      Locals:         0       0       0       0       0       0
  3690 ;;      Temps:          0       0       0       0       0       0
  3691 ;;      Totals:         0       0       0       0       0       0
  3692 ;;Total ram usage:        0 bytes
  3693 ;; Hardware stack levels used:    1
  3694 ;; This function calls:
  3695 ;;		Nothing
  3696 ;; This function is called by:
  3697 ;;		_main
  3698 ;; This function uses a non-reentrant model
  3699 ;;
  3700                           
  3701                           
  3702                           ;psect for function _init
  3703  017D                     _init:	
  3704                           
  3705                           ;main.c: 94: OSCCON = 0b01110010;
  3706                           
  3707                           ;incstack = 0
  3708                           ; Regs used in _init: [wreg+status,2]
  3709  017D  3072               	movlw	114
  3710  017E  0021               	movlb	1	; select bank1
  3711  017F  0099               	movwf	25	;volatile
  3712                           
  3713                           ;main.c: 95: ANSELA = 0b00001000;
  3714  0180  3008               	movlw	8
  3715  0181  0023               	movlb	3	; select bank3
  3716  0182  008C               	movwf	12	;volatile
  3717                           
  3718                           ;main.c: 96: ANSELB = 0b00000000;
  3719  0183  018D               	clrf	13	;volatile
  3720                           
  3721                           ;main.c: 97: TRISA = 0b00001000;
  3722  0184  3008               	movlw	8
  3723  0185  0021               	movlb	1	; select bank1
  3724  0186  008C               	movwf	12	;volatile
  3725                           
  3726                           ;main.c: 98: TRISB = 0b00000000;
  3727  0187  018D               	clrf	13	;volatile
  3728                           
  3729                           ;main.c: 99: PORTA = 0b00000000;
  3730  0188  0020               	movlb	0	; select bank0
  3731  0189  018C               	clrf	12	;volatile
  3732                           
  3733                           ;main.c: 100: PORTB = 0b00000000;
  3734  018A  018D               	clrf	13	;volatile
  3735                           
  3736                           ;main.c: 102: ADCON1 = 0b10010000;
  3737  018B  3090               	movlw	144
  3738  018C  0021               	movlb	1	; select bank1
  3739  018D  009E               	movwf	30	;volatile
  3740  018E  0008               	return
  3741  018F                     __end_of_init:	
  3742  007E                     btemp	set	126	;btemp
  3743  007E                     wtemp	set	126
  3744  007E                     wtemp0	set	126
  3745  0080                     wtemp1	set	128
  3746  0082                     wtemp2	set	130
  3747  0084                     wtemp3	set	132
  3748  0086                     wtemp4	set	134
  3749  0088                     wtemp5	set	136
  3750  007F                     wtemp6	set	127
  3751  007E                     ttemp	set	126
  3752  007E                     ttemp0	set	126
  3753  0081                     ttemp1	set	129
  3754  0084                     ttemp2	set	132
  3755  0087                     ttemp3	set	135
  3756  007F                     ttemp4	set	127
  3757  007E                     ltemp	set	126
  3758  007E                     ltemp0	set	126
  3759  0082                     ltemp1	set	130
  3760  0086                     ltemp2	set	134
  3761  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        168
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     74      74
    BANK1            80      0       0
    BANK2            40      0       0
    BANK3             0      0       0
    BANK4             0      0       0

Pointer List with Targets:

    set_disp@disp	PTR int  size(2) Largest target is 168
		 -> led_disp(BIGRAM[168]), 


Critical Paths under _main in COMMON

    _set_disp->___wmul
    _open->_set_BIT0
    _open->_set_BIT1
    _close->_set_BIT0
    _close->_set_BIT1
    _da_conv->___awtoft
    ___ftmul->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    _loop->_disp
    _disp->___awmod
    ___fttol->___ftdiv
    ___awmod->___fttol
    _da_conv->___ftdiv
    ___ftdiv->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   16029
                               _init
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0   16029
                            _ad_conv
                            _da_conv
                               _disp
 ---------------------------------------------------------------------------------
 (2) _disp                                                21    18      3    9208
                                             53 BANK0     21    18      3
                            ___awmod
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___fttol
                             ___wmul
                            _ad_conv (ARG)
                              _close
                            _da_conv (ARG)
                               _open
                           _set_disp
                               _wait
 ---------------------------------------------------------------------------------
 (3) _wait                                                 6     4      2      99
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) _set_disp                                             4     0      4     882
                                              6 COMMON     4     0      4
                             ___wmul (ARG)
                              _set_A
                              _set_B
                              _set_C
                              _set_D
                             _set_DP
                              _set_E
                              _set_F
                              _set_G
 ---------------------------------------------------------------------------------
 (4) _set_G                                                2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _set_F                                                2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _set_E                                                2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _set_DP                                               2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _set_D                                                2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _set_C                                                2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _set_B                                                2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _set_A                                                2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _open                                                 2     0      2     587
                                              2 COMMON     2     0      2
                              _close
                           _set_BIT0
                           _set_BIT1
 ---------------------------------------------------------------------------------
 (4) _close                                                0     0      0     256
                           _set_BIT0
                           _set_BIT1
 ---------------------------------------------------------------------------------
 (4) _set_BIT1                                             2     0      2     128
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _set_BIT0                                             2     0      2     128
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     198
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     464
                                             32 BANK0     14    10      4
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     560
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     720
                                             46 BANK0      7     3      4
                            ___ftdiv (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) _da_conv                                              6     3      3    6700
                                             32 BANK0      6     3      3
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            _ad_conv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2418
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    2372
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    1812
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) _ad_conv                                             11     9      2     121
                                              0 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
   _loop
     _ad_conv
     _da_conv
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       _ad_conv (ARG)
     _disp
       ___awmod
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___fttol (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
       ___wmul
       _ad_conv (ARG)
       _close (ARG)
         _set_BIT0
         _set_BIT1
       _da_conv (ARG)
         ___awtoft
           ___ftpack
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         _ad_conv (ARG)
       _open (ARG)
         _close
           _set_BIT0
           _set_BIT1
         _set_BIT0
         _set_BIT1
       _set_disp (ARG)
         ___wmul (ARG)
         _set_A (ARG)
         _set_B (ARG)
         _set_C (ARG)
         _set_D (ARG)
         _set_DP (ARG)
         _set_E (ARG)
         _set_F (ARG)
         _set_G (ARG)
       _wait (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4A      4A       6       92.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               28      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK3                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Tue Mar 07 18:29:13 2017

            __CFG_CP$OFF 0000      ___wmul@multiplicand 0072                      l107 021E  
                    l116 0191                      l231 01C8                      l400 039D  
                    l144 021A                      l392 0382                      l483 0421  
                    l399 0395                      _RA0 0060                      _RA1 0061  
                    _RA2 0062                      _RA3 0063                      _RB4 006C  
                    _RA6 0066                      _RB5 006D                      _RA7 0067  
                    _RB6 006E                      _RB7 006F             __CFG_CPD$OFF 0000  
                    u910 011A                      u930 0122                      u950 012A  
                    u970 0132                      u990 013A             ___awmod@sign 0054  
           __CFG_BORV$HI 0000                      wreg 0009             __CFG_LVP$OFF 0000  
           ___ftdiv@cntr 003A             ___ftdiv@sign 003F                     l1041 0358  
                   l1113 02BB                     l1201 028B                     l1131 02E0  
                   l1045 035F                     l1125 02C8                     l1117 02C2  
                   l1205 02A1                     l1301 0424                     l1055 0387  
                   l1047 0369                     l1151 01E5                     l1223 05A3  
                   l1127 02D4                     l1135 02E9                     l1057 038F  
                   l1049 036E                     l1161 04FA                     l1241 05F4  
                   l1305 0432                     l1081 0206                     l1139 02F1  
                   l1181 0551                     l1253 0610                     l1245 05FC  
                   l1229 05B9                     l1093 01C2                     l1085 020D  
                   l1167 0510                     l1079 01FF                     l1257 0618  
                   l1273 03CD                     l1353 078E                     l1345 06D6  
                   l1329 066E                     l1291 03FD                     l1371 07ED  
                   l1339 06AB                     l1189 056A                     l1293 040B  
                   l1349 06F1                     l1359 079B                     l1377 0111  
                   l1299 0418                     l1399 0212                     u1010 0142  
                   u1030 0152                     u1050 015A                     u1070 0162  
                   u1215 03A4                     u1135 0364                     u1090 014A  
                   u1155 037D                     u1315 02CB                     u1235 0197  
                   u1405 0522                     u1175 038A                     u1415 0532  
                   u1335 02DA                     u1255 01C9                     u1425 0552  
                   u1345 02E1                     u1265 01CE                     u1435 0561  
                   u1515 05C5                     u1445 056B                     u1525 05D5  
                   u1545 05FD                     u1625 03D4                     u1555 0603  
                   u1805 07EB                     u1655 03FE                     u1585 0619  
                   u1817 019D                     u1595 061F                     u1780 07A6  
                   u1685 0419                     u1790 07A7                     u1775 0799  
                   u1785 07A2             __CFG_WRT$OFF 0000                     _disp 0640  
                   _main 010E             ___ftpack@arg 0070                     _init 017D  
                   _loop 01A7             ___ftpack@exp 0073                     _open 01FB  
                   _wait 018F                     fsr0h 0005                     fsr1h 0007  
                   fsr0l 0004                     fsr1l 0006                     btemp 007E  
          __CFG_BOREN$ON 0000                     ltemp 007E                     start 0002  
                   ttemp 007E                     wtemp 007E            __CFG_IESO$OFF 0000  
           ___ftmul@cntr 002E             ___ftmul@sign 002F             ___fttol@exp1 004D  
           ___fttol@lval 0049                    ?_disp 0055                    ?_main 0070  
                  ?_init 0070                    ?_loop 0070                    ?_open 0072  
          __CFG_WDTE$OFF 0000          __end_of___awmod 02F6                    ?_wait 0070  
        __end_of___ftdiv 058C          __end_of___ftmul 0640          __end_of___fttol 043B  
        __end_of_ad_conv 0240          __end_of_da_conv 0275                    _PORTA 000C  
                  _PORTB 000D                    _TRISA 008C                    _TRISB 008D  
          __CFG_PWRTE$ON 0000           __CFG_FCMEN$OFF 0000            ___awtoft@sign 007D  
                  _close 0165                    _set_A 0125                    _set_B 012D  
                  _set_C 0135                    _set_D 013D                    _set_E 014D  
                  _set_F 0155                    _set_G 015D            ___ftpack@sign 0074  
                  disp@i 0068                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    wait@i 0074  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F           __CFG_MCLRE$OFF 0000          __initialization 07F0  
           __end_of_disp 07F0             __end_of_main 0115             __end_of_init 018F  
           __end_of_loop 01C0             __end_of_open 021B             __end_of_wait 01A7  
                 ??_disp 0058                   ??_main 007E            ___fttol@sign1 0048  
                 ??_init 0070                   ??_loop 007E                   ??_open 0074  
                 ??_wait 0072           __CFG_PLLEN$OFF 0000                   ?_close 0070  
                 _ADCON0 009D                   _ADCON1 009E                   _ADRESH 009C  
                 _ADRESL 009B                   ?_set_A 0070                   ?_set_B 0070  
                 ?_set_C 0070                   ?_set_D 0070                   ?_set_E 0070  
                 ?_set_F 0070                   ?_set_G 0070         __end_of___awtoft 01FB  
                 _ANSELA 018C                   _ANSELB 018D         __end_of___ftpack 03B4  
      ad_conv@pin_select 0070                   _OSCCON 0099                   ___ftge 0275  
                 ___wmul 01C0           __CFG_STVREN$ON 0000                ??___awmod 0052  
              ??___ftdiv 0036                ??___ftmul 0026                ??___fttol 0044  
              ??_ad_conv 0072                ??_da_conv 007E                   _set_DP 0145  
        ___awmod@divisor 004E                   disp@dp 005A         __end_of_set_BIT0 011D  
       __end_of_set_BIT1 0125          ___awmod@counter 0053    ___ftmul@f3_as_product 002B  
           __pdataBIGRAM 20C8         __end_of_set_disp 0350  __end_of__initialization 07FD  
             ___ftge@ff1 0070               ___ftge@ff2 0073               ___ftdiv@f1 0033  
             ___ftdiv@f2 0030               ___ftdiv@f3 003B               ___awtoft@c 0078  
             ___ftmul@f1 0020               ___ftmul@f2 0023               ___fttol@f1 0040  
         __pcstackCOMMON 0070            __end_of_close 0171            __end_of_set_A 012D  
          __end_of_set_B 0135            __end_of_set_C 013D            __end_of_set_D 0145  
          __end_of_set_E 0155            __end_of_set_F 015D            __end_of_set_G 0165  
                ??_close 0072              set_A@on_off 0070                  ??_set_A 0072  
                ??_set_B 0072                  ??_set_C 0072                  ??_set_D 0072  
                ??_set_E 0072                  ??_set_F 0072                  ??_set_G 0072  
            set_B@on_off 0070              set_C@on_off 0070              set_D@on_off 0070  
            set_E@on_off 0070              set_F@on_off 0070              set_G@on_off 0070  
     set_BIT0@open_close 0070               __pmaintext 010E                  ?___ftge 0070  
                ?___wmul 0070                  ?_set_DP 0070                ?___awtoft 0078  
              ?___ftpack 0070       set_BIT1@open_close 0070                ?_set_BIT0 0070  
              ?_set_BIT1 0070                ?_set_disp 0076          __size_of___ftge 003B  
                ___awmod 02B0                  ___ftdiv 04E3          __size_of___wmul 001B  
                ___ftmul 058C                  ___fttol 03B4                  _ad_conv 021B  
                _da_conv 0240               ??___awtoft 007B               ??___ftpack 0075  
        __size_of_set_DP 0008                  __ptext1 01A7                  __ptext2 0640  
                __ptext3 018F                  __ptext4 02F6                  __ptext5 015D  
                __ptext6 0155                  __ptext7 014D                  __ptext8 0145  
                __ptext9 013D         ___awmod@dividend 0050                  disp@num 0055  
   end_of_initialization 07FD                  init_ram 0171                  initloop 0172  
             ??_set_BIT0 0072               ??_set_BIT1 0072               ??_set_disp 007A  
             disp@digits 0060         __CFG_FOSC$INTOSC 0000              ___ftdiv@exp 003E  
            ___ftmul@exp 002A           __end_of___ftge 02B0            __pidataBIGRAM 043B  
         __end_of___wmul 01DB           __end_of_set_DP 014D      start_initialization 07F0  
               ??___ftge 0076                 ??___wmul 0074             set_DP@on_off 0070  
               ??_set_DP 0072        __size_of___awtoft 0020        __size_of___ftpack 0064  
              ___latbits 0001            __pcstackBANK0 0020              ad_conv@temp 0079  
         da_conv@digital 0040        __size_of_set_BIT0 0008        __size_of_set_BIT1 0008  
             open@select 0072                 ?___awmod 004E                 ?___ftdiv 0030  
               ?___ftmul 0020                 ?___fttol 0040        __size_of_set_disp 005A  
               ?_ad_conv 0070                 ?_da_conv 0040            wait@wait_time 0070  
         __size_of_close 000C           __size_of_set_A 0008           __size_of_set_B 0008  
         __size_of_set_C 0008           __size_of_set_D 0008           __size_of_set_E 0008  
         __size_of_set_F 0008           __size_of_set_G 0008               set_disp@dp 0078  
         ___wmul@product 0074                 _GO_nDONE 04E9        ___wmul@multiplier 0070  
       __size_of___awmod 0046         __size_of___ftdiv 00A9         __size_of___ftmul 00B4  
       __size_of___fttol 0087         __size_of_ad_conv 0025         __size_of_da_conv 0035  
               ___awtoft 01DB                 ___ftpack 0350            da_conv@analog 0043  
               __ptext10 0135                 __ptext11 012D                 __ptext20 02B0  
               __ptext12 0125                 __ptext21 0240                 __ptext13 01FB  
               __ptext22 058C                 __ptext14 0165                 __ptext23 04E3  
               __ptext15 011D                 __ptext24 01DB                 __ptext16 0115  
               __ptext25 0350                 __ptext17 01C0                 __ptext26 021B  
               __ptext18 03B4                 __ptext27 017D                 __ptext19 0275  
               _led_disp 20C8             set_disp@disp 0076            __size_of_disp 01B0  
          __size_of_main 0007            __size_of_init 0012            __size_of_loop 0019  
          __size_of_open 0020            __size_of_wait 0018                 _set_BIT0 0115  
               _set_BIT1 011D                 _set_disp 02F6                 disp@over 005C  
      __CFG_CLKOUTEN$OFF 0000             disp@dp_index 005E  
