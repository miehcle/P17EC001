

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Tue Mar 07 18:48:00 2017

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBIGRAM,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	inittext,global,class=CODE,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2
    35                           	dabs	1,0x220,48
    36                           	dabs	1,0x1A0,80
    37                           	dabs	1,0x148,40
    38                           	dabs	1,0x20C8,0,_led_disp
    39                           	dabs	1,0x7E,2
    40  0000                     	;# 
    41  0001                     	;# 
    42  0002                     	;# 
    43  0003                     	;# 
    44  0004                     	;# 
    45  0005                     	;# 
    46  0006                     	;# 
    47  0007                     	;# 
    48  0008                     	;# 
    49  0009                     	;# 
    50  000A                     	;# 
    51  000B                     	;# 
    52  000C                     	;# 
    53  000D                     	;# 
    54  0011                     	;# 
    55  0012                     	;# 
    56  0013                     	;# 
    57  0014                     	;# 
    58  0015                     	;# 
    59  0016                     	;# 
    60  0016                     	;# 
    61  0017                     	;# 
    62  0018                     	;# 
    63  0019                     	;# 
    64  001A                     	;# 
    65  001B                     	;# 
    66  001C                     	;# 
    67  001E                     	;# 
    68  001F                     	;# 
    69  008C                     	;# 
    70  008D                     	;# 
    71  0091                     	;# 
    72  0092                     	;# 
    73  0093                     	;# 
    74  0094                     	;# 
    75  0095                     	;# 
    76  0096                     	;# 
    77  0097                     	;# 
    78  0098                     	;# 
    79  0099                     	;# 
    80  009A                     	;# 
    81  009B                     	;# 
    82  009B                     	;# 
    83  009C                     	;# 
    84  009D                     	;# 
    85  009E                     	;# 
    86  010C                     	;# 
    87  010D                     	;# 
    88  0111                     	;# 
    89  0112                     	;# 
    90  0113                     	;# 
    91  0114                     	;# 
    92  0115                     	;# 
    93  0116                     	;# 
    94  0117                     	;# 
    95  0118                     	;# 
    96  0119                     	;# 
    97  011A                     	;# 
    98  011B                     	;# 
    99  011D                     	;# 
   100  011E                     	;# 
   101  018C                     	;# 
   102  018D                     	;# 
   103  0191                     	;# 
   104  0191                     	;# 
   105  0192                     	;# 
   106  0193                     	;# 
   107  0193                     	;# 
   108  0193                     	;# 
   109  0194                     	;# 
   110  0195                     	;# 
   111  0196                     	;# 
   112  0199                     	;# 
   113  019A                     	;# 
   114  019B                     	;# 
   115  019B                     	;# 
   116  019B                     	;# 
   117  019B                     	;# 
   118  019C                     	;# 
   119  019C                     	;# 
   120  019D                     	;# 
   121  019E                     	;# 
   122  019F                     	;# 
   123  020C                     	;# 
   124  020D                     	;# 
   125  0211                     	;# 
   126  0211                     	;# 
   127  0212                     	;# 
   128  0212                     	;# 
   129  0213                     	;# 
   130  0213                     	;# 
   131  0214                     	;# 
   132  0214                     	;# 
   133  0215                     	;# 
   134  0215                     	;# 
   135  0215                     	;# 
   136  0216                     	;# 
   137  0216                     	;# 
   138  0217                     	;# 
   139  0217                     	;# 
   140  0219                     	;# 
   141  021A                     	;# 
   142  021B                     	;# 
   143  021C                     	;# 
   144  021D                     	;# 
   145  021E                     	;# 
   146  021F                     	;# 
   147  0291                     	;# 
   148  0291                     	;# 
   149  0292                     	;# 
   150  0293                     	;# 
   151  0294                     	;# 
   152  0295                     	;# 
   153  0295                     	;# 
   154  0296                     	;# 
   155  0298                     	;# 
   156  0298                     	;# 
   157  0299                     	;# 
   158  029A                     	;# 
   159  029B                     	;# 
   160  029C                     	;# 
   161  029C                     	;# 
   162  029D                     	;# 
   163  029E                     	;# 
   164  029E                     	;# 
   165  0311                     	;# 
   166  0311                     	;# 
   167  0312                     	;# 
   168  0313                     	;# 
   169  0318                     	;# 
   170  0318                     	;# 
   171  0319                     	;# 
   172  031A                     	;# 
   173  0394                     	;# 
   174  0395                     	;# 
   175  0396                     	;# 
   176  039A                     	;# 
   177  039C                     	;# 
   178  039D                     	;# 
   179  039E                     	;# 
   180  039F                     	;# 
   181  0415                     	;# 
   182  0416                     	;# 
   183  0417                     	;# 
   184  041C                     	;# 
   185  041D                     	;# 
   186  041E                     	;# 
   187  0FE4                     	;# 
   188  0FE5                     	;# 
   189  0FE6                     	;# 
   190  0FE7                     	;# 
   191  0FE8                     	;# 
   192  0FE9                     	;# 
   193  0FEA                     	;# 
   194  0FEB                     	;# 
   195  0FED                     	;# 
   196  0FEE                     	;# 
   197  0FEF                     	;_led_disp
   198                           
   199                           	psect	idataBIGRAM
   200  042B                     __pidataBIGRAM:	
   201                           
   202                           ;initializer for _led_disp
   203  042B  3401               	retlw	1
   204  042C  3400               	retlw	0
   205  042D  3401               	retlw	1
   206  042E  3400               	retlw	0
   207  042F  3401               	retlw	1
   208  0430  3400               	retlw	0
   209  0431  3401               	retlw	1
   210  0432  3400               	retlw	0
   211  0433  3401               	retlw	1
   212  0434  3400               	retlw	0
   213  0435  3401               	retlw	1
   214  0436  3400               	retlw	0
   215  0437  3400               	retlw	0
   216  0438  3400               	retlw	0
   217  0439  3400               	retlw	0
   218  043A  3400               	retlw	0
   219  043B  3401               	retlw	1
   220  043C  3400               	retlw	0
   221  043D  3401               	retlw	1
   222  043E  3400               	retlw	0
   223  043F  3400               	retlw	0
   224  0440  3400               	retlw	0
   225  0441  3400               	retlw	0
   226  0442  3400               	retlw	0
   227  0443  3400               	retlw	0
   228  0444  3400               	retlw	0
   229  0445  3400               	retlw	0
   230  0446  3400               	retlw	0
   231  0447  3401               	retlw	1
   232  0448  3400               	retlw	0
   233  0449  3401               	retlw	1
   234  044A  3400               	retlw	0
   235  044B  3400               	retlw	0
   236  044C  3400               	retlw	0
   237  044D  3401               	retlw	1
   238  044E  3400               	retlw	0
   239  044F  3401               	retlw	1
   240  0450  3400               	retlw	0
   241  0451  3400               	retlw	0
   242  0452  3400               	retlw	0
   243  0453  3401               	retlw	1
   244  0454  3400               	retlw	0
   245  0455  3401               	retlw	1
   246  0456  3400               	retlw	0
   247  0457  3401               	retlw	1
   248  0458  3400               	retlw	0
   249  0459  3401               	retlw	1
   250  045A  3400               	retlw	0
   251  045B  3401               	retlw	1
   252  045C  3400               	retlw	0
   253  045D  3400               	retlw	0
   254  045E  3400               	retlw	0
   255  045F  3400               	retlw	0
   256  0460  3400               	retlw	0
   257  0461  3401               	retlw	1
   258  0462  3400               	retlw	0
   259  0463  3400               	retlw	0
   260  0464  3400               	retlw	0
   261  0465  3401               	retlw	1
   262  0466  3400               	retlw	0
   263  0467  3401               	retlw	1
   264  0468  3400               	retlw	0
   265  0469  3400               	retlw	0
   266  046A  3400               	retlw	0
   267  046B  3400               	retlw	0
   268  046C  3400               	retlw	0
   269  046D  3401               	retlw	1
   270  046E  3400               	retlw	0
   271  046F  3401               	retlw	1
   272  0470  3400               	retlw	0
   273  0471  3401               	retlw	1
   274  0472  3400               	retlw	0
   275  0473  3400               	retlw	0
   276  0474  3400               	retlw	0
   277  0475  3401               	retlw	1
   278  0476  3400               	retlw	0
   279  0477  3401               	retlw	1
   280  0478  3400               	retlw	0
   281  0479  3400               	retlw	0
   282  047A  3400               	retlw	0
   283  047B  3401               	retlw	1
   284  047C  3400               	retlw	0
   285  047D  3401               	retlw	1
   286  047E  3400               	retlw	0
   287  047F  3400               	retlw	0
   288  0480  3400               	retlw	0
   289  0481  3400               	retlw	0
   290  0482  3400               	retlw	0
   291  0483  3401               	retlw	1
   292  0484  3400               	retlw	0
   293  0485  3401               	retlw	1
   294  0486  3400               	retlw	0
   295  0487  3401               	retlw	1
   296  0488  3400               	retlw	0
   297  0489  3401               	retlw	1
   298  048A  3400               	retlw	0
   299  048B  3401               	retlw	1
   300  048C  3400               	retlw	0
   301  048D  3401               	retlw	1
   302  048E  3400               	retlw	0
   303  048F  3401               	retlw	1
   304  0490  3400               	retlw	0
   305  0491  3401               	retlw	1
   306  0492  3400               	retlw	0
   307  0493  3400               	retlw	0
   308  0494  3400               	retlw	0
   309  0495  3400               	retlw	0
   310  0496  3400               	retlw	0
   311  0497  3400               	retlw	0
   312  0498  3400               	retlw	0
   313  0499  3400               	retlw	0
   314  049A  3400               	retlw	0
   315  049B  3401               	retlw	1
   316  049C  3400               	retlw	0
   317  049D  3401               	retlw	1
   318  049E  3400               	retlw	0
   319  049F  3401               	retlw	1
   320  04A0  3400               	retlw	0
   321  04A1  3401               	retlw	1
   322  04A2  3400               	retlw	0
   323  04A3  3401               	retlw	1
   324  04A4  3400               	retlw	0
   325  04A5  3401               	retlw	1
   326  04A6  3400               	retlw	0
   327  04A7  3401               	retlw	1
   328  04A8  3400               	retlw	0
   329  04A9  3401               	retlw	1
   330  04AA  3400               	retlw	0
   331  04AB  3401               	retlw	1
   332  04AC  3400               	retlw	0
   333  04AD  3401               	retlw	1
   334  04AE  3400               	retlw	0
   335  04AF  3401               	retlw	1
   336  04B0  3400               	retlw	0
   337  04B1  3400               	retlw	0
   338  04B2  3400               	retlw	0
   339  04B3  3401               	retlw	1
   340  04B4  3400               	retlw	0
   341  04B5  3401               	retlw	1
   342  04B6  3400               	retlw	0
   343  04B7  3400               	retlw	0
   344  04B8  3400               	retlw	0
   345  04B9  3400               	retlw	0
   346  04BA  3400               	retlw	0
   347  04BB  3400               	retlw	0
   348  04BC  3400               	retlw	0
   349  04BD  3400               	retlw	0
   350  04BE  3400               	retlw	0
   351  04BF  3400               	retlw	0
   352  04C0  3400               	retlw	0
   353  04C1  3400               	retlw	0
   354  04C2  3400               	retlw	0
   355  04C3  3400               	retlw	0
   356  04C4  3400               	retlw	0
   357  04C5  3401               	retlw	1
   358  04C6  3400               	retlw	0
   359  04C7  3400               	retlw	0
   360  04C8  3400               	retlw	0
   361  04C9  3400               	retlw	0
   362  04CA  3400               	retlw	0
   363  04CB  3401               	retlw	1
   364  04CC  3400               	retlw	0
   365  04CD  3401               	retlw	1
   366  04CE  3400               	retlw	0
   367  04CF  3401               	retlw	1
   368  04D0  3400               	retlw	0
   369  04D1  3401               	retlw	1
   370  04D2  3400               	retlw	0
   371  000C                     _PORTA	set	12
   372  000D                     _PORTB	set	13
   373  0060                     _RA0	set	96
   374  0061                     _RA1	set	97
   375  0062                     _RA2	set	98
   376  0063                     _RA3	set	99
   377  0066                     _RA6	set	102
   378  0067                     _RA7	set	103
   379  006C                     _RB4	set	108
   380  006D                     _RB5	set	109
   381  006E                     _RB6	set	110
   382  006F                     _RB7	set	111
   383  009D                     _ADCON0	set	157
   384  009E                     _ADCON1	set	158
   385  009C                     _ADRESH	set	156
   386  009B                     _ADRESL	set	155
   387  0099                     _OSCCON	set	153
   388  008C                     _TRISA	set	140
   389  008D                     _TRISB	set	141
   390  04E9                     _GO_nDONE	set	1257
   391  018C                     _ANSELA	set	396
   392  018D                     _ANSELB	set	397
   393                           
   394                           ; #config settings
   395  0000                     
   396                           	psect	cinit
   397  07F0                     start_initialization:	
   398  07F0                     __initialization:		;BIGRAM
   399                           
   400                           ; Initialize objects allocated to BIGRAM
   401  07F0  302B               	movlw	low __pidataBIGRAM
   402  07F1  0084               	movwf	4
   403  07F2  3084               	movlw	(high __pidataBIGRAM)| (0+128)
   404  07F3  0085               	movwf	5
   405  07F4  30C8               	movlw	low (0+8392)
   406  07F5  0086               	movwf	6
   407  07F6  3020               	movlw	high (0+8392)
   408  07F7  0087               	movwf	7
   409  07F8  3000               	movlw	0
   410  07F9  00FF               	movwf	btemp+1
   411  07FA  30A8               	movlw	168
   412  07FB  3181  215F         	fcall	init_ram
   413  07FD                     end_of_initialization:	
   414                           ;End of C runtime variable initialization code
   415                           
   416  07FD                     __end_of__initialization:	
   417  07FD  0020               	movlb	0
   418  07FE  3181  2918         	ljmp	_main	;jump to C main() function
   419                           
   420                           	psect	inittext
   421  015F                     init_ram:	
   422  015F  00FE               	movwf	126
   423  0160                     initloop:	
   424  0160  0012               	moviw fsr0++
   425  0161  001E               	movwi fsr1++
   426  0162  3001               	movlw	1
   427  0163  02FE               	subwf	126,f
   428  0164  3000               	movlw	0
   429  0165  3BFF               	subwfb	127,f
   430  0166  087F               	movf	127,w
   431  0167  047E               	iorwf	126,w
   432  0168  1903               	btfsc	3,2
   433  0169  3400               	retlw	0
   434  016A  2960               	goto	initloop
   435                           
   436                           	psect	cstackCOMMON
   437  0070                     __pcstackCOMMON:	
   438  0070                     ?___ftge:	
   439  0070                     ?_init:	
   440                           ; 1 bit 
   441                           
   442  0070                     ??_init:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ?_loop:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     ?_open:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0070                     ?_close:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0070                     ??_close:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0070                     ?_disp_a:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0070                     ?_disp_b:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0070                     ?_disp_c:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  0070                     ?_disp_d:	
   467                           ; 1 bytes @ 0x0
   468                           
   469  0070                     ?_disp_e:	
   470                           ; 1 bytes @ 0x0
   471                           
   472  0070                     ?_disp_f:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0070                     ?_disp_g:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0070                     ?_disp_dp:	
   479                           ; 1 bytes @ 0x0
   480                           
   481  0070                     ?_main:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  0070                     ?_wait:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  0070                     ?_adconv:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0070                     ?___wmul:	
   491                           ; 2 bytes @ 0x0
   492                           
   493  0070                     ?___ftpack:	
   494                           ; 2 bytes @ 0x0
   495                           
   496  0070                     wait@wait_time:	
   497                           ; 3 bytes @ 0x0
   498                           
   499  0070                     disp_a@sw:	
   500                           ; 2 bytes @ 0x0
   501                           
   502  0070                     disp_b@sw:	
   503                           ; 2 bytes @ 0x0
   504                           
   505  0070                     disp_c@sw:	
   506                           ; 2 bytes @ 0x0
   507                           
   508  0070                     disp_d@sw:	
   509                           ; 2 bytes @ 0x0
   510                           
   511  0070                     disp_e@sw:	
   512                           ; 2 bytes @ 0x0
   513                           
   514  0070                     disp_f@sw:	
   515                           ; 2 bytes @ 0x0
   516                           
   517  0070                     disp_g@sw:	
   518                           ; 2 bytes @ 0x0
   519                           
   520  0070                     disp_dp@sw:	
   521                           ; 2 bytes @ 0x0
   522                           
   523  0070                     open@select:	
   524                           ; 2 bytes @ 0x0
   525                           
   526  0070                     ___wmul@multiplier:	
   527                           ; 2 bytes @ 0x0
   528                           
   529  0070                     ___ftpack@arg:	
   530                           ; 2 bytes @ 0x0
   531                           
   532  0070                     ___ftge@ff1:	
   533                           ; 3 bytes @ 0x0
   534                           
   535                           
   536                           ; 3 bytes @ 0x0
   537  0070                     	ds	2
   538  0072                     ??_adconv:	
   539  0072                     ??_open:	
   540                           ; 1 bytes @ 0x2
   541                           
   542  0072                     ??_disp_a:	
   543                           ; 1 bytes @ 0x2
   544                           
   545  0072                     ??_disp_b:	
   546                           ; 1 bytes @ 0x2
   547                           
   548  0072                     ??_disp_c:	
   549                           ; 1 bytes @ 0x2
   550                           
   551  0072                     ??_disp_d:	
   552                           ; 1 bytes @ 0x2
   553                           
   554  0072                     ??_disp_e:	
   555                           ; 1 bytes @ 0x2
   556                           
   557  0072                     ??_disp_f:	
   558                           ; 1 bytes @ 0x2
   559                           
   560  0072                     ??_disp_g:	
   561                           ; 1 bytes @ 0x2
   562                           
   563  0072                     ??_disp_dp:	
   564                           ; 1 bytes @ 0x2
   565                           
   566  0072                     ??_wait:	
   567                           ; 1 bytes @ 0x2
   568                           
   569  0072                     ___wmul@multiplicand:	
   570                           ; 1 bytes @ 0x2
   571                           
   572                           
   573                           ; 2 bytes @ 0x2
   574  0072                     	ds	1
   575  0073                     ___ftpack@exp:	
   576  0073                     ___ftge@ff2:	
   577                           ; 1 bytes @ 0x3
   578                           
   579                           
   580                           ; 3 bytes @ 0x3
   581  0073                     	ds	1
   582  0074                     ??___wmul:	
   583  0074                     ___ftpack@sign:	
   584                           ; 1 bytes @ 0x4
   585                           
   586  0074                     wait@i:	
   587                           ; 1 bytes @ 0x4
   588                           
   589  0074                     ___wmul@product:	
   590                           ; 2 bytes @ 0x4
   591                           
   592                           
   593                           ; 2 bytes @ 0x4
   594  0074                     	ds	1
   595  0075                     ??___ftpack:	
   596                           
   597                           ; 1 bytes @ 0x5
   598  0075                     	ds	1
   599  0076                     ?_set_disp:	
   600  0076                     ??___ftge:	
   601                           ; 1 bytes @ 0x6
   602                           
   603  0076                     set_disp@disp:	
   604                           ; 1 bytes @ 0x6
   605                           
   606                           
   607                           ; 2 bytes @ 0x6
   608  0076                     	ds	2
   609  0078                     ?___awtoft:	
   610  0078                     set_disp@dp:	
   611                           ; 3 bytes @ 0x8
   612                           
   613  0078                     ___awtoft@c:	
   614                           ; 2 bytes @ 0x8
   615                           
   616                           
   617                           ; 2 bytes @ 0x8
   618  0078                     	ds	1
   619  0079                     adconv@temp:	
   620                           
   621                           ; 2 bytes @ 0x9
   622  0079                     	ds	1
   623  007A                     ??_set_disp:	
   624                           
   625                           ; 1 bytes @ 0xA
   626  007A                     	ds	1
   627  007B                     ??___awtoft:	
   628                           
   629                           ; 1 bytes @ 0xB
   630  007B                     	ds	2
   631  007D                     ___awtoft@sign:	
   632                           
   633                           ; 1 bytes @ 0xD
   634  007D                     	ds	1
   635  007E                     ??_loop:	
   636  007E                     ??_daconv:	
   637                           ; 1 bytes @ 0xE
   638                           
   639  007E                     ??_main:	
   640                           ; 1 bytes @ 0xE
   641                           
   642                           
   643                           	psect	cstackBANK0
   644  0020                     __pcstackBANK0:	
   645                           ; 1 bytes @ 0xE
   646                           
   647  0020                     ?___ftmul:	
   648  0020                     ___ftmul@f1:	
   649                           ; 3 bytes @ 0x0
   650                           
   651                           
   652                           ; 3 bytes @ 0x0
   653  0020                     	ds	3
   654  0023                     ___ftmul@f2:	
   655                           
   656                           ; 3 bytes @ 0x3
   657  0023                     	ds	3
   658  0026                     ??___ftmul:	
   659                           
   660                           ; 1 bytes @ 0x6
   661  0026                     	ds	4
   662  002A                     ___ftmul@exp:	
   663                           
   664                           ; 1 bytes @ 0xA
   665  002A                     	ds	1
   666  002B                     ___ftmul@f3_as_product:	
   667                           
   668                           ; 3 bytes @ 0xB
   669  002B                     	ds	3
   670  002E                     ___ftmul@cntr:	
   671                           
   672                           ; 1 bytes @ 0xE
   673  002E                     	ds	1
   674  002F                     ___ftmul@sign:	
   675                           
   676                           ; 1 bytes @ 0xF
   677  002F                     	ds	1
   678  0030                     ?___ftdiv:	
   679  0030                     ___ftdiv@f2:	
   680                           ; 3 bytes @ 0x10
   681                           
   682                           
   683                           ; 3 bytes @ 0x10
   684  0030                     	ds	3
   685  0033                     ___ftdiv@f1:	
   686                           
   687                           ; 3 bytes @ 0x13
   688  0033                     	ds	3
   689  0036                     ??___ftdiv:	
   690                           
   691                           ; 1 bytes @ 0x16
   692  0036                     	ds	4
   693  003A                     ___ftdiv@cntr:	
   694                           
   695                           ; 1 bytes @ 0x1A
   696  003A                     	ds	1
   697  003B                     ___ftdiv@f3:	
   698                           
   699                           ; 3 bytes @ 0x1B
   700  003B                     	ds	3
   701  003E                     ___ftdiv@exp:	
   702                           
   703                           ; 1 bytes @ 0x1E
   704  003E                     	ds	1
   705  003F                     ___ftdiv@sign:	
   706                           
   707                           ; 1 bytes @ 0x1F
   708  003F                     	ds	1
   709  0040                     ?_daconv:	
   710  0040                     ?___fttol:	
   711                           ; 3 bytes @ 0x20
   712                           
   713  0040                     daconv@digital:	
   714                           ; 4 bytes @ 0x20
   715                           
   716  0040                     ___fttol@f1:	
   717                           ; 2 bytes @ 0x20
   718                           
   719                           
   720                           ; 3 bytes @ 0x20
   721  0040                     	ds	3
   722  0043                     daconv@analog:	
   723                           
   724                           ; 3 bytes @ 0x23
   725  0043                     	ds	1
   726  0044                     ??___fttol:	
   727                           
   728                           ; 1 bytes @ 0x24
   729  0044                     	ds	4
   730  0048                     ___fttol@sign1:	
   731                           
   732                           ; 1 bytes @ 0x28
   733  0048                     	ds	1
   734  0049                     ___fttol@lval:	
   735                           
   736                           ; 4 bytes @ 0x29
   737  0049                     	ds	4
   738  004D                     ___fttol@exp1:	
   739                           
   740                           ; 1 bytes @ 0x2D
   741  004D                     	ds	1
   742  004E                     ?___awmod:	
   743  004E                     ___awmod@divisor:	
   744                           ; 2 bytes @ 0x2E
   745                           
   746                           
   747                           ; 2 bytes @ 0x2E
   748  004E                     	ds	2
   749  0050                     ___awmod@dividend:	
   750                           
   751                           ; 2 bytes @ 0x30
   752  0050                     	ds	2
   753  0052                     ??___awmod:	
   754                           
   755                           ; 1 bytes @ 0x32
   756  0052                     	ds	1
   757  0053                     ___awmod@counter:	
   758                           
   759                           ; 1 bytes @ 0x33
   760  0053                     	ds	1
   761  0054                     ___awmod@sign:	
   762                           
   763                           ; 1 bytes @ 0x34
   764  0054                     	ds	1
   765  0055                     ?_disp:	
   766  0055                     disp@num:	
   767                           ; 1 bytes @ 0x35
   768                           
   769                           
   770                           ; 3 bytes @ 0x35
   771  0055                     	ds	3
   772  0058                     ??_disp:	
   773                           
   774                           ; 1 bytes @ 0x38
   775  0058                     	ds	6
   776  005E                     disp@dp:	
   777                           
   778                           ; 2 bytes @ 0x3E
   779  005E                     	ds	2
   780  0060                     disp@over:	
   781                           
   782                           ; 2 bytes @ 0x40
   783  0060                     	ds	2
   784  0062                     disp@dp_index:	
   785                           
   786                           ; 2 bytes @ 0x42
   787  0062                     	ds	2
   788  0064                     disp@digits:	
   789                           
   790                           ; 8 bytes @ 0x44
   791  0064                     	ds	8
   792  006C                     disp@i:	
   793                           
   794                           ; 2 bytes @ 0x4C
   795  006C                     	ds	2
   796                           
   797                           	psect	maintext
   798  0118                     __pmaintext:	
   799 ;;
   800 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   801 ;;
   802 ;; *************** function _main *****************
   803 ;; Defined at:
   804 ;;		line 66 in file "main.c"
   805 ;; Parameters:    Size  Location     Type
   806 ;;		None
   807 ;; Auto vars:     Size  Location     Type
   808 ;;		None
   809 ;; Return value:  Size  Location     Type
   810 ;;                  1    wreg      void 
   811 ;; Registers used:
   812 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   813 ;; Tracked objects:
   814 ;;		On entry : B1F/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   818 ;;      Params:         0       0       0       0       0       0
   819 ;;      Locals:         0       0       0       0       0       0
   820 ;;      Temps:          0       0       0       0       0       0
   821 ;;      Totals:         0       0       0       0       0       0
   822 ;;Total ram usage:        0 bytes
   823 ;; Hardware stack levels required when called:    4
   824 ;; This function calls:
   825 ;;		_init
   826 ;;		_loop
   827 ;; This function is called by:
   828 ;;		Startup code after reset
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832                           
   833                           ;psect for function _main
   834  0118                     _main:	
   835                           
   836                           ;main.c: 67: init();
   837                           
   838                           ;incstack = 0
   839                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   840  0118  3181  2180  3181   	fcall	_init
   841  011B                     l1379:	
   842                           ;main.c: 69: while(1) {
   843                           
   844                           
   845                           ;main.c: 70: loop();
   846  011B  3181  216B  3181   	fcall	_loop
   847  011E  291B               	goto	l1379
   848  011F                     __end_of_main:	
   849                           ;main.c: 71: }
   850                           ;main.c: 73: return;
   851                           
   852                           
   853                           	psect	text1
   854  016B                     __ptext1:	
   855 ;; *************** function _loop *****************
   856 ;; Defined at:
   857 ;;		line 90 in file "main.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;		None
   860 ;; Auto vars:     Size  Location     Type
   861 ;;		None
   862 ;; Return value:  Size  Location     Type
   863 ;;                  1    wreg      void 
   864 ;; Registers used:
   865 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   871 ;;      Params:         0       0       0       0       0       0
   872 ;;      Locals:         0       0       0       0       0       0
   873 ;;      Temps:          0       0       0       0       0       0
   874 ;;      Totals:         0       0       0       0       0       0
   875 ;;Total ram usage:        0 bytes
   876 ;; Hardware stack levels used:    1
   877 ;; Hardware stack levels required when called:    3
   878 ;; This function calls:
   879 ;;		_adconv
   880 ;;		_daconv
   881 ;;		_disp
   882 ;; This function is called by:
   883 ;;		_main
   884 ;; This function uses a non-reentrant model
   885 ;;
   886                           
   887                           
   888                           ;psect for function _loop
   889  016B                     _loop:	
   890                           
   891                           ;main.c: 91: disp(daconv(adconv()));
   892                           
   893                           ;incstack = 0
   894                           ; Regs used in _loop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   895  016B  3182  220C  3181   	fcall	_adconv
   896  016E  0871               	movf	?_adconv+1,w
   897  016F  0020               	movlb	0	; select bank0
   898  0170  00C1               	movwf	daconv@digital+1
   899  0171  0870               	movf	?_adconv,w
   900  0172  00C0               	movwf	daconv@digital
   901  0173  3182  2230  3181   	fcall	_daconv
   902  0176  0020               	movlb	0	; select bank0
   903  0177  0840               	movf	?_daconv,w
   904  0178  00D5               	movwf	disp@num
   905  0179  0841               	movf	?_daconv+1,w
   906  017A  00D6               	movwf	disp@num+1
   907  017B  0842               	movf	?_daconv+2,w
   908  017C  00D7               	movwf	disp@num+2
   909  017D  3186  2630         	fcall	_disp
   910  017F  0008               	return
   911  0180                     __end_of_loop:	
   912                           
   913                           	psect	text2
   914  0630                     __ptext2:	
   915 ;; *************** function _disp *****************
   916 ;; Defined at:
   917 ;;		line 101 in file "main.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;  num             3   53[BANK0 ] void 
   920 ;; Auto vars:     Size  Location     Type
   921 ;;  digits          8   68[BANK0 ] int [4]
   922 ;;  i               2   76[BANK0 ] int 
   923 ;;  dp_index        2   66[BANK0 ] int 
   924 ;;  over            2   64[BANK0 ] int 
   925 ;;  dp              2   62[BANK0 ] int 
   926 ;; Return value:  Size  Location     Type
   927 ;;                  1    wreg      void 
   928 ;; Registers used:
   929 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   930 ;; Tracked objects:
   931 ;;		On entry : 0/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   935 ;;      Params:         0       3       0       0       0       0
   936 ;;      Locals:         0      16       0       0       0       0
   937 ;;      Temps:          0       6       0       0       0       0
   938 ;;      Totals:         0      25       0       0       0       0
   939 ;;Total ram usage:       25 bytes
   940 ;; Hardware stack levels used:    1
   941 ;; Hardware stack levels required when called:    2
   942 ;; This function calls:
   943 ;;		___awmod
   944 ;;		___ftdiv
   945 ;;		___ftge
   946 ;;		___ftmul
   947 ;;		___fttol
   948 ;;		___wmul
   949 ;;		_close
   950 ;;		_open
   951 ;;		_set_disp
   952 ;;		_wait
   953 ;; This function is called by:
   954 ;;		_loop
   955 ;; This function uses a non-reentrant model
   956 ;;
   957                           
   958                           
   959                           ;psect for function _disp
   960  0630                     _disp:	
   961                           
   962                           ;main.c: 102: int digits[4];
   963                           ;main.c: 103: int i;
   964                           ;main.c: 104: int dp;
   965                           ;main.c: 105: int dp_index=-1;
   966                           
   967                           ;incstack = 0
   968                           ; Regs used in _disp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   969  0630  30FF               	movlw	255
   970  0631  0020               	movlb	0	; select bank0
   971  0632  00E2               	movwf	disp@dp_index
   972  0633  30FF               	movlw	255
   973  0634  00E3               	movwf	disp@dp_index+1
   974                           
   975                           ;main.c: 106: int over=0;
   976  0635  01E0               	clrf	disp@over
   977  0636  01E1               	clrf	disp@over+1
   978                           
   979                           ;main.c: 108: if (num >= 10000) {
   980  0637  0855               	movf	disp@num,w
   981  0638  00F0               	movwf	___ftge@ff1
   982  0639  0856               	movf	disp@num+1,w
   983  063A  00F1               	movwf	___ftge@ff1+1
   984  063B  0857               	movf	disp@num+2,w
   985  063C  00F2               	movwf	___ftge@ff1+2
   986  063D  3040               	movlw	64
   987  063E  00F3               	movwf	___ftge@ff2
   988  063F  301C               	movlw	28
   989  0640  00F4               	movwf	___ftge@ff2+1
   990  0641  3046               	movlw	70
   991  0642  00F5               	movwf	___ftge@ff2+2
   992  0643  3182  2265  3186   	fcall	___ftge
   993  0646  1C03               	btfss	3,0
   994  0647  2E5E               	goto	l1331
   995                           
   996                           ;main.c: 109: digits[3] = 10;
   997  0648  300A               	movlw	10
   998  0649  0020               	movlb	0	; select bank0
   999  064A  00EA               	movwf	disp@digits+6
  1000  064B  3000               	movlw	0
  1001  064C  00EB               	movwf	disp@digits+7
  1002                           
  1003                           ;main.c: 110: digits[2] = 10;
  1004  064D  300A               	movlw	10
  1005  064E  00E8               	movwf	disp@digits+4
  1006  064F  3000               	movlw	0
  1007  0650  00E9               	movwf	disp@digits+5
  1008                           
  1009                           ;main.c: 111: digits[1] = 10;
  1010  0651  300A               	movlw	10
  1011  0652  00E6               	movwf	disp@digits+2
  1012  0653  3000               	movlw	0
  1013  0654  00E7               	movwf	disp@digits+3
  1014                           
  1015                           ;main.c: 112: digits[0] = 11;
  1016  0655  300B               	movlw	11
  1017  0656  00E4               	movwf	disp@digits
  1018  0657  3000               	movlw	0
  1019  0658  00E5               	movwf	disp@digits+1
  1020                           
  1021                           ;main.c: 113: over = 1;
  1022  0659  3001               	movlw	1
  1023  065A  00E0               	movwf	disp@over
  1024  065B  3000               	movlw	0
  1025  065C  00E1               	movwf	disp@over+1
  1026                           
  1027                           ;main.c: 114: } else if (num >= 1000) {
  1028  065D  2EE1               	goto	l1351
  1029  065E                     l1331:	
  1030  065E  0020               	movlb	0	; select bank0
  1031  065F  0855               	movf	disp@num,w
  1032  0660  00F0               	movwf	___ftge@ff1
  1033  0661  0856               	movf	disp@num+1,w
  1034  0662  00F1               	movwf	___ftge@ff1+1
  1035  0663  0857               	movf	disp@num+2,w
  1036  0664  00F2               	movwf	___ftge@ff1+2
  1037  0665  3000               	movlw	0
  1038  0666  00F3               	movwf	___ftge@ff2
  1039  0667  307A               	movlw	122
  1040  0668  00F4               	movwf	___ftge@ff2+1
  1041  0669  3044               	movlw	68
  1042  066A  00F5               	movwf	___ftge@ff2+2
  1043  066B  3182  2265  3186   	fcall	___ftge
  1044  066E  1803               	btfsc	3,0
  1045  066F  2EE1               	goto	l1351
  1046                           
  1047                           ;main.c: 116: } else if (num >= 100) {
  1048  0670  0020               	movlb	0	; select bank0
  1049  0671  0855               	movf	disp@num,w
  1050  0672  00F0               	movwf	___ftge@ff1
  1051  0673  0856               	movf	disp@num+1,w
  1052  0674  00F1               	movwf	___ftge@ff1+1
  1053  0675  0857               	movf	disp@num+2,w
  1054  0676  00F2               	movwf	___ftge@ff1+2
  1055  0677  3000               	movlw	0
  1056  0678  00F3               	movwf	___ftge@ff2
  1057  0679  30C8               	movlw	200
  1058  067A  00F4               	movwf	___ftge@ff2+1
  1059  067B  3042               	movlw	66
  1060  067C  00F5               	movwf	___ftge@ff2+2
  1061  067D  3182  2265  3186   	fcall	___ftge
  1062  0680  1C03               	btfss	3,0
  1063  0681  2E9B               	goto	l1341
  1064                           
  1065                           ;main.c: 117: num *= 10;
  1066  0682  3000               	movlw	0
  1067  0683  0020               	movlb	0	; select bank0
  1068  0684  00A0               	movwf	___ftmul@f1
  1069  0685  3020               	movlw	32
  1070  0686  00A1               	movwf	___ftmul@f1+1
  1071  0687  3041               	movlw	65
  1072  0688  00A2               	movwf	___ftmul@f1+2
  1073  0689  0855               	movf	disp@num,w
  1074  068A  00A3               	movwf	___ftmul@f2
  1075  068B  0856               	movf	disp@num+1,w
  1076  068C  00A4               	movwf	___ftmul@f2+1
  1077  068D  0857               	movf	disp@num+2,w
  1078  068E  00A5               	movwf	___ftmul@f2+2
  1079  068F  3185  257C  3186   	fcall	___ftmul
  1080  0692  0020               	movlb	0	; select bank0
  1081  0693  0820               	movf	?___ftmul,w
  1082  0694  00D5               	movwf	disp@num
  1083  0695  0821               	movf	?___ftmul+1,w
  1084  0696  00D6               	movwf	disp@num+1
  1085  0697  0822               	movf	?___ftmul+2,w
  1086  0698  00D7               	movwf	disp@num+2
  1087                           
  1088                           ;main.c: 118: dp_index = 1;
  1089  0699  3001               	movlw	1
  1090  069A  2EDE               	goto	L2
  1091  069B                     l1341:	
  1092                           ;main.c: 119: } else if (num >= 10) {
  1093                           
  1094  069B  0020               	movlb	0	; select bank0
  1095  069C  0855               	movf	disp@num,w
  1096  069D  00F0               	movwf	___ftge@ff1
  1097  069E  0856               	movf	disp@num+1,w
  1098  069F  00F1               	movwf	___ftge@ff1+1
  1099  06A0  0857               	movf	disp@num+2,w
  1100  06A1  00F2               	movwf	___ftge@ff1+2
  1101  06A2  3000               	movlw	0
  1102  06A3  00F3               	movwf	___ftge@ff2
  1103  06A4  3020               	movlw	32
  1104  06A5  00F4               	movwf	___ftge@ff2+1
  1105  06A6  3041               	movlw	65
  1106  06A7  00F5               	movwf	___ftge@ff2+2
  1107  06A8  3182  2265  3186   	fcall	___ftge
  1108  06AB  1C03               	btfss	3,0
  1109  06AC  2EC6               	goto	l1347
  1110                           
  1111                           ;main.c: 120: num *= 100;
  1112  06AD  3000               	movlw	0
  1113  06AE  0020               	movlb	0	; select bank0
  1114  06AF  00A0               	movwf	___ftmul@f1
  1115  06B0  30C8               	movlw	200
  1116  06B1  00A1               	movwf	___ftmul@f1+1
  1117  06B2  3042               	movlw	66
  1118  06B3  00A2               	movwf	___ftmul@f1+2
  1119  06B4  0855               	movf	disp@num,w
  1120  06B5  00A3               	movwf	___ftmul@f2
  1121  06B6  0856               	movf	disp@num+1,w
  1122  06B7  00A4               	movwf	___ftmul@f2+1
  1123  06B8  0857               	movf	disp@num+2,w
  1124  06B9  00A5               	movwf	___ftmul@f2+2
  1125  06BA  3185  257C  3186   	fcall	___ftmul
  1126  06BD  0020               	movlb	0	; select bank0
  1127  06BE  0820               	movf	?___ftmul,w
  1128  06BF  00D5               	movwf	disp@num
  1129  06C0  0821               	movf	?___ftmul+1,w
  1130  06C1  00D6               	movwf	disp@num+1
  1131  06C2  0822               	movf	?___ftmul+2,w
  1132  06C3  00D7               	movwf	disp@num+2
  1133                           
  1134                           ;main.c: 121: dp_index = 2;
  1135  06C4  3002               	movlw	2
  1136  06C5  2EDE               	goto	L2
  1137  06C6                     l1347:	
  1138                           ;main.c: 122: } else {
  1139                           
  1140                           
  1141                           ;main.c: 123: num *= 1000;
  1142  06C6  3000               	movlw	0
  1143  06C7  0020               	movlb	0	; select bank0
  1144  06C8  00A0               	movwf	___ftmul@f1
  1145  06C9  307A               	movlw	122
  1146  06CA  00A1               	movwf	___ftmul@f1+1
  1147  06CB  3044               	movlw	68
  1148  06CC  00A2               	movwf	___ftmul@f1+2
  1149  06CD  0855               	movf	disp@num,w
  1150  06CE  00A3               	movwf	___ftmul@f2
  1151  06CF  0856               	movf	disp@num+1,w
  1152  06D0  00A4               	movwf	___ftmul@f2+1
  1153  06D1  0857               	movf	disp@num+2,w
  1154  06D2  00A5               	movwf	___ftmul@f2+2
  1155  06D3  3185  257C  3186   	fcall	___ftmul
  1156  06D6  0020               	movlb	0	; select bank0
  1157  06D7  0820               	movf	?___ftmul,w
  1158  06D8  00D5               	movwf	disp@num
  1159  06D9  0821               	movf	?___ftmul+1,w
  1160  06DA  00D6               	movwf	disp@num+1
  1161  06DB  0822               	movf	?___ftmul+2,w
  1162  06DC  00D7               	movwf	disp@num+2
  1163                           
  1164                           ;main.c: 124: dp_index = 3;
  1165  06DD  3003               	movlw	3
  1166  06DE                     L2:	
  1167  06DE  00E2               	movwf	disp@dp_index
  1168  06DF  3000               	movlw	0
  1169  06E0  00E3               	movwf	disp@dp_index+1
  1170  06E1                     l1351:	
  1171                           
  1172                           ;main.c: 125: }
  1173                           ;main.c: 127: if (!over) {
  1174  06E1  0020               	movlb	0	; select bank0
  1175  06E2  0860               	movf	disp@over,w
  1176  06E3  0461               	iorwf	disp@over+1,w
  1177  06E4  1D03               	btfss	3,2
  1178  06E5  2F7E               	goto	l1355
  1179                           
  1180                           ;main.c: 128: digits[3] = (int) (num/1000)%10;
  1181  06E6  300A               	movlw	10
  1182  06E7  00CE               	movwf	___awmod@divisor
  1183  06E8  3000               	movlw	0
  1184  06E9  00CF               	movwf	___awmod@divisor+1
  1185  06EA  0855               	movf	disp@num,w
  1186  06EB  00B3               	movwf	___ftdiv@f1
  1187  06EC  0856               	movf	disp@num+1,w
  1188  06ED  00B4               	movwf	___ftdiv@f1+1
  1189  06EE  0857               	movf	disp@num+2,w
  1190  06EF  00B5               	movwf	___ftdiv@f1+2
  1191  06F0  3000               	movlw	0
  1192  06F1  00B0               	movwf	___ftdiv@f2
  1193  06F2  307A               	movlw	122
  1194  06F3  00B1               	movwf	___ftdiv@f2+1
  1195  06F4  3044               	movlw	68
  1196  06F5  00B2               	movwf	___ftdiv@f2+2
  1197  06F6  3184  24D3  3186   	fcall	___ftdiv
  1198  06F9  0020               	movlb	0	; select bank0
  1199  06FA  0830               	movf	?___ftdiv,w
  1200  06FB  00C0               	movwf	___fttol@f1
  1201  06FC  0831               	movf	?___ftdiv+1,w
  1202  06FD  00C1               	movwf	___fttol@f1+1
  1203  06FE  0832               	movf	?___ftdiv+2,w
  1204  06FF  00C2               	movwf	___fttol@f1+2
  1205  0700  3183  23A4  3186   	fcall	___fttol
  1206  0703  0020               	movlb	0	; select bank0
  1207  0704  0841               	movf	?___fttol+1,w
  1208  0705  00D1               	movwf	___awmod@dividend+1
  1209  0706  0840               	movf	?___fttol,w
  1210  0707  00D0               	movwf	___awmod@dividend
  1211  0708  3182  22A0  3186   	fcall	___awmod
  1212  070B  0020               	movlb	0	; select bank0
  1213  070C  084F               	movf	?___awmod+1,w
  1214  070D  00EB               	movwf	disp@digits+7
  1215  070E  084E               	movf	?___awmod,w
  1216  070F  00EA               	movwf	disp@digits+6
  1217                           
  1218                           ;main.c: 129: digits[2] = (int) (num/100)%10;
  1219  0710  300A               	movlw	10
  1220  0711  00CE               	movwf	___awmod@divisor
  1221  0712  3000               	movlw	0
  1222  0713  00CF               	movwf	___awmod@divisor+1
  1223  0714  0855               	movf	disp@num,w
  1224  0715  00B3               	movwf	___ftdiv@f1
  1225  0716  0856               	movf	disp@num+1,w
  1226  0717  00B4               	movwf	___ftdiv@f1+1
  1227  0718  0857               	movf	disp@num+2,w
  1228  0719  00B5               	movwf	___ftdiv@f1+2
  1229  071A  3000               	movlw	0
  1230  071B  00B0               	movwf	___ftdiv@f2
  1231  071C  30C8               	movlw	200
  1232  071D  00B1               	movwf	___ftdiv@f2+1
  1233  071E  3042               	movlw	66
  1234  071F  00B2               	movwf	___ftdiv@f2+2
  1235  0720  3184  24D3  3186   	fcall	___ftdiv
  1236  0723  0020               	movlb	0	; select bank0
  1237  0724  0830               	movf	?___ftdiv,w
  1238  0725  00C0               	movwf	___fttol@f1
  1239  0726  0831               	movf	?___ftdiv+1,w
  1240  0727  00C1               	movwf	___fttol@f1+1
  1241  0728  0832               	movf	?___ftdiv+2,w
  1242  0729  00C2               	movwf	___fttol@f1+2
  1243  072A  3183  23A4  3186   	fcall	___fttol
  1244  072D  0020               	movlb	0	; select bank0
  1245  072E  0841               	movf	?___fttol+1,w
  1246  072F  00D1               	movwf	___awmod@dividend+1
  1247  0730  0840               	movf	?___fttol,w
  1248  0731  00D0               	movwf	___awmod@dividend
  1249  0732  3182  22A0  3186   	fcall	___awmod
  1250  0735  0020               	movlb	0	; select bank0
  1251  0736  084F               	movf	?___awmod+1,w
  1252  0737  00E9               	movwf	disp@digits+5
  1253  0738  084E               	movf	?___awmod,w
  1254  0739  00E8               	movwf	disp@digits+4
  1255                           
  1256                           ;main.c: 130: digits[1] = (int) (num/10)%10;
  1257  073A  300A               	movlw	10
  1258  073B  00CE               	movwf	___awmod@divisor
  1259  073C  3000               	movlw	0
  1260  073D  00CF               	movwf	___awmod@divisor+1
  1261  073E  0855               	movf	disp@num,w
  1262  073F  00B3               	movwf	___ftdiv@f1
  1263  0740  0856               	movf	disp@num+1,w
  1264  0741  00B4               	movwf	___ftdiv@f1+1
  1265  0742  0857               	movf	disp@num+2,w
  1266  0743  00B5               	movwf	___ftdiv@f1+2
  1267  0744  3000               	movlw	0
  1268  0745  00B0               	movwf	___ftdiv@f2
  1269  0746  3020               	movlw	32
  1270  0747  00B1               	movwf	___ftdiv@f2+1
  1271  0748  3041               	movlw	65
  1272  0749  00B2               	movwf	___ftdiv@f2+2
  1273  074A  3184  24D3  3186   	fcall	___ftdiv
  1274  074D  0020               	movlb	0	; select bank0
  1275  074E  0830               	movf	?___ftdiv,w
  1276  074F  00C0               	movwf	___fttol@f1
  1277  0750  0831               	movf	?___ftdiv+1,w
  1278  0751  00C1               	movwf	___fttol@f1+1
  1279  0752  0832               	movf	?___ftdiv+2,w
  1280  0753  00C2               	movwf	___fttol@f1+2
  1281  0754  3183  23A4  3186   	fcall	___fttol
  1282  0757  0020               	movlb	0	; select bank0
  1283  0758  0841               	movf	?___fttol+1,w
  1284  0759  00D1               	movwf	___awmod@dividend+1
  1285  075A  0840               	movf	?___fttol,w
  1286  075B  00D0               	movwf	___awmod@dividend
  1287  075C  3182  22A0  3186   	fcall	___awmod
  1288  075F  0020               	movlb	0	; select bank0
  1289  0760  084F               	movf	?___awmod+1,w
  1290  0761  00E7               	movwf	disp@digits+3
  1291  0762  084E               	movf	?___awmod,w
  1292  0763  00E6               	movwf	disp@digits+2
  1293                           
  1294                           ;main.c: 131: digits[0] = (int) (num)%10;
  1295  0764  300A               	movlw	10
  1296  0765  00CE               	movwf	___awmod@divisor
  1297  0766  3000               	movlw	0
  1298  0767  00CF               	movwf	___awmod@divisor+1
  1299  0768  0855               	movf	disp@num,w
  1300  0769  00C0               	movwf	___fttol@f1
  1301  076A  0856               	movf	disp@num+1,w
  1302  076B  00C1               	movwf	___fttol@f1+1
  1303  076C  0857               	movf	disp@num+2,w
  1304  076D  00C2               	movwf	___fttol@f1+2
  1305  076E  3183  23A4  3186   	fcall	___fttol
  1306  0771  0020               	movlb	0	; select bank0
  1307  0772  0841               	movf	?___fttol+1,w
  1308  0773  00D1               	movwf	___awmod@dividend+1
  1309  0774  0840               	movf	?___fttol,w
  1310  0775  00D0               	movwf	___awmod@dividend
  1311  0776  3182  22A0  3186   	fcall	___awmod
  1312  0779  0020               	movlb	0	; select bank0
  1313  077A  084F               	movf	?___awmod+1,w
  1314  077B  00E5               	movwf	disp@digits+1
  1315  077C  084E               	movf	?___awmod,w
  1316  077D  00E4               	movwf	disp@digits
  1317  077E                     l1355:	
  1318                           
  1319                           ;main.c: 132: }
  1320                           ;main.c: 134: for (i=0; i<4; i++) {
  1321  077E  01EC               	clrf	disp@i
  1322  077F  01ED               	clrf	disp@i+1
  1323  0780  086D               	movf	disp@i+1,w
  1324  0781  3A80               	xorlw	128
  1325  0782  00D8               	movwf	??_disp
  1326  0783  3080               	movlw	128
  1327  0784  0258               	subwf	??_disp,w
  1328  0785  1D03               	skipz
  1329  0786  2F89               	goto	u1695
  1330  0787  3004               	movlw	4
  1331  0788  026C               	subwf	disp@i,w
  1332  0789                     u1695:	
  1333  0789  1803               	btfsc	3,0
  1334  078A  2FED               	goto	l1373
  1335  078B                     l1361:	
  1336                           
  1337                           ;main.c: 135: dp = ((3-i==dp_index) ? (1:0));
  1338  078B  0020               	movlb	0	; select bank0
  1339  078C  096C               	comf	disp@i,w
  1340  078D  00D8               	movwf	??_disp
  1341  078E  096D               	comf	disp@i+1,w
  1342  078F  00D9               	movwf	??_disp+1
  1343  0790  0AD8               	incf	??_disp,f
  1344  0791  1903               	skipnz
  1345  0792  0AD9               	incf	??_disp+1,f
  1346  0793  0858               	movf	??_disp,w
  1347  0794  3E03               	addlw	3
  1348  0795  00DA               	movwf	??_disp+2
  1349  0796  3000               	movlw	0
  1350  0797  3D59               	addwfc	??_disp+1,w
  1351  0798  00DB               	movwf	??_disp+3
  1352  0799  0863               	movf	disp@dp_index+1,w
  1353  079A  065B               	xorwf	??_disp+3,w
  1354  079B  1D03               	skipz
  1355  079C  2F9F               	goto	u1705
  1356  079D  0862               	movf	disp@dp_index,w
  1357  079E  065A               	xorwf	??_disp+2,w
  1358  079F                     u1705:	
  1359  079F  1D03               	btfss	3,2
  1360  07A0  2FA3               	goto	u1700
  1361  07A1  3001               	movlw	1
  1362  07A2  2FA4               	goto	u1710
  1363  07A3                     u1700:	
  1364  07A3  3000               	movlw	0
  1365  07A4                     u1710:	
  1366  07A4  00DC               	movwf	??_disp+4
  1367  07A5  01DD               	clrf	??_disp+5
  1368  07A6  085C               	movf	??_disp+4,w
  1369  07A7  00DE               	movwf	disp@dp
  1370  07A8  085D               	movf	??_disp+5,w
  1371  07A9  00DF               	movwf	disp@dp+1
  1372                           
  1373                           ;main.c: 136: set_disp(led_disp[digits[3-i]],dp);
  1374  07AA  036C               	decf	disp@i,w
  1375  07AB  3AFF               	xorlw	255
  1376  07AC  0709               	addwf	9,w
  1377  07AD  3E06               	addlw	6
  1378  07AE  3E64               	addlw	(low (disp@digits| 0))& (0+255)
  1379  07AF  0086               	movwf	6
  1380  07B0  0187               	clrf	7
  1381  07B1  3F40               	moviw [0]fsr1
  1382  07B2  00F0               	movwf	___wmul@multiplier
  1383  07B3  3F41               	moviw [1]fsr1
  1384  07B4  00F1               	movwf	___wmul@multiplier+1
  1385  07B5  300E               	movlw	14
  1386  07B6  00F2               	movwf	___wmul@multiplicand
  1387  07B7  3000               	movlw	0
  1388  07B8  00F3               	movwf	___wmul@multiplicand+1
  1389  07B9  3181  21B0  3186   	fcall	___wmul
  1390  07BC  30C8               	movlw	200
  1391  07BD  0020               	movlb	0	; select bank0
  1392  07BE  00D8               	movwf	??_disp
  1393  07BF  3020               	movlw	32
  1394  07C0  00D9               	movwf	??_disp+1
  1395  07C1  0870               	movf	?___wmul,w
  1396  07C2  0758               	addwf	??_disp,w
  1397  07C3  00F6               	movwf	set_disp@disp
  1398  07C4  0871               	movf	?___wmul+1,w
  1399  07C5  3D59               	addwfc	??_disp+1,w
  1400  07C6  00F7               	movwf	set_disp@disp+1
  1401  07C7  085F               	movf	disp@dp+1,w
  1402  07C8  00F9               	movwf	set_disp@dp+1
  1403  07C9  085E               	movf	disp@dp,w
  1404  07CA  00F8               	movwf	set_disp@dp
  1405  07CB  3182  22E6  3186   	fcall	_set_disp
  1406                           
  1407                           ;main.c: 137: open(i);
  1408  07CE  0020               	movlb	0	; select bank0
  1409  07CF  086D               	movf	disp@i+1,w
  1410  07D0  00F1               	movwf	open@select+1
  1411  07D1  086C               	movf	disp@i,w
  1412  07D2  00F0               	movwf	open@select
  1413  07D3  3181  21EB  3186   	fcall	_open
  1414                           
  1415                           ;main.c: 138: wait(3);
  1416  07D6  3003               	movlw	3
  1417  07D7  00F0               	movwf	wait@wait_time
  1418  07D8  3000               	movlw	0
  1419  07D9  00F1               	movwf	wait@wait_time+1
  1420  07DA  3181  2198  3186   	fcall	_wait
  1421  07DD  3001               	movlw	1
  1422  07DE  0020               	movlb	0	; select bank0
  1423  07DF  07EC               	addwf	disp@i,f
  1424  07E0  3000               	movlw	0
  1425  07E1  3DED               	addwfc	disp@i+1,f
  1426  07E2  086D               	movf	disp@i+1,w
  1427  07E3  3A80               	xorlw	128
  1428  07E4  00D8               	movwf	??_disp
  1429  07E5  3080               	movlw	128
  1430  07E6  0258               	subwf	??_disp,w
  1431  07E7  1D03               	skipz
  1432  07E8  2FEB               	goto	u1725
  1433  07E9  3004               	movlw	4
  1434  07EA  026C               	subwf	disp@i,w
  1435  07EB                     u1725:	
  1436  07EB  1C03               	skipc
  1437  07EC  2F8B               	goto	l1361
  1438  07ED                     l1373:	
  1439                           
  1440                           ;main.c: 139: }
  1441                           ;main.c: 140: close();
  1442  07ED  3181  2113         	fcall	_close
  1443  07EF  0008               	return
  1444  07F0                     __end_of_disp:	
  1445                           
  1446                           	psect	text3
  1447  0198                     __ptext3:	
  1448 ;; *************** function _wait *****************
  1449 ;; Defined at:
  1450 ;;		line 94 in file "main.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;  wait_time       2    0[COMMON] unsigned int 
  1453 ;; Auto vars:     Size  Location     Type
  1454 ;;  i               2    4[COMMON] int 
  1455 ;; Return value:  Size  Location     Type
  1456 ;;                  1    wreg      void 
  1457 ;; Registers used:
  1458 ;;		wreg, status,2
  1459 ;; Tracked objects:
  1460 ;;		On entry : 0/0
  1461 ;;		On exit  : 0/0
  1462 ;;		Unchanged: 0/0
  1463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1464 ;;      Params:         2       0       0       0       0       0
  1465 ;;      Locals:         2       0       0       0       0       0
  1466 ;;      Temps:          2       0       0       0       0       0
  1467 ;;      Totals:         6       0       0       0       0       0
  1468 ;;Total ram usage:        6 bytes
  1469 ;; Hardware stack levels used:    1
  1470 ;; This function calls:
  1471 ;;		Nothing
  1472 ;; This function is called by:
  1473 ;;		_disp
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           
  1478                           ;psect for function _wait
  1479  0198                     _wait:	
  1480                           
  1481                           ;main.c: 95: int i;
  1482                           ;main.c: 96: for (i=0; i<wait_time; i++) {
  1483                           
  1484                           ;incstack = 0
  1485                           ; Regs used in _wait: [wreg+status,2]
  1486  0198  01F4               	clrf	wait@i
  1487  0199  01F5               	clrf	wait@i+1
  1488  019A                     l95:	
  1489  019A  0871               	movf	wait@wait_time+1,w
  1490  019B  0275               	subwf	wait@i+1,w
  1491  019C  1D03               	skipz
  1492  019D  29A0               	goto	u1155
  1493  019E  0870               	movf	wait@wait_time,w
  1494  019F  0274               	subwf	wait@i,w
  1495  01A0                     u1155:	
  1496  01A0  1803               	btfsc	3,0
  1497  01A1  0008               	return
  1498                           
  1499                           ;main.c: 97: _delay((unsigned long)((1)*(8000000/4000.0)));
  1500  01A2  3003               	movlw	3
  1501  01A3  00F3               	movwf	??_wait+1
  1502  01A4  3097               	movlw	151
  1503  01A5  00F2               	movwf	??_wait
  1504  01A6                     u1737:	
  1505  01A6  0BF2               	decfsz	??_wait,f
  1506  01A7  29A6               	goto	u1737
  1507  01A8  0BF3               	decfsz	??_wait+1,f
  1508  01A9  29A6               	goto	u1737
  1509  01AA  3200               	nop2
  1510  01AB  3001               	movlw	1
  1511  01AC  07F4               	addwf	wait@i,f
  1512  01AD  3000               	movlw	0
  1513  01AE  3DF5               	addwfc	wait@i+1,f
  1514  01AF  299A               	goto	l95
  1515  01B0                     __end_of_wait:	
  1516                           
  1517                           	psect	text4
  1518  02E6                     __ptext4:	
  1519 ;; *************** function _set_disp *****************
  1520 ;; Defined at:
  1521 ;;		line 143 in file "main.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;  disp            2    6[COMMON] PTR int 
  1524 ;;		 -> led_disp(168), 
  1525 ;;  dp              2    8[COMMON] int 
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;		None
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  1    wreg      void 
  1530 ;; Registers used:
  1531 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1537 ;;      Params:         4       0       0       0       0       0
  1538 ;;      Locals:         0       0       0       0       0       0
  1539 ;;      Temps:          0       0       0       0       0       0
  1540 ;;      Totals:         4       0       0       0       0       0
  1541 ;;Total ram usage:        4 bytes
  1542 ;; Hardware stack levels used:    1
  1543 ;; Hardware stack levels required when called:    1
  1544 ;; This function calls:
  1545 ;;		_disp_a
  1546 ;;		_disp_b
  1547 ;;		_disp_c
  1548 ;;		_disp_d
  1549 ;;		_disp_dp
  1550 ;;		_disp_e
  1551 ;;		_disp_f
  1552 ;;		_disp_g
  1553 ;; This function is called by:
  1554 ;;		_disp
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           
  1559                           ;psect for function _set_disp
  1560  02E6                     _set_disp:	
  1561                           
  1562                           ;main.c: 144: disp_a(disp[0]);
  1563                           
  1564                           ;incstack = 0
  1565                           ; Regs used in _set_disp: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1566  02E6  0876               	movf	set_disp@disp,w
  1567  02E7  0086               	movwf	6
  1568  02E8  0877               	movf	set_disp@disp+1,w
  1569  02E9  0087               	movwf	7
  1570  02EA  3F40               	moviw [0]fsr1
  1571  02EB  00F0               	movwf	disp_a@sw
  1572  02EC  3F41               	moviw [1]fsr1
  1573  02ED  00F1               	movwf	disp_a@sw+1
  1574  02EE  3181  211F  3182   	fcall	_disp_a
  1575                           
  1576                           ;main.c: 145: disp_b(disp[1]);
  1577  02F1  0876               	movf	set_disp@disp,w
  1578  02F2  0086               	movwf	6
  1579  02F3  0877               	movf	set_disp@disp+1,w
  1580  02F4  0087               	movwf	7
  1581  02F5  3142               	addfsr 1,2
  1582  02F6  3F40               	moviw [0]fsr1
  1583  02F7  00F0               	movwf	disp_b@sw
  1584  02F8  3F41               	moviw [1]fsr1
  1585  02F9  00F1               	movwf	disp_b@sw+1
  1586  02FA  3181  2127  3182   	fcall	_disp_b
  1587                           
  1588                           ;main.c: 146: disp_c(disp[2]);
  1589  02FD  0876               	movf	set_disp@disp,w
  1590  02FE  0086               	movwf	6
  1591  02FF  0877               	movf	set_disp@disp+1,w
  1592  0300  0087               	movwf	7
  1593  0301  3144               	addfsr 1,4
  1594  0302  3F40               	moviw [0]fsr1
  1595  0303  00F0               	movwf	disp_c@sw
  1596  0304  3F41               	moviw [1]fsr1
  1597  0305  00F1               	movwf	disp_c@sw+1
  1598  0306  3181  212F  3182   	fcall	_disp_c
  1599                           
  1600                           ;main.c: 147: disp_d(disp[3]);
  1601  0309  0876               	movf	set_disp@disp,w
  1602  030A  0086               	movwf	6
  1603  030B  0877               	movf	set_disp@disp+1,w
  1604  030C  0087               	movwf	7
  1605  030D  3146               	addfsr 1,6
  1606  030E  3F40               	moviw [0]fsr1
  1607  030F  00F0               	movwf	disp_d@sw
  1608  0310  3F41               	moviw [1]fsr1
  1609  0311  00F1               	movwf	disp_d@sw+1
  1610  0312  3181  2137  3182   	fcall	_disp_d
  1611                           
  1612                           ;main.c: 148: disp_e(disp[4]);
  1613  0315  0876               	movf	set_disp@disp,w
  1614  0316  0086               	movwf	6
  1615  0317  0877               	movf	set_disp@disp+1,w
  1616  0318  0087               	movwf	7
  1617  0319  3148               	addfsr 1,8
  1618  031A  3F40               	moviw [0]fsr1
  1619  031B  00F0               	movwf	disp_e@sw
  1620  031C  3F41               	moviw [1]fsr1
  1621  031D  00F1               	movwf	disp_e@sw+1
  1622  031E  3181  2147  3182   	fcall	_disp_e
  1623                           
  1624                           ;main.c: 149: disp_f(disp[5]);
  1625  0321  0876               	movf	set_disp@disp,w
  1626  0322  0086               	movwf	6
  1627  0323  0877               	movf	set_disp@disp+1,w
  1628  0324  0087               	movwf	7
  1629  0325  314A               	addfsr 1,10
  1630  0326  3F40               	moviw [0]fsr1
  1631  0327  00F0               	movwf	disp_f@sw
  1632  0328  3F41               	moviw [1]fsr1
  1633  0329  00F1               	movwf	disp_f@sw+1
  1634  032A  3181  214F  3182   	fcall	_disp_f
  1635                           
  1636                           ;main.c: 150: disp_g(disp[6]);
  1637  032D  0876               	movf	set_disp@disp,w
  1638  032E  0086               	movwf	6
  1639  032F  0877               	movf	set_disp@disp+1,w
  1640  0330  0087               	movwf	7
  1641  0331  314C               	addfsr 1,12
  1642  0332  3F40               	moviw [0]fsr1
  1643  0333  00F0               	movwf	disp_g@sw
  1644  0334  3F41               	moviw [1]fsr1
  1645  0335  00F1               	movwf	disp_g@sw+1
  1646  0336  3181  2157  3182   	fcall	_disp_g
  1647                           
  1648                           ;main.c: 151: disp_dp(dp);
  1649  0339  0879               	movf	set_disp@dp+1,w
  1650  033A  00F1               	movwf	disp_dp@sw+1
  1651  033B  0878               	movf	set_disp@dp,w
  1652  033C  00F0               	movwf	disp_dp@sw
  1653  033D  3181  213F         	fcall	_disp_dp
  1654  033F  0008               	return
  1655  0340                     __end_of_set_disp:	
  1656                           
  1657                           	psect	text5
  1658  0157                     __ptext5:	
  1659 ;; *************** function _disp_g *****************
  1660 ;; Defined at:
  1661 ;;		line 160 in file "main.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;  sw              2    0[COMMON] int 
  1664 ;; Auto vars:     Size  Location     Type
  1665 ;;		None
  1666 ;; Return value:  Size  Location     Type
  1667 ;;                  1    wreg      void 
  1668 ;; Registers used:
  1669 ;;		None
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1675 ;;      Params:         2       0       0       0       0       0
  1676 ;;      Locals:         0       0       0       0       0       0
  1677 ;;      Temps:          0       0       0       0       0       0
  1678 ;;      Totals:         2       0       0       0       0       0
  1679 ;;Total ram usage:        2 bytes
  1680 ;; Hardware stack levels used:    1
  1681 ;; This function calls:
  1682 ;;		Nothing
  1683 ;; This function is called by:
  1684 ;;		_set_disp
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           
  1689                           ;psect for function _disp_g
  1690  0157                     _disp_g:	
  1691                           
  1692                           ;incstack = 0
  1693                           ; Regs used in _disp_g: []
  1694  0157  1C70               	btfss	disp_g@sw,0
  1695  0158  295C               	goto	u990
  1696  0159  0020               	movlb	0	; select bank0
  1697  015A  140C               	bsf	12,0	;volatile
  1698  015B  0008               	return
  1699  015C                     u990:	
  1700  015C  0020               	movlb	0	; select bank0
  1701  015D  100C               	bcf	12,0	;volatile
  1702  015E  0008               	return
  1703  015F                     __end_of_disp_g:	
  1704                           
  1705                           	psect	text6
  1706  014F                     __ptext6:	
  1707 ;; *************** function _disp_f *****************
  1708 ;; Defined at:
  1709 ;;		line 159 in file "main.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;  sw              2    0[COMMON] int 
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;		None
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  1    wreg      void 
  1716 ;; Registers used:
  1717 ;;		None
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1723 ;;      Params:         2       0       0       0       0       0
  1724 ;;      Locals:         0       0       0       0       0       0
  1725 ;;      Temps:          0       0       0       0       0       0
  1726 ;;      Totals:         2       0       0       0       0       0
  1727 ;;Total ram usage:        2 bytes
  1728 ;; Hardware stack levels used:    1
  1729 ;; This function calls:
  1730 ;;		Nothing
  1731 ;; This function is called by:
  1732 ;;		_set_disp
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736                           
  1737                           ;psect for function _disp_f
  1738  014F                     _disp_f:	
  1739                           
  1740                           ;incstack = 0
  1741                           ; Regs used in _disp_f: []
  1742  014F  1C70               	btfss	disp_f@sw,0
  1743  0150  2954               	goto	u970
  1744  0151  0020               	movlb	0	; select bank0
  1745  0152  178C               	bsf	12,7	;volatile
  1746  0153  0008               	return
  1747  0154                     u970:	
  1748  0154  0020               	movlb	0	; select bank0
  1749  0155  138C               	bcf	12,7	;volatile
  1750  0156  0008               	return
  1751  0157                     __end_of_disp_f:	
  1752                           
  1753                           	psect	text7
  1754  0147                     __ptext7:	
  1755 ;; *************** function _disp_e *****************
  1756 ;; Defined at:
  1757 ;;		line 158 in file "main.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;  sw              2    0[COMMON] int 
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;		None
  1762 ;; Return value:  Size  Location     Type
  1763 ;;                  1    wreg      void 
  1764 ;; Registers used:
  1765 ;;		None
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1771 ;;      Params:         2       0       0       0       0       0
  1772 ;;      Locals:         0       0       0       0       0       0
  1773 ;;      Temps:          0       0       0       0       0       0
  1774 ;;      Totals:         2       0       0       0       0       0
  1775 ;;Total ram usage:        2 bytes
  1776 ;; Hardware stack levels used:    1
  1777 ;; This function calls:
  1778 ;;		Nothing
  1779 ;; This function is called by:
  1780 ;;		_set_disp
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784                           
  1785                           ;psect for function _disp_e
  1786  0147                     _disp_e:	
  1787                           
  1788                           ;incstack = 0
  1789                           ; Regs used in _disp_e: []
  1790  0147  1C70               	btfss	disp_e@sw,0
  1791  0148  294C               	goto	u950
  1792  0149  0020               	movlb	0	; select bank0
  1793  014A  170C               	bsf	12,6	;volatile
  1794  014B  0008               	return
  1795  014C                     u950:	
  1796  014C  0020               	movlb	0	; select bank0
  1797  014D  130C               	bcf	12,6	;volatile
  1798  014E  0008               	return
  1799  014F                     __end_of_disp_e:	
  1800                           
  1801                           	psect	text8
  1802  013F                     __ptext8:	
  1803 ;; *************** function _disp_dp *****************
  1804 ;; Defined at:
  1805 ;;		line 161 in file "main.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;  sw              2    0[COMMON] int 
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;		None
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  1    wreg      void 
  1812 ;; Registers used:
  1813 ;;		None
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1819 ;;      Params:         2       0       0       0       0       0
  1820 ;;      Locals:         0       0       0       0       0       0
  1821 ;;      Temps:          0       0       0       0       0       0
  1822 ;;      Totals:         2       0       0       0       0       0
  1823 ;;Total ram usage:        2 bytes
  1824 ;; Hardware stack levels used:    1
  1825 ;; This function calls:
  1826 ;;		Nothing
  1827 ;; This function is called by:
  1828 ;;		_set_disp
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832                           
  1833                           ;psect for function _disp_dp
  1834  013F                     _disp_dp:	
  1835                           
  1836                           ;incstack = 0
  1837                           ; Regs used in _disp_dp: []
  1838  013F  1C70               	btfss	disp_dp@sw,0
  1839  0140  2944               	goto	u1010
  1840  0141  0020               	movlb	0	; select bank0
  1841  0142  148C               	bsf	12,1	;volatile
  1842  0143  0008               	return
  1843  0144                     u1010:	
  1844  0144  0020               	movlb	0	; select bank0
  1845  0145  108C               	bcf	12,1	;volatile
  1846  0146  0008               	return
  1847  0147                     __end_of_disp_dp:	
  1848                           
  1849                           	psect	text9
  1850  0137                     __ptext9:	
  1851 ;; *************** function _disp_d *****************
  1852 ;; Defined at:
  1853 ;;		line 157 in file "main.c"
  1854 ;; Parameters:    Size  Location     Type
  1855 ;;  sw              2    0[COMMON] int 
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;		None
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  1    wreg      void 
  1860 ;; Registers used:
  1861 ;;		None
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1867 ;;      Params:         2       0       0       0       0       0
  1868 ;;      Locals:         0       0       0       0       0       0
  1869 ;;      Temps:          0       0       0       0       0       0
  1870 ;;      Totals:         2       0       0       0       0       0
  1871 ;;Total ram usage:        2 bytes
  1872 ;; Hardware stack levels used:    1
  1873 ;; This function calls:
  1874 ;;		Nothing
  1875 ;; This function is called by:
  1876 ;;		_set_disp
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880                           
  1881                           ;psect for function _disp_d
  1882  0137                     _disp_d:	
  1883                           
  1884                           ;incstack = 0
  1885                           ; Regs used in _disp_d: []
  1886  0137  1C70               	btfss	disp_d@sw,0
  1887  0138  293C               	goto	u930
  1888  0139  0020               	movlb	0	; select bank0
  1889  013A  178D               	bsf	13,7	;volatile
  1890  013B  0008               	return
  1891  013C                     u930:	
  1892  013C  0020               	movlb	0	; select bank0
  1893  013D  138D               	bcf	13,7	;volatile
  1894  013E  0008               	return
  1895  013F                     __end_of_disp_d:	
  1896                           
  1897                           	psect	text10
  1898  012F                     __ptext10:	
  1899 ;; *************** function _disp_c *****************
  1900 ;; Defined at:
  1901 ;;		line 156 in file "main.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;  sw              2    0[COMMON] int 
  1904 ;; Auto vars:     Size  Location     Type
  1905 ;;		None
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  1    wreg      void 
  1908 ;; Registers used:
  1909 ;;		None
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1915 ;;      Params:         2       0       0       0       0       0
  1916 ;;      Locals:         0       0       0       0       0       0
  1917 ;;      Temps:          0       0       0       0       0       0
  1918 ;;      Totals:         2       0       0       0       0       0
  1919 ;;Total ram usage:        2 bytes
  1920 ;; Hardware stack levels used:    1
  1921 ;; This function calls:
  1922 ;;		Nothing
  1923 ;; This function is called by:
  1924 ;;		_set_disp
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           
  1929                           ;psect for function _disp_c
  1930  012F                     _disp_c:	
  1931                           
  1932                           ;incstack = 0
  1933                           ; Regs used in _disp_c: []
  1934  012F  1C70               	btfss	disp_c@sw,0
  1935  0130  2934               	goto	u910
  1936  0131  0020               	movlb	0	; select bank0
  1937  0132  170D               	bsf	13,6	;volatile
  1938  0133  0008               	return
  1939  0134                     u910:	
  1940  0134  0020               	movlb	0	; select bank0
  1941  0135  130D               	bcf	13,6	;volatile
  1942  0136  0008               	return
  1943  0137                     __end_of_disp_c:	
  1944                           
  1945                           	psect	text11
  1946  0127                     __ptext11:	
  1947 ;; *************** function _disp_b *****************
  1948 ;; Defined at:
  1949 ;;		line 155 in file "main.c"
  1950 ;; Parameters:    Size  Location     Type
  1951 ;;  sw              2    0[COMMON] int 
  1952 ;; Auto vars:     Size  Location     Type
  1953 ;;		None
  1954 ;; Return value:  Size  Location     Type
  1955 ;;                  1    wreg      void 
  1956 ;; Registers used:
  1957 ;;		None
  1958 ;; Tracked objects:
  1959 ;;		On entry : 0/0
  1960 ;;		On exit  : 0/0
  1961 ;;		Unchanged: 0/0
  1962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1963 ;;      Params:         2       0       0       0       0       0
  1964 ;;      Locals:         0       0       0       0       0       0
  1965 ;;      Temps:          0       0       0       0       0       0
  1966 ;;      Totals:         2       0       0       0       0       0
  1967 ;;Total ram usage:        2 bytes
  1968 ;; Hardware stack levels used:    1
  1969 ;; This function calls:
  1970 ;;		Nothing
  1971 ;; This function is called by:
  1972 ;;		_set_disp
  1973 ;; This function uses a non-reentrant model
  1974 ;;
  1975                           
  1976                           
  1977                           ;psect for function _disp_b
  1978  0127                     _disp_b:	
  1979                           
  1980                           ;incstack = 0
  1981                           ; Regs used in _disp_b: []
  1982  0127  1C70               	btfss	disp_b@sw,0
  1983  0128  292C               	goto	u890
  1984  0129  0020               	movlb	0	; select bank0
  1985  012A  168D               	bsf	13,5	;volatile
  1986  012B  0008               	return
  1987  012C                     u890:	
  1988  012C  0020               	movlb	0	; select bank0
  1989  012D  128D               	bcf	13,5	;volatile
  1990  012E  0008               	return
  1991  012F                     __end_of_disp_b:	
  1992                           
  1993                           	psect	text12
  1994  011F                     __ptext12:	
  1995 ;; *************** function _disp_a *****************
  1996 ;; Defined at:
  1997 ;;		line 154 in file "main.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;  sw              2    0[COMMON] int 
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;		None
  2002 ;; Return value:  Size  Location     Type
  2003 ;;                  1    wreg      void 
  2004 ;; Registers used:
  2005 ;;		None
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : 0/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2011 ;;      Params:         2       0       0       0       0       0
  2012 ;;      Locals:         0       0       0       0       0       0
  2013 ;;      Temps:          0       0       0       0       0       0
  2014 ;;      Totals:         2       0       0       0       0       0
  2015 ;;Total ram usage:        2 bytes
  2016 ;; Hardware stack levels used:    1
  2017 ;; This function calls:
  2018 ;;		Nothing
  2019 ;; This function is called by:
  2020 ;;		_set_disp
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024                           
  2025                           ;psect for function _disp_a
  2026  011F                     _disp_a:	
  2027                           
  2028                           ;incstack = 0
  2029                           ; Regs used in _disp_a: []
  2030  011F  1C70               	btfss	disp_a@sw,0
  2031  0120  2924               	goto	u870
  2032  0121  0020               	movlb	0	; select bank0
  2033  0122  160D               	bsf	13,4	;volatile
  2034  0123  0008               	return
  2035  0124                     u870:	
  2036  0124  0020               	movlb	0	; select bank0
  2037  0125  120D               	bcf	13,4	;volatile
  2038  0126  0008               	return
  2039  0127                     __end_of_disp_a:	
  2040                           
  2041                           	psect	text13
  2042  01EB                     __ptext13:	
  2043 ;; *************** function _open *****************
  2044 ;; Defined at:
  2045 ;;		line 162 in file "main.c"
  2046 ;; Parameters:    Size  Location     Type
  2047 ;;  select          2    0[COMMON] int 
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;		None
  2050 ;; Return value:  Size  Location     Type
  2051 ;;                  1    wreg      void 
  2052 ;; Registers used:
  2053 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2054 ;; Tracked objects:
  2055 ;;		On entry : 0/0
  2056 ;;		On exit  : 0/0
  2057 ;;		Unchanged: 0/0
  2058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2059 ;;      Params:         2       0       0       0       0       0
  2060 ;;      Locals:         0       0       0       0       0       0
  2061 ;;      Temps:          0       0       0       0       0       0
  2062 ;;      Totals:         2       0       0       0       0       0
  2063 ;;Total ram usage:        2 bytes
  2064 ;; Hardware stack levels used:    1
  2065 ;; Hardware stack levels required when called:    1
  2066 ;; This function calls:
  2067 ;;		_close
  2068 ;; This function is called by:
  2069 ;;		_disp
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           
  2074                           ;psect for function _open
  2075  01EB                     _open:	
  2076                           
  2077                           ;main.c: 163: close();
  2078                           
  2079                           ;incstack = 0
  2080                           ; Regs used in _open: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2081  01EB  3181  2113  3181   	fcall	_close
  2082                           
  2083                           ;main.c: 164: switch (select) {
  2084  01EE  29F8               	goto	l1087
  2085  01EF                     l143:	
  2086                           ;main.c: 165: case 0:
  2087                           
  2088                           
  2089                           ;main.c: 166: RA2=1;
  2090  01EF  0020               	movlb	0	; select bank0
  2091  01F0  150C               	bsf	12,2	;volatile
  2092                           
  2093                           ;main.c: 167: break;
  2094  01F1  0008               	return
  2095  01F2                     l145:	
  2096                           ;main.c: 168: case 1:
  2097                           
  2098                           
  2099                           ;main.c: 169: RA3=1;
  2100  01F2  0020               	movlb	0	; select bank0
  2101  01F3  158C               	bsf	12,3	;volatile
  2102                           
  2103                           ;main.c: 173: break;
  2104                           
  2105                           ;main.c: 171: case 2:
  2106                           
  2107                           ;main.c: 170: break;
  2108  01F4  0008               	return
  2109  01F5                     l147:	
  2110                           ;main.c: 174: case 3:
  2111                           
  2112                           
  2113                           ;main.c: 175: RA1=1;
  2114  01F5  0020               	movlb	0	; select bank0
  2115  01F6  148C               	bsf	12,1	;volatile
  2116                           
  2117                           ;main.c: 179: }
  2118                           
  2119                           ;main.c: 178: break;
  2120                           
  2121                           ;main.c: 177: default:
  2122                           
  2123                           ;main.c: 176: break;
  2124  01F7  0008               	return
  2125  01F8                     l1087:	
  2126                           
  2127                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2128                           ; Switch size 1, requested type "space"
  2129                           ; Number of cases is 1, Range of values is 0 to 0
  2130                           ; switch strategies available:
  2131                           ; Name         Instructions Cycles
  2132                           ; simple_byte            4     3 (average)
  2133                           ; direct_byte            8     6 (fixed)
  2134                           ; jumptable            260     6 (fixed)
  2135                           ;	Chosen strategy is simple_byte
  2136  01F8  0871               	movf	open@select+1,w
  2137  01F9  3A00               	xorlw	0	; case 0
  2138  01FA  1903               	skipnz
  2139  01FB  29FD               	goto	l1401
  2140  01FC  2A0B               	goto	l149
  2141  01FD                     l1401:	
  2142                           
  2143                           ; Switch size 1, requested type "space"
  2144                           ; Number of cases is 4, Range of values is 0 to 3
  2145                           ; switch strategies available:
  2146                           ; Name         Instructions Cycles
  2147                           ; simple_byte           13     7 (average)
  2148                           ; direct_byte           14     6 (fixed)
  2149                           ; jumptable            260     6 (fixed)
  2150                           ;	Chosen strategy is simple_byte
  2151  01FD  0870               	movf	open@select,w
  2152  01FE  3A00               	xorlw	0	; case 0
  2153  01FF  1903               	skipnz
  2154  0200  29EF               	goto	l143
  2155  0201  3A01               	xorlw	1	; case 1
  2156  0202  1903               	skipnz
  2157  0203  29F2               	goto	l145
  2158  0204  3A03               	xorlw	3	; case 2
  2159  0205  1903               	skipnz
  2160  0206  2A0B               	goto	l149
  2161  0207  3A01               	xorlw	1	; case 3
  2162  0208  1903               	skipnz
  2163  0209  29F5               	goto	l147
  2164  020A  2A0B               	goto	l149
  2165  020B                     l149:	
  2166  020B  0008               	return
  2167  020C                     __end_of_open:	
  2168                           
  2169                           	psect	text14
  2170  0113                     __ptext14:	
  2171 ;; *************** function _close *****************
  2172 ;; Defined at:
  2173 ;;		line 181 in file "main.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;		None
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;		None
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  1    wreg      void 
  2180 ;; Registers used:
  2181 ;;		None
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2187 ;;      Params:         0       0       0       0       0       0
  2188 ;;      Locals:         0       0       0       0       0       0
  2189 ;;      Temps:          0       0       0       0       0       0
  2190 ;;      Totals:         0       0       0       0       0       0
  2191 ;;Total ram usage:        0 bytes
  2192 ;; Hardware stack levels used:    1
  2193 ;; This function calls:
  2194 ;;		Nothing
  2195 ;; This function is called by:
  2196 ;;		_disp
  2197 ;;		_open
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201                           
  2202                           ;psect for function _close
  2203  0113                     _close:	
  2204                           
  2205                           ;main.c: 182: RA2=0;
  2206                           
  2207                           ;incstack = 0
  2208                           ; Regs used in _close: []
  2209  0113  0020               	movlb	0	; select bank0
  2210  0114  110C               	bcf	12,2	;volatile
  2211                           
  2212                           ;main.c: 183: RA3=0;
  2213  0115  118C               	bcf	12,3	;volatile
  2214                           
  2215                           ;main.c: 185: RA1=0;
  2216  0116  108C               	bcf	12,1	;volatile
  2217  0117  0008               	return
  2218  0118                     __end_of_close:	
  2219                           
  2220                           	psect	text15
  2221  01B0                     __ptext15:	
  2222 ;; *************** function ___wmul *****************
  2223 ;; Defined at:
  2224 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;  multiplier      2    0[COMMON] unsigned int 
  2227 ;;  multiplicand    2    2[COMMON] unsigned int 
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;  product         2    4[COMMON] unsigned int 
  2230 ;; Return value:  Size  Location     Type
  2231 ;;                  2    0[COMMON] unsigned int 
  2232 ;; Registers used:
  2233 ;;		wreg, status,2, status,0
  2234 ;; Tracked objects:
  2235 ;;		On entry : 0/0
  2236 ;;		On exit  : 0/0
  2237 ;;		Unchanged: 0/0
  2238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2239 ;;      Params:         4       0       0       0       0       0
  2240 ;;      Locals:         2       0       0       0       0       0
  2241 ;;      Temps:          0       0       0       0       0       0
  2242 ;;      Totals:         6       0       0       0       0       0
  2243 ;;Total ram usage:        6 bytes
  2244 ;; Hardware stack levels used:    1
  2245 ;; This function calls:
  2246 ;;		Nothing
  2247 ;; This function is called by:
  2248 ;;		_disp
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           
  2253                           ;psect for function ___wmul
  2254  01B0                     ___wmul:	
  2255                           
  2256                           ;incstack = 0
  2257                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2258  01B0  01F4               	clrf	___wmul@product
  2259  01B1  01F5               	clrf	___wmul@product+1
  2260  01B2                     l1095:	
  2261  01B2  1C70               	btfss	___wmul@multiplier,0
  2262  01B3  29B8               	goto	l245
  2263  01B4  0872               	movf	___wmul@multiplicand,w
  2264  01B5  07F4               	addwf	___wmul@product,f
  2265  01B6  0873               	movf	___wmul@multiplicand+1,w
  2266  01B7  3DF5               	addwfc	___wmul@product+1,f
  2267  01B8                     l245:	
  2268  01B8  3001               	movlw	1
  2269  01B9                     u1175:	
  2270  01B9  35F2               	lslf	___wmul@multiplicand,f
  2271  01BA  0DF3               	rlf	___wmul@multiplicand+1,f
  2272  01BB  0B89               	decfsz	9,f
  2273  01BC  29B9               	goto	u1175
  2274  01BD  3001               	movlw	1
  2275  01BE                     u1185:	
  2276  01BE  36F1               	lsrf	___wmul@multiplier+1,f
  2277  01BF  0CF0               	rrf	___wmul@multiplier,f
  2278  01C0  0B89               	decfsz	9,f
  2279  01C1  29BE               	goto	u1185
  2280  01C2  0870               	movf	___wmul@multiplier,w
  2281  01C3  0471               	iorwf	___wmul@multiplier+1,w
  2282  01C4  1D03               	btfss	3,2
  2283  01C5  29B2               	goto	l1095
  2284  01C6  0875               	movf	___wmul@product+1,w
  2285  01C7  00F1               	movwf	?___wmul+1
  2286  01C8  0874               	movf	___wmul@product,w
  2287  01C9  00F0               	movwf	?___wmul
  2288  01CA  0008               	return
  2289  01CB                     __end_of___wmul:	
  2290                           
  2291                           	psect	text16
  2292  03A4                     __ptext16:	
  2293 ;; *************** function ___fttol *****************
  2294 ;; Defined at:
  2295 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;  f1              3   32[BANK0 ] float 
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;  lval            4   41[BANK0 ] unsigned long 
  2300 ;;  exp1            1   45[BANK0 ] unsigned char 
  2301 ;;  sign1           1   40[BANK0 ] unsigned char 
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  4   32[BANK0 ] long 
  2304 ;; Registers used:
  2305 ;;		wreg, status,2, status,0
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2311 ;;      Params:         0       4       0       0       0       0
  2312 ;;      Locals:         0       6       0       0       0       0
  2313 ;;      Temps:          0       4       0       0       0       0
  2314 ;;      Totals:         0      14       0       0       0       0
  2315 ;;Total ram usage:       14 bytes
  2316 ;; Hardware stack levels used:    1
  2317 ;; This function calls:
  2318 ;;		Nothing
  2319 ;; This function is called by:
  2320 ;;		_disp
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324                           
  2325                           ;psect for function ___fttol
  2326  03A4                     ___fttol:	
  2327                           
  2328                           ;incstack = 0
  2329                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2330  03A4  0020               	movlb	0	; select bank0
  2331  03A5  0840               	movf	___fttol@f1,w
  2332  03A6  00C4               	movwf	??___fttol
  2333  03A7  0841               	movf	___fttol@f1+1,w
  2334  03A8  00C5               	movwf	??___fttol+1
  2335  03A9  0842               	movf	___fttol@f1+2,w
  2336  03AA  00C6               	movwf	??___fttol+2
  2337  03AB  1003               	clrc
  2338  03AC  0D45               	rlf	??___fttol+1,w
  2339  03AD  0D46               	rlf	??___fttol+2,w
  2340  03AE  00C7               	movwf	??___fttol+3
  2341  03AF  0847               	movf	??___fttol+3,w
  2342  03B0  00CD               	movwf	___fttol@exp1
  2343  03B1  084D               	movf	___fttol@exp1,w
  2344  03B2  1D03               	btfss	3,2
  2345  03B3  2BBD               	goto	l1275
  2346  03B4  3000               	movlw	0
  2347  03B5  00C3               	movwf	?___fttol+3
  2348  03B6  3000               	movlw	0
  2349  03B7  00C2               	movwf	?___fttol+2
  2350  03B8  3000               	movlw	0
  2351  03B9  00C1               	movwf	?___fttol+1
  2352  03BA  3000               	movlw	0
  2353  03BB  00C0               	movwf	?___fttol
  2354  03BC  0008               	return
  2355  03BD                     l1275:	
  2356  03BD  0840               	movf	___fttol@f1,w
  2357  03BE  00C4               	movwf	??___fttol
  2358  03BF  0841               	movf	___fttol@f1+1,w
  2359  03C0  00C5               	movwf	??___fttol+1
  2360  03C1  0842               	movf	___fttol@f1+2,w
  2361  03C2  00C6               	movwf	??___fttol+2
  2362  03C3  3017               	movlw	23
  2363  03C4                     u1545:	
  2364  03C4  36C6               	lsrf	??___fttol+2,f
  2365  03C5  0CC5               	rrf	??___fttol+1,f
  2366  03C6  0CC4               	rrf	??___fttol,f
  2367  03C7  0B89               	decfsz	9,f
  2368  03C8  2BC4               	goto	u1545
  2369  03C9  0844               	movf	??___fttol,w
  2370  03CA  00C7               	movwf	??___fttol+3
  2371  03CB  0847               	movf	??___fttol+3,w
  2372  03CC  00C8               	movwf	___fttol@sign1
  2373  03CD  17C1               	bsf	___fttol@f1+1,7
  2374  03CE  30FF               	movlw	255
  2375  03CF  05C0               	andwf	___fttol@f1,f
  2376  03D0  30FF               	movlw	255
  2377  03D1  05C1               	andwf	___fttol@f1+1,f
  2378  03D2  3000               	movlw	0
  2379  03D3  05C2               	andwf	___fttol@f1+2,f
  2380  03D4  0840               	movf	___fttol@f1,w
  2381  03D5  00C9               	movwf	___fttol@lval
  2382  03D6  0841               	movf	___fttol@f1+1,w
  2383  03D7  00CA               	movwf	___fttol@lval+1
  2384  03D8  0842               	movf	___fttol@f1+2,w
  2385  03D9  00CB               	movwf	___fttol@lval+2
  2386  03DA  01CC               	clrf	___fttol@lval+3
  2387  03DB  308E               	movlw	142
  2388  03DC  02CD               	subwf	___fttol@exp1,f
  2389  03DD  1FCD               	btfss	___fttol@exp1,7
  2390  03DE  2BFB               	goto	l1295
  2391  03DF  084D               	movf	___fttol@exp1,w
  2392  03E0  3A80               	xorlw	128
  2393  03E1  3E8F               	addlw	143
  2394  03E2  1803               	skipnc
  2395  03E3  2BED               	goto	l1293
  2396  03E4  3000               	movlw	0
  2397  03E5  00C3               	movwf	?___fttol+3
  2398  03E6  3000               	movlw	0
  2399  03E7  00C2               	movwf	?___fttol+2
  2400  03E8  3000               	movlw	0
  2401  03E9  00C1               	movwf	?___fttol+1
  2402  03EA  3000               	movlw	0
  2403  03EB  00C0               	movwf	?___fttol
  2404  03EC  0008               	return
  2405  03ED                     l1293:	
  2406  03ED  3001               	movlw	1
  2407  03EE                     u1575:	
  2408  03EE  36CC               	lsrf	___fttol@lval+3,f
  2409  03EF  0CCB               	rrf	___fttol@lval+2,f
  2410  03F0  0CCA               	rrf	___fttol@lval+1,f
  2411  03F1  0CC9               	rrf	___fttol@lval,f
  2412  03F2  0B89               	decfsz	9,f
  2413  03F3  2BEE               	goto	u1575
  2414  03F4  3001               	movlw	1
  2415  03F5  00C4               	movwf	??___fttol
  2416  03F6  0844               	movf	??___fttol,w
  2417  03F7  07CD               	addwf	___fttol@exp1,f
  2418  03F8  1903               	btfsc	3,2
  2419  03F9  2C14               	goto	l1303
  2420  03FA  2BED               	goto	l1293
  2421  03FB                     l1295:	
  2422  03FB  3018               	movlw	24
  2423  03FC  024D               	subwf	___fttol@exp1,w
  2424  03FD  1C03               	skipc
  2425  03FE  2C11               	goto	l497
  2426  03FF  3000               	movlw	0
  2427  0400  00C3               	movwf	?___fttol+3
  2428  0401  3000               	movlw	0
  2429  0402  00C2               	movwf	?___fttol+2
  2430  0403  3000               	movlw	0
  2431  0404  00C1               	movwf	?___fttol+1
  2432  0405  3000               	movlw	0
  2433  0406  00C0               	movwf	?___fttol
  2434  0407  0008               	return
  2435  0408                     l1301:	
  2436  0408  3001               	movlw	1
  2437  0409                     u1605:	
  2438  0409  35C9               	lslf	___fttol@lval,f
  2439  040A  0DCA               	rlf	___fttol@lval+1,f
  2440  040B  0DCB               	rlf	___fttol@lval+2,f
  2441  040C  0DCC               	rlf	___fttol@lval+3,f
  2442  040D  0B89               	decfsz	9,f
  2443  040E  2C09               	goto	u1605
  2444  040F  3001               	movlw	1
  2445  0410  02CD               	subwf	___fttol@exp1,f
  2446  0411                     l497:	
  2447  0411  084D               	movf	___fttol@exp1,w
  2448  0412  1D03               	btfss	3,2
  2449  0413  2C08               	goto	l1301
  2450  0414                     l1303:	
  2451  0414  0848               	movf	___fttol@sign1,w
  2452  0415  1903               	btfsc	3,2
  2453  0416  2C22               	goto	l1307
  2454  0417  09C9               	comf	___fttol@lval,f
  2455  0418  09CA               	comf	___fttol@lval+1,f
  2456  0419  09CB               	comf	___fttol@lval+2,f
  2457  041A  09CC               	comf	___fttol@lval+3,f
  2458  041B  0AC9               	incf	___fttol@lval,f
  2459  041C  1903               	skipnz
  2460  041D  0ACA               	incf	___fttol@lval+1,f
  2461  041E  1903               	skipnz
  2462  041F  0ACB               	incf	___fttol@lval+2,f
  2463  0420  1903               	skipnz
  2464  0421  0ACC               	incf	___fttol@lval+3,f
  2465  0422                     l1307:	
  2466  0422  084C               	movf	___fttol@lval+3,w
  2467  0423  00C3               	movwf	?___fttol+3
  2468  0424  084B               	movf	___fttol@lval+2,w
  2469  0425  00C2               	movwf	?___fttol+2
  2470  0426  084A               	movf	___fttol@lval+1,w
  2471  0427  00C1               	movwf	?___fttol+1
  2472  0428  0849               	movf	___fttol@lval,w
  2473  0429  00C0               	movwf	?___fttol
  2474  042A  0008               	return
  2475  042B                     __end_of___fttol:	
  2476                           
  2477                           	psect	text17
  2478  0265                     __ptext17:	
  2479 ;; *************** function ___ftge *****************
  2480 ;; Defined at:
  2481 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftge.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;  ff1             3    0[COMMON] float 
  2484 ;;  ff2             3    3[COMMON] float 
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;		None
  2487 ;; Return value:  Size  Location     Type
  2488 ;;		None               void
  2489 ;; Registers used:
  2490 ;;		wreg, status,2, status,0
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2496 ;;      Params:         6       0       0       0       0       0
  2497 ;;      Locals:         0       0       0       0       0       0
  2498 ;;      Temps:          3       0       0       0       0       0
  2499 ;;      Totals:         9       0       0       0       0       0
  2500 ;;Total ram usage:        9 bytes
  2501 ;; Hardware stack levels used:    1
  2502 ;; This function calls:
  2503 ;;		Nothing
  2504 ;; This function is called by:
  2505 ;;		_disp
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508                           
  2509                           
  2510                           ;psect for function ___ftge
  2511  0265                     ___ftge:	
  2512                           
  2513                           ;incstack = 0
  2514                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  2515  0265  1FF2               	btfss	___ftge@ff1+2,7
  2516  0266  2A7B               	goto	l1203
  2517  0267  0970               	comf	___ftge@ff1,w
  2518  0268  00F6               	movwf	??___ftge
  2519  0269  0971               	comf	___ftge@ff1+1,w
  2520  026A  00F7               	movwf	??___ftge+1
  2521  026B  0972               	comf	___ftge@ff1+2,w
  2522  026C  00F8               	movwf	??___ftge+2
  2523  026D  0AF6               	incf	??___ftge,f
  2524  026E  1903               	skipnz
  2525  026F  0AF7               	incf	??___ftge+1,f
  2526  0270  1903               	skipnz
  2527  0271  0AF8               	incf	??___ftge+2,f
  2528  0272  3000               	movlw	0
  2529  0273  0776               	addwf	??___ftge,w
  2530  0274  00F0               	movwf	___ftge@ff1
  2531  0275  3000               	movlw	0
  2532  0276  3D77               	addwfc	??___ftge+1,w
  2533  0277  00F1               	movwf	___ftge@ff1+1
  2534  0278  3080               	movlw	128
  2535  0279  3D78               	addwfc	??___ftge+2,w
  2536  027A  00F2               	movwf	___ftge@ff1+2
  2537  027B                     l1203:	
  2538  027B  1FF5               	btfss	___ftge@ff2+2,7
  2539  027C  2A91               	goto	l1207
  2540  027D  0973               	comf	___ftge@ff2,w
  2541  027E  00F6               	movwf	??___ftge
  2542  027F  0974               	comf	___ftge@ff2+1,w
  2543  0280  00F7               	movwf	??___ftge+1
  2544  0281  0975               	comf	___ftge@ff2+2,w
  2545  0282  00F8               	movwf	??___ftge+2
  2546  0283  0AF6               	incf	??___ftge,f
  2547  0284  1903               	skipnz
  2548  0285  0AF7               	incf	??___ftge+1,f
  2549  0286  1903               	skipnz
  2550  0287  0AF8               	incf	??___ftge+2,f
  2551  0288  3000               	movlw	0
  2552  0289  0776               	addwf	??___ftge,w
  2553  028A  00F3               	movwf	___ftge@ff2
  2554  028B  3000               	movlw	0
  2555  028C  3D77               	addwfc	??___ftge+1,w
  2556  028D  00F4               	movwf	___ftge@ff2+1
  2557  028E  3080               	movlw	128
  2558  028F  3D78               	addwfc	??___ftge+2,w
  2559  0290  00F5               	movwf	___ftge@ff2+2
  2560  0291                     l1207:	
  2561  0291  3080               	movlw	128
  2562  0292  06F2               	xorwf	___ftge@ff1+2,f
  2563  0293  3080               	movlw	128
  2564  0294  06F5               	xorwf	___ftge@ff2+2,f
  2565  0295  0875               	movf	___ftge@ff2+2,w
  2566  0296  0272               	subwf	___ftge@ff1+2,w
  2567  0297  1D03               	skipz
  2568  0298  0008               	return
  2569  0299  0874               	movf	___ftge@ff2+1,w
  2570  029A  0271               	subwf	___ftge@ff1+1,w
  2571  029B  1D03               	skipz
  2572  029C  0008               	return
  2573  029D  0873               	movf	___ftge@ff2,w
  2574  029E  0270               	subwf	___ftge@ff1,w
  2575  029F  0008               	return
  2576  02A0                     __end_of___ftge:	
  2577                           
  2578                           	psect	text18
  2579  02A0                     __ptext18:	
  2580 ;; *************** function ___awmod *****************
  2581 ;; Defined at:
  2582 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  2583 ;; Parameters:    Size  Location     Type
  2584 ;;  divisor         2   46[BANK0 ] int 
  2585 ;;  dividend        2   48[BANK0 ] int 
  2586 ;; Auto vars:     Size  Location     Type
  2587 ;;  sign            1   52[BANK0 ] unsigned char 
  2588 ;;  counter         1   51[BANK0 ] unsigned char 
  2589 ;; Return value:  Size  Location     Type
  2590 ;;                  2   46[BANK0 ] int 
  2591 ;; Registers used:
  2592 ;;		wreg, status,2, status,0
  2593 ;; Tracked objects:
  2594 ;;		On entry : 0/0
  2595 ;;		On exit  : 0/0
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2598 ;;      Params:         0       4       0       0       0       0
  2599 ;;      Locals:         0       2       0       0       0       0
  2600 ;;      Temps:          0       1       0       0       0       0
  2601 ;;      Totals:         0       7       0       0       0       0
  2602 ;;Total ram usage:        7 bytes
  2603 ;; Hardware stack levels used:    1
  2604 ;; This function calls:
  2605 ;;		Nothing
  2606 ;; This function is called by:
  2607 ;;		_disp
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611                           
  2612                           ;psect for function ___awmod
  2613  02A0                     ___awmod:	
  2614                           
  2615                           ;incstack = 0
  2616                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2617  02A0  0020               	movlb	0	; select bank0
  2618  02A1  01D4               	clrf	___awmod@sign
  2619  02A2  1FD1               	btfss	___awmod@dividend+1,7
  2620  02A3  2AAB               	goto	l1115
  2621  02A4  09D0               	comf	___awmod@dividend,f
  2622  02A5  09D1               	comf	___awmod@dividend+1,f
  2623  02A6  0AD0               	incf	___awmod@dividend,f
  2624  02A7  1903               	skipnz
  2625  02A8  0AD1               	incf	___awmod@dividend+1,f
  2626  02A9  01D4               	clrf	___awmod@sign
  2627  02AA  0AD4               	incf	___awmod@sign,f
  2628  02AB                     l1115:	
  2629  02AB  1FCF               	btfss	___awmod@divisor+1,7
  2630  02AC  2AB2               	goto	l1119
  2631  02AD  09CE               	comf	___awmod@divisor,f
  2632  02AE  09CF               	comf	___awmod@divisor+1,f
  2633  02AF  0ACE               	incf	___awmod@divisor,f
  2634  02B0  1903               	skipnz
  2635  02B1  0ACF               	incf	___awmod@divisor+1,f
  2636  02B2                     l1119:	
  2637  02B2  084E               	movf	___awmod@divisor,w
  2638  02B3  044F               	iorwf	___awmod@divisor+1,w
  2639  02B4  1903               	btfsc	3,2
  2640  02B5  2AD9               	goto	l1137
  2641  02B6  01D3               	clrf	___awmod@counter
  2642  02B7  0AD3               	incf	___awmod@counter,f
  2643  02B8                     l1127:	
  2644  02B8  1BCF               	btfsc	___awmod@divisor+1,7
  2645  02B9  2AC4               	goto	l1129
  2646  02BA  3001               	movlw	1
  2647  02BB                     u1235:	
  2648  02BB  35CE               	lslf	___awmod@divisor,f
  2649  02BC  0DCF               	rlf	___awmod@divisor+1,f
  2650  02BD  0B89               	decfsz	9,f
  2651  02BE  2ABB               	goto	u1235
  2652  02BF  3001               	movlw	1
  2653  02C0  00D2               	movwf	??___awmod
  2654  02C1  0852               	movf	??___awmod,w
  2655  02C2  07D3               	addwf	___awmod@counter,f
  2656  02C3  2AB8               	goto	l1127
  2657  02C4                     l1129:	
  2658  02C4  084F               	movf	___awmod@divisor+1,w
  2659  02C5  0251               	subwf	___awmod@dividend+1,w
  2660  02C6  1D03               	skipz
  2661  02C7  2ACA               	goto	u1255
  2662  02C8  084E               	movf	___awmod@divisor,w
  2663  02C9  0250               	subwf	___awmod@dividend,w
  2664  02CA                     u1255:	
  2665  02CA  1C03               	skipc
  2666  02CB  2AD0               	goto	l1133
  2667  02CC  084E               	movf	___awmod@divisor,w
  2668  02CD  02D0               	subwf	___awmod@dividend,f
  2669  02CE  084F               	movf	___awmod@divisor+1,w
  2670  02CF  3BD1               	subwfb	___awmod@dividend+1,f
  2671  02D0                     l1133:	
  2672  02D0  3001               	movlw	1
  2673  02D1                     u1265:	
  2674  02D1  36CF               	lsrf	___awmod@divisor+1,f
  2675  02D2  0CCE               	rrf	___awmod@divisor,f
  2676  02D3  0B89               	decfsz	9,f
  2677  02D4  2AD1               	goto	u1265
  2678  02D5  3001               	movlw	1
  2679  02D6  02D3               	subwf	___awmod@counter,f
  2680  02D7  1D03               	btfss	3,2
  2681  02D8  2AC4               	goto	l1129
  2682  02D9                     l1137:	
  2683  02D9  0854               	movf	___awmod@sign,w
  2684  02DA  1903               	btfsc	3,2
  2685  02DB  2AE1               	goto	l1141
  2686  02DC  09D0               	comf	___awmod@dividend,f
  2687  02DD  09D1               	comf	___awmod@dividend+1,f
  2688  02DE  0AD0               	incf	___awmod@dividend,f
  2689  02DF  1903               	skipnz
  2690  02E0  0AD1               	incf	___awmod@dividend+1,f
  2691  02E1                     l1141:	
  2692  02E1  0851               	movf	___awmod@dividend+1,w
  2693  02E2  00CF               	movwf	?___awmod+1
  2694  02E3  0850               	movf	___awmod@dividend,w
  2695  02E4  00CE               	movwf	?___awmod
  2696  02E5  0008               	return
  2697  02E6                     __end_of___awmod:	
  2698                           
  2699                           	psect	text19
  2700  0230                     __ptext19:	
  2701 ;; *************** function _daconv *****************
  2702 ;; Defined at:
  2703 ;;		line 200 in file "main.c"
  2704 ;; Parameters:    Size  Location     Type
  2705 ;;  digital         2   32[BANK0 ] int 
  2706 ;; Auto vars:     Size  Location     Type
  2707 ;;  analog          3   35[BANK0 ] int 
  2708 ;; Return value:  Size  Location     Type
  2709 ;;                  3   32[BANK0 ] int 
  2710 ;; Registers used:
  2711 ;;		wreg, status,2, status,0, pclath, cstack
  2712 ;; Tracked objects:
  2713 ;;		On entry : 0/0
  2714 ;;		On exit  : 0/0
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2717 ;;      Params:         0       3       0       0       0       0
  2718 ;;      Locals:         0       3       0       0       0       0
  2719 ;;      Temps:          0       0       0       0       0       0
  2720 ;;      Totals:         0       6       0       0       0       0
  2721 ;;Total ram usage:        6 bytes
  2722 ;; Hardware stack levels used:    1
  2723 ;; Hardware stack levels required when called:    2
  2724 ;; This function calls:
  2725 ;;		___awtoft
  2726 ;;		___ftdiv
  2727 ;;		___ftmul
  2728 ;; This function is called by:
  2729 ;;		_loop
  2730 ;; This function uses a non-reentrant model
  2731 ;;
  2732                           
  2733                           
  2734                           ;psect for function _daconv
  2735  0230                     _daconv:	
  2736                           
  2737                           ;main.c: 201: double analog;
  2738                           ;main.c: 202: analog = digital * 5.0 * 1.0 / 1024;
  2739                           
  2740                           ;incstack = 0
  2741                           ; Regs used in _daconv: [wreg+status,2+status,0+pclath+cstack]
  2742  0230  3000               	movlw	0
  2743  0231  0020               	movlb	0	; select bank0
  2744  0232  00B0               	movwf	___ftdiv@f2
  2745  0233  3080               	movlw	128
  2746  0234  00B1               	movwf	___ftdiv@f2+1
  2747  0235  3044               	movlw	68
  2748  0236  00B2               	movwf	___ftdiv@f2+2
  2749  0237  3000               	movlw	0
  2750  0238  00A0               	movwf	___ftmul@f1
  2751  0239  30A0               	movlw	160
  2752  023A  00A1               	movwf	___ftmul@f1+1
  2753  023B  3040               	movlw	64
  2754  023C  00A2               	movwf	___ftmul@f1+2
  2755  023D  0841               	movf	daconv@digital+1,w
  2756  023E  00F9               	movwf	___awtoft@c+1
  2757  023F  0840               	movf	daconv@digital,w
  2758  0240  00F8               	movwf	___awtoft@c
  2759  0241  3181  21CB  3182   	fcall	___awtoft
  2760  0244  0878               	movf	?___awtoft,w
  2761  0245  0020               	movlb	0	; select bank0
  2762  0246  00A3               	movwf	___ftmul@f2
  2763  0247  0879               	movf	?___awtoft+1,w
  2764  0248  00A4               	movwf	___ftmul@f2+1
  2765  0249  087A               	movf	?___awtoft+2,w
  2766  024A  00A5               	movwf	___ftmul@f2+2
  2767  024B  3185  257C  3182   	fcall	___ftmul
  2768  024E  0020               	movlb	0	; select bank0
  2769  024F  0820               	movf	?___ftmul,w
  2770  0250  00B3               	movwf	___ftdiv@f1
  2771  0251  0821               	movf	?___ftmul+1,w
  2772  0252  00B4               	movwf	___ftdiv@f1+1
  2773  0253  0822               	movf	?___ftmul+2,w
  2774  0254  00B5               	movwf	___ftdiv@f1+2
  2775  0255  3184  24D3         	fcall	___ftdiv
  2776  0257  0020               	movlb	0	; select bank0
  2777  0258  0830               	movf	?___ftdiv,w
  2778  0259  00C3               	movwf	daconv@analog
  2779  025A  0831               	movf	?___ftdiv+1,w
  2780  025B  00C4               	movwf	daconv@analog+1
  2781  025C  0832               	movf	?___ftdiv+2,w
  2782  025D  00C5               	movwf	daconv@analog+2
  2783                           
  2784                           ;main.c: 203: return analog;
  2785  025E  0843               	movf	daconv@analog,w
  2786  025F  00C0               	movwf	?_daconv
  2787  0260  0844               	movf	daconv@analog+1,w
  2788  0261  00C1               	movwf	?_daconv+1
  2789  0262  0845               	movf	daconv@analog+2,w
  2790  0263  00C2               	movwf	?_daconv+2
  2791  0264  0008               	return
  2792  0265                     __end_of_daconv:	
  2793                           
  2794                           	psect	text20
  2795  057C                     __ptext20:	
  2796 ;; *************** function ___ftmul *****************
  2797 ;; Defined at:
  2798 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftmul.c"
  2799 ;; Parameters:    Size  Location     Type
  2800 ;;  f1              3    0[BANK0 ] float 
  2801 ;;  f2              3    3[BANK0 ] float 
  2802 ;; Auto vars:     Size  Location     Type
  2803 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  2804 ;;  sign            1   15[BANK0 ] unsigned char 
  2805 ;;  cntr            1   14[BANK0 ] unsigned char 
  2806 ;;  exp             1   10[BANK0 ] unsigned char 
  2807 ;; Return value:  Size  Location     Type
  2808 ;;                  3    0[BANK0 ] float 
  2809 ;; Registers used:
  2810 ;;		wreg, status,2, status,0, pclath, cstack
  2811 ;; Tracked objects:
  2812 ;;		On entry : 0/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2816 ;;      Params:         0       6       0       0       0       0
  2817 ;;      Locals:         0       6       0       0       0       0
  2818 ;;      Temps:          0       4       0       0       0       0
  2819 ;;      Totals:         0      16       0       0       0       0
  2820 ;;Total ram usage:       16 bytes
  2821 ;; Hardware stack levels used:    1
  2822 ;; Hardware stack levels required when called:    1
  2823 ;; This function calls:
  2824 ;;		___ftpack
  2825 ;; This function is called by:
  2826 ;;		_disp
  2827 ;;		_daconv
  2828 ;; This function uses a non-reentrant model
  2829 ;;
  2830                           
  2831                           
  2832                           ;psect for function ___ftmul
  2833  057C                     ___ftmul:	
  2834                           
  2835                           ;incstack = 0
  2836                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2837  057C  0020               	movlb	0	; select bank0
  2838  057D  0820               	movf	___ftmul@f1,w
  2839  057E  00A6               	movwf	??___ftmul
  2840  057F  0821               	movf	___ftmul@f1+1,w
  2841  0580  00A7               	movwf	??___ftmul+1
  2842  0581  0822               	movf	___ftmul@f1+2,w
  2843  0582  00A8               	movwf	??___ftmul+2
  2844  0583  1003               	clrc
  2845  0584  0D27               	rlf	??___ftmul+1,w
  2846  0585  0D28               	rlf	??___ftmul+2,w
  2847  0586  00A9               	movwf	??___ftmul+3
  2848  0587  0829               	movf	??___ftmul+3,w
  2849  0588  00AA               	movwf	___ftmul@exp
  2850  0589  082A               	movf	___ftmul@exp,w
  2851  058A  1D03               	btfss	3,2
  2852  058B  2D93               	goto	l1225
  2853  058C  3000               	movlw	0
  2854  058D  00A0               	movwf	?___ftmul
  2855  058E  3000               	movlw	0
  2856  058F  00A1               	movwf	?___ftmul+1
  2857  0590  3000               	movlw	0
  2858  0591  00A2               	movwf	?___ftmul+2
  2859  0592  0008               	return
  2860  0593                     l1225:	
  2861  0593  0823               	movf	___ftmul@f2,w
  2862  0594  00A6               	movwf	??___ftmul
  2863  0595  0824               	movf	___ftmul@f2+1,w
  2864  0596  00A7               	movwf	??___ftmul+1
  2865  0597  0825               	movf	___ftmul@f2+2,w
  2866  0598  00A8               	movwf	??___ftmul+2
  2867  0599  1003               	clrc
  2868  059A  0D27               	rlf	??___ftmul+1,w
  2869  059B  0D28               	rlf	??___ftmul+2,w
  2870  059C  00A9               	movwf	??___ftmul+3
  2871  059D  0829               	movf	??___ftmul+3,w
  2872  059E  00AF               	movwf	___ftmul@sign
  2873  059F  082F               	movf	___ftmul@sign,w
  2874  05A0  1D03               	btfss	3,2
  2875  05A1  2DA9               	goto	l1231
  2876  05A2  3000               	movlw	0
  2877  05A3  00A0               	movwf	?___ftmul
  2878  05A4  3000               	movlw	0
  2879  05A5  00A1               	movwf	?___ftmul+1
  2880  05A6  3000               	movlw	0
  2881  05A7  00A2               	movwf	?___ftmul+2
  2882  05A8  0008               	return
  2883  05A9                     l1231:	
  2884  05A9  082F               	movf	___ftmul@sign,w
  2885  05AA  3E7B               	addlw	123
  2886  05AB  00A6               	movwf	??___ftmul
  2887  05AC  0826               	movf	??___ftmul,w
  2888  05AD  07AA               	addwf	___ftmul@exp,f
  2889  05AE  0820               	movf	___ftmul@f1,w
  2890  05AF  00A6               	movwf	??___ftmul
  2891  05B0  0821               	movf	___ftmul@f1+1,w
  2892  05B1  00A7               	movwf	??___ftmul+1
  2893  05B2  0822               	movf	___ftmul@f1+2,w
  2894  05B3  00A8               	movwf	??___ftmul+2
  2895  05B4  3010               	movlw	16
  2896  05B5                     u1435:	
  2897  05B5  36A8               	lsrf	??___ftmul+2,f
  2898  05B6  0CA7               	rrf	??___ftmul+1,f
  2899  05B7  0CA6               	rrf	??___ftmul,f
  2900  05B8  0B89               	decfsz	9,f
  2901  05B9  2DB5               	goto	u1435
  2902  05BA  0826               	movf	??___ftmul,w
  2903  05BB  00A9               	movwf	??___ftmul+3
  2904  05BC  0829               	movf	??___ftmul+3,w
  2905  05BD  00AF               	movwf	___ftmul@sign
  2906  05BE  0823               	movf	___ftmul@f2,w
  2907  05BF  00A6               	movwf	??___ftmul
  2908  05C0  0824               	movf	___ftmul@f2+1,w
  2909  05C1  00A7               	movwf	??___ftmul+1
  2910  05C2  0825               	movf	___ftmul@f2+2,w
  2911  05C3  00A8               	movwf	??___ftmul+2
  2912  05C4  3010               	movlw	16
  2913  05C5                     u1445:	
  2914  05C5  36A8               	lsrf	??___ftmul+2,f
  2915  05C6  0CA7               	rrf	??___ftmul+1,f
  2916  05C7  0CA6               	rrf	??___ftmul,f
  2917  05C8  0B89               	decfsz	9,f
  2918  05C9  2DC5               	goto	u1445
  2919  05CA  0826               	movf	??___ftmul,w
  2920  05CB  00A9               	movwf	??___ftmul+3
  2921  05CC  0829               	movf	??___ftmul+3,w
  2922  05CD  06AF               	xorwf	___ftmul@sign,f
  2923  05CE  3080               	movlw	128
  2924  05CF  00A6               	movwf	??___ftmul
  2925  05D0  0826               	movf	??___ftmul,w
  2926  05D1  05AF               	andwf	___ftmul@sign,f
  2927  05D2  17A1               	bsf	___ftmul@f1+1,7
  2928  05D3  17A4               	bsf	___ftmul@f2+1,7
  2929  05D4  30FF               	movlw	255
  2930  05D5  05A3               	andwf	___ftmul@f2,f
  2931  05D6  30FF               	movlw	255
  2932  05D7  05A4               	andwf	___ftmul@f2+1,f
  2933  05D8  3000               	movlw	0
  2934  05D9  05A5               	andwf	___ftmul@f2+2,f
  2935  05DA  3000               	movlw	0
  2936  05DB  00AB               	movwf	___ftmul@f3_as_product
  2937  05DC  3000               	movlw	0
  2938  05DD  00AC               	movwf	___ftmul@f3_as_product+1
  2939  05DE  3000               	movlw	0
  2940  05DF  00AD               	movwf	___ftmul@f3_as_product+2
  2941  05E0  3007               	movlw	7
  2942  05E1  00A6               	movwf	??___ftmul
  2943  05E2  0826               	movf	??___ftmul,w
  2944  05E3  00AE               	movwf	___ftmul@cntr
  2945  05E4                     l1243:	
  2946  05E4  1C20               	btfss	___ftmul@f1,0
  2947  05E5  2DEC               	goto	l1247
  2948  05E6  0823               	movf	___ftmul@f2,w
  2949  05E7  07AB               	addwf	___ftmul@f3_as_product,f
  2950  05E8  0824               	movf	___ftmul@f2+1,w
  2951  05E9  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  2952  05EA  0825               	movf	___ftmul@f2+2,w
  2953  05EB  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  2954  05EC                     l1247:	
  2955  05EC  3001               	movlw	1
  2956  05ED                     u1465:	
  2957  05ED  36A2               	lsrf	___ftmul@f1+2,f
  2958  05EE  0CA1               	rrf	___ftmul@f1+1,f
  2959  05EF  0CA0               	rrf	___ftmul@f1,f
  2960  05F0  0B89               	decfsz	9,f
  2961  05F1  2DED               	goto	u1465
  2962  05F2  3001               	movlw	1
  2963  05F3                     u1475:	
  2964  05F3  35A3               	lslf	___ftmul@f2,f
  2965  05F4  0DA4               	rlf	___ftmul@f2+1,f
  2966  05F5  0DA5               	rlf	___ftmul@f2+2,f
  2967  05F6  0B89               	decfsz	9,f
  2968  05F7  2DF3               	goto	u1475
  2969  05F8  3001               	movlw	1
  2970  05F9  02AE               	subwf	___ftmul@cntr,f
  2971  05FA  1D03               	btfss	3,2
  2972  05FB  2DE4               	goto	l1243
  2973  05FC  3009               	movlw	9
  2974  05FD  00A6               	movwf	??___ftmul
  2975  05FE  0826               	movf	??___ftmul,w
  2976  05FF  00AE               	movwf	___ftmul@cntr
  2977  0600                     l1255:	
  2978  0600  1C20               	btfss	___ftmul@f1,0
  2979  0601  2E08               	goto	l1259
  2980  0602  0823               	movf	___ftmul@f2,w
  2981  0603  07AB               	addwf	___ftmul@f3_as_product,f
  2982  0604  0824               	movf	___ftmul@f2+1,w
  2983  0605  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  2984  0606  0825               	movf	___ftmul@f2+2,w
  2985  0607  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  2986  0608                     l1259:	
  2987  0608  3001               	movlw	1
  2988  0609                     u1505:	
  2989  0609  36A2               	lsrf	___ftmul@f1+2,f
  2990  060A  0CA1               	rrf	___ftmul@f1+1,f
  2991  060B  0CA0               	rrf	___ftmul@f1,f
  2992  060C  0B89               	decfsz	9,f
  2993  060D  2E09               	goto	u1505
  2994  060E  3001               	movlw	1
  2995  060F                     u1515:	
  2996  060F  36AD               	lsrf	___ftmul@f3_as_product+2,f
  2997  0610  0CAC               	rrf	___ftmul@f3_as_product+1,f
  2998  0611  0CAB               	rrf	___ftmul@f3_as_product,f
  2999  0612  0B89               	decfsz	9,f
  3000  0613  2E0F               	goto	u1515
  3001  0614  3001               	movlw	1
  3002  0615  02AE               	subwf	___ftmul@cntr,f
  3003  0616  1D03               	btfss	3,2
  3004  0617  2E00               	goto	l1255
  3005  0618  082B               	movf	___ftmul@f3_as_product,w
  3006  0619  00F0               	movwf	___ftpack@arg
  3007  061A  082C               	movf	___ftmul@f3_as_product+1,w
  3008  061B  00F1               	movwf	___ftpack@arg+1
  3009  061C  082D               	movf	___ftmul@f3_as_product+2,w
  3010  061D  00F2               	movwf	___ftpack@arg+2
  3011  061E  082A               	movf	___ftmul@exp,w
  3012  061F  00A6               	movwf	??___ftmul
  3013  0620  0826               	movf	??___ftmul,w
  3014  0621  00F3               	movwf	___ftpack@exp
  3015  0622  082F               	movf	___ftmul@sign,w
  3016  0623  00A7               	movwf	??___ftmul+1
  3017  0624  0827               	movf	??___ftmul+1,w
  3018  0625  00F4               	movwf	___ftpack@sign
  3019  0626  3183  2340         	fcall	___ftpack
  3020  0628  0870               	movf	?___ftpack,w
  3021  0629  0020               	movlb	0	; select bank0
  3022  062A  00A0               	movwf	?___ftmul
  3023  062B  0871               	movf	?___ftpack+1,w
  3024  062C  00A1               	movwf	?___ftmul+1
  3025  062D  0872               	movf	?___ftpack+2,w
  3026  062E  00A2               	movwf	?___ftmul+2
  3027  062F  0008               	return
  3028  0630                     __end_of___ftmul:	
  3029                           
  3030                           	psect	text21
  3031  04D3                     __ptext21:	
  3032 ;; *************** function ___ftdiv *****************
  3033 ;; Defined at:
  3034 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdiv.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;  f2              3   16[BANK0 ] float 
  3037 ;;  f1              3   19[BANK0 ] float 
  3038 ;; Auto vars:     Size  Location     Type
  3039 ;;  f3              3   27[BANK0 ] float 
  3040 ;;  sign            1   31[BANK0 ] unsigned char 
  3041 ;;  exp             1   30[BANK0 ] unsigned char 
  3042 ;;  cntr            1   26[BANK0 ] unsigned char 
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  3   16[BANK0 ] float 
  3045 ;; Registers used:
  3046 ;;		wreg, status,2, status,0, pclath, cstack
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3052 ;;      Params:         0       6       0       0       0       0
  3053 ;;      Locals:         0       6       0       0       0       0
  3054 ;;      Temps:          0       4       0       0       0       0
  3055 ;;      Totals:         0      16       0       0       0       0
  3056 ;;Total ram usage:       16 bytes
  3057 ;; Hardware stack levels used:    1
  3058 ;; Hardware stack levels required when called:    1
  3059 ;; This function calls:
  3060 ;;		___ftpack
  3061 ;; This function is called by:
  3062 ;;		_disp
  3063 ;;		_daconv
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067                           
  3068                           ;psect for function ___ftdiv
  3069  04D3                     ___ftdiv:	
  3070                           
  3071                           ;incstack = 0
  3072                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3073  04D3  0020               	movlb	0	; select bank0
  3074  04D4  0833               	movf	___ftdiv@f1,w
  3075  04D5  00B6               	movwf	??___ftdiv
  3076  04D6  0834               	movf	___ftdiv@f1+1,w
  3077  04D7  00B7               	movwf	??___ftdiv+1
  3078  04D8  0835               	movf	___ftdiv@f1+2,w
  3079  04D9  00B8               	movwf	??___ftdiv+2
  3080  04DA  1003               	clrc
  3081  04DB  0D37               	rlf	??___ftdiv+1,w
  3082  04DC  0D38               	rlf	??___ftdiv+2,w
  3083  04DD  00B9               	movwf	??___ftdiv+3
  3084  04DE  0839               	movf	??___ftdiv+3,w
  3085  04DF  00BE               	movwf	___ftdiv@exp
  3086  04E0  083E               	movf	___ftdiv@exp,w
  3087  04E1  1D03               	btfss	3,2
  3088  04E2  2CEA               	goto	l1163
  3089  04E3  3000               	movlw	0
  3090  04E4  00B0               	movwf	?___ftdiv
  3091  04E5  3000               	movlw	0
  3092  04E6  00B1               	movwf	?___ftdiv+1
  3093  04E7  3000               	movlw	0
  3094  04E8  00B2               	movwf	?___ftdiv+2
  3095  04E9  0008               	return
  3096  04EA                     l1163:	
  3097  04EA  0830               	movf	___ftdiv@f2,w
  3098  04EB  00B6               	movwf	??___ftdiv
  3099  04EC  0831               	movf	___ftdiv@f2+1,w
  3100  04ED  00B7               	movwf	??___ftdiv+1
  3101  04EE  0832               	movf	___ftdiv@f2+2,w
  3102  04EF  00B8               	movwf	??___ftdiv+2
  3103  04F0  1003               	clrc
  3104  04F1  0D37               	rlf	??___ftdiv+1,w
  3105  04F2  0D38               	rlf	??___ftdiv+2,w
  3106  04F3  00B9               	movwf	??___ftdiv+3
  3107  04F4  0839               	movf	??___ftdiv+3,w
  3108  04F5  00BF               	movwf	___ftdiv@sign
  3109  04F6  083F               	movf	___ftdiv@sign,w
  3110  04F7  1D03               	btfss	3,2
  3111  04F8  2D00               	goto	l1169
  3112  04F9  3000               	movlw	0
  3113  04FA  00B0               	movwf	?___ftdiv
  3114  04FB  3000               	movlw	0
  3115  04FC  00B1               	movwf	?___ftdiv+1
  3116  04FD  3000               	movlw	0
  3117  04FE  00B2               	movwf	?___ftdiv+2
  3118  04FF  0008               	return
  3119  0500                     l1169:	
  3120  0500  3000               	movlw	0
  3121  0501  00BB               	movwf	___ftdiv@f3
  3122  0502  3000               	movlw	0
  3123  0503  00BC               	movwf	___ftdiv@f3+1
  3124  0504  3000               	movlw	0
  3125  0505  00BD               	movwf	___ftdiv@f3+2
  3126  0506  3089               	movlw	137
  3127  0507  073F               	addwf	___ftdiv@sign,w
  3128  0508  00B6               	movwf	??___ftdiv
  3129  0509  0836               	movf	??___ftdiv,w
  3130  050A  02BE               	subwf	___ftdiv@exp,f
  3131  050B  0833               	movf	___ftdiv@f1,w
  3132  050C  00B6               	movwf	??___ftdiv
  3133  050D  0834               	movf	___ftdiv@f1+1,w
  3134  050E  00B7               	movwf	??___ftdiv+1
  3135  050F  0835               	movf	___ftdiv@f1+2,w
  3136  0510  00B8               	movwf	??___ftdiv+2
  3137  0511  3010               	movlw	16
  3138  0512                     u1325:	
  3139  0512  36B8               	lsrf	??___ftdiv+2,f
  3140  0513  0CB7               	rrf	??___ftdiv+1,f
  3141  0514  0CB6               	rrf	??___ftdiv,f
  3142  0515  0B89               	decfsz	9,f
  3143  0516  2D12               	goto	u1325
  3144  0517  0836               	movf	??___ftdiv,w
  3145  0518  00B9               	movwf	??___ftdiv+3
  3146  0519  0839               	movf	??___ftdiv+3,w
  3147  051A  00BF               	movwf	___ftdiv@sign
  3148  051B  0830               	movf	___ftdiv@f2,w
  3149  051C  00B6               	movwf	??___ftdiv
  3150  051D  0831               	movf	___ftdiv@f2+1,w
  3151  051E  00B7               	movwf	??___ftdiv+1
  3152  051F  0832               	movf	___ftdiv@f2+2,w
  3153  0520  00B8               	movwf	??___ftdiv+2
  3154  0521  3010               	movlw	16
  3155  0522                     u1335:	
  3156  0522  36B8               	lsrf	??___ftdiv+2,f
  3157  0523  0CB7               	rrf	??___ftdiv+1,f
  3158  0524  0CB6               	rrf	??___ftdiv,f
  3159  0525  0B89               	decfsz	9,f
  3160  0526  2D22               	goto	u1335
  3161  0527  0836               	movf	??___ftdiv,w
  3162  0528  00B9               	movwf	??___ftdiv+3
  3163  0529  0839               	movf	??___ftdiv+3,w
  3164  052A  06BF               	xorwf	___ftdiv@sign,f
  3165  052B  3080               	movlw	128
  3166  052C  00B6               	movwf	??___ftdiv
  3167  052D  0836               	movf	??___ftdiv,w
  3168  052E  05BF               	andwf	___ftdiv@sign,f
  3169  052F  17B4               	bsf	___ftdiv@f1+1,7
  3170  0530  30FF               	movlw	255
  3171  0531  05B3               	andwf	___ftdiv@f1,f
  3172  0532  30FF               	movlw	255
  3173  0533  05B4               	andwf	___ftdiv@f1+1,f
  3174  0534  3000               	movlw	0
  3175  0535  05B5               	andwf	___ftdiv@f1+2,f
  3176  0536  17B1               	bsf	___ftdiv@f2+1,7
  3177  0537  30FF               	movlw	255
  3178  0538  05B0               	andwf	___ftdiv@f2,f
  3179  0539  30FF               	movlw	255
  3180  053A  05B1               	andwf	___ftdiv@f2+1,f
  3181  053B  3000               	movlw	0
  3182  053C  05B2               	andwf	___ftdiv@f2+2,f
  3183  053D  3018               	movlw	24
  3184  053E  00B6               	movwf	??___ftdiv
  3185  053F  0836               	movf	??___ftdiv,w
  3186  0540  00BA               	movwf	___ftdiv@cntr
  3187  0541                     l1183:	
  3188  0541  3001               	movlw	1
  3189  0542                     u1345:	
  3190  0542  35BB               	lslf	___ftdiv@f3,f
  3191  0543  0DBC               	rlf	___ftdiv@f3+1,f
  3192  0544  0DBD               	rlf	___ftdiv@f3+2,f
  3193  0545  0B89               	decfsz	9,f
  3194  0546  2D42               	goto	u1345
  3195  0547  0832               	movf	___ftdiv@f2+2,w
  3196  0548  0235               	subwf	___ftdiv@f1+2,w
  3197  0549  1D03               	skipz
  3198  054A  2D51               	goto	u1355
  3199  054B  0831               	movf	___ftdiv@f2+1,w
  3200  054C  0234               	subwf	___ftdiv@f1+1,w
  3201  054D  1D03               	skipz
  3202  054E  2D51               	goto	u1355
  3203  054F  0830               	movf	___ftdiv@f2,w
  3204  0550  0233               	subwf	___ftdiv@f1,w
  3205  0551                     u1355:	
  3206  0551  1C03               	skipc
  3207  0552  2D5A               	goto	l1191
  3208  0553  0830               	movf	___ftdiv@f2,w
  3209  0554  02B3               	subwf	___ftdiv@f1,f
  3210  0555  0831               	movf	___ftdiv@f2+1,w
  3211  0556  3BB4               	subwfb	___ftdiv@f1+1,f
  3212  0557  0832               	movf	___ftdiv@f2+2,w
  3213  0558  3BB5               	subwfb	___ftdiv@f1+2,f
  3214  0559  143B               	bsf	___ftdiv@f3,0
  3215  055A                     l1191:	
  3216  055A  3001               	movlw	1
  3217  055B                     u1365:	
  3218  055B  35B3               	lslf	___ftdiv@f1,f
  3219  055C  0DB4               	rlf	___ftdiv@f1+1,f
  3220  055D  0DB5               	rlf	___ftdiv@f1+2,f
  3221  055E  0B89               	decfsz	9,f
  3222  055F  2D5B               	goto	u1365
  3223  0560  3001               	movlw	1
  3224  0561  02BA               	subwf	___ftdiv@cntr,f
  3225  0562  1D03               	btfss	3,2
  3226  0563  2D41               	goto	l1183
  3227  0564  083B               	movf	___ftdiv@f3,w
  3228  0565  00F0               	movwf	___ftpack@arg
  3229  0566  083C               	movf	___ftdiv@f3+1,w
  3230  0567  00F1               	movwf	___ftpack@arg+1
  3231  0568  083D               	movf	___ftdiv@f3+2,w
  3232  0569  00F2               	movwf	___ftpack@arg+2
  3233  056A  083E               	movf	___ftdiv@exp,w
  3234  056B  00B6               	movwf	??___ftdiv
  3235  056C  0836               	movf	??___ftdiv,w
  3236  056D  00F3               	movwf	___ftpack@exp
  3237  056E  083F               	movf	___ftdiv@sign,w
  3238  056F  00B7               	movwf	??___ftdiv+1
  3239  0570  0837               	movf	??___ftdiv+1,w
  3240  0571  00F4               	movwf	___ftpack@sign
  3241  0572  3183  2340         	fcall	___ftpack
  3242  0574  0870               	movf	?___ftpack,w
  3243  0575  0020               	movlb	0	; select bank0
  3244  0576  00B0               	movwf	?___ftdiv
  3245  0577  0871               	movf	?___ftpack+1,w
  3246  0578  00B1               	movwf	?___ftdiv+1
  3247  0579  0872               	movf	?___ftpack+2,w
  3248  057A  00B2               	movwf	?___ftdiv+2
  3249  057B  0008               	return
  3250  057C                     __end_of___ftdiv:	
  3251                           
  3252                           	psect	text22
  3253  01CB                     __ptext22:	
  3254 ;; *************** function ___awtoft *****************
  3255 ;; Defined at:
  3256 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awtoft.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;  c               2    8[COMMON] int 
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;  sign            1   13[COMMON] unsigned char 
  3261 ;; Return value:  Size  Location     Type
  3262 ;;                  3    8[COMMON] float 
  3263 ;; Registers used:
  3264 ;;		wreg, status,2, status,0, pclath, cstack
  3265 ;; Tracked objects:
  3266 ;;		On entry : 0/0
  3267 ;;		On exit  : 0/0
  3268 ;;		Unchanged: 0/0
  3269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3270 ;;      Params:         3       0       0       0       0       0
  3271 ;;      Locals:         1       0       0       0       0       0
  3272 ;;      Temps:          2       0       0       0       0       0
  3273 ;;      Totals:         6       0       0       0       0       0
  3274 ;;Total ram usage:        6 bytes
  3275 ;; Hardware stack levels used:    1
  3276 ;; Hardware stack levels required when called:    1
  3277 ;; This function calls:
  3278 ;;		___ftpack
  3279 ;; This function is called by:
  3280 ;;		_daconv
  3281 ;; This function uses a non-reentrant model
  3282 ;;
  3283                           
  3284                           
  3285                           ;psect for function ___awtoft
  3286  01CB                     ___awtoft:	
  3287                           
  3288                           ;incstack = 0
  3289                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  3290  01CB  01FD               	clrf	___awtoft@sign
  3291  01CC  1FF9               	btfss	___awtoft@c+1,7
  3292  01CD  29D5               	goto	l1153
  3293  01CE  09F8               	comf	___awtoft@c,f
  3294  01CF  09F9               	comf	___awtoft@c+1,f
  3295  01D0  0AF8               	incf	___awtoft@c,f
  3296  01D1  1903               	skipnz
  3297  01D2  0AF9               	incf	___awtoft@c+1,f
  3298  01D3  01FD               	clrf	___awtoft@sign
  3299  01D4  0AFD               	incf	___awtoft@sign,f
  3300  01D5                     l1153:	
  3301  01D5  0878               	movf	___awtoft@c,w
  3302  01D6  00F0               	movwf	___ftpack@arg
  3303  01D7  0879               	movf	___awtoft@c+1,w
  3304  01D8  00F1               	movwf	___ftpack@arg+1
  3305  01D9  01F2               	clrf	___ftpack@arg+2
  3306  01DA  308E               	movlw	142
  3307  01DB  00FB               	movwf	??___awtoft
  3308  01DC  087B               	movf	??___awtoft,w
  3309  01DD  00F3               	movwf	___ftpack@exp
  3310  01DE  087D               	movf	___awtoft@sign,w
  3311  01DF  00FC               	movwf	??___awtoft+1
  3312  01E0  087C               	movf	??___awtoft+1,w
  3313  01E1  00F4               	movwf	___ftpack@sign
  3314  01E2  3183  2340         	fcall	___ftpack
  3315  01E4  0870               	movf	?___ftpack,w
  3316  01E5  00F8               	movwf	?___awtoft
  3317  01E6  0871               	movf	?___ftpack+1,w
  3318  01E7  00F9               	movwf	?___awtoft+1
  3319  01E8  0872               	movf	?___ftpack+2,w
  3320  01E9  00FA               	movwf	?___awtoft+2
  3321  01EA  0008               	return
  3322  01EB                     __end_of___awtoft:	
  3323                           
  3324                           	psect	text23
  3325  0340                     __ptext23:	
  3326 ;; *************** function ___ftpack *****************
  3327 ;; Defined at:
  3328 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;  arg             3    0[COMMON] unsigned um
  3331 ;;  exp             1    3[COMMON] unsigned char 
  3332 ;;  sign            1    4[COMMON] unsigned char 
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;		None
  3335 ;; Return value:  Size  Location     Type
  3336 ;;                  3    0[COMMON] float 
  3337 ;; Registers used:
  3338 ;;		wreg, status,2, status,0
  3339 ;; Tracked objects:
  3340 ;;		On entry : 0/0
  3341 ;;		On exit  : 0/0
  3342 ;;		Unchanged: 0/0
  3343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3344 ;;      Params:         5       0       0       0       0       0
  3345 ;;      Locals:         0       0       0       0       0       0
  3346 ;;      Temps:          3       0       0       0       0       0
  3347 ;;      Totals:         8       0       0       0       0       0
  3348 ;;Total ram usage:        8 bytes
  3349 ;; Hardware stack levels used:    1
  3350 ;; This function calls:
  3351 ;;		Nothing
  3352 ;; This function is called by:
  3353 ;;		___awtoft
  3354 ;;		___ftdiv
  3355 ;;		___ftmul
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358                           
  3359                           
  3360                           ;psect for function ___ftpack
  3361  0340                     ___ftpack:	
  3362                           
  3363                           ;incstack = 0
  3364                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3365  0340  0873               	movf	___ftpack@exp,w
  3366  0341  1903               	btfsc	3,2
  3367  0342  2B48               	goto	l1047
  3368  0343  0872               	movf	___ftpack@arg+2,w
  3369  0344  0471               	iorwf	___ftpack@arg+1,w
  3370  0345  0470               	iorwf	___ftpack@arg,w
  3371  0346  1D03               	skipz
  3372  0347  2B59               	goto	l1053
  3373  0348                     l1047:	
  3374  0348  3000               	movlw	0
  3375  0349  00F0               	movwf	?___ftpack
  3376  034A  3000               	movlw	0
  3377  034B  00F1               	movwf	?___ftpack+1
  3378  034C  3000               	movlw	0
  3379  034D  00F2               	movwf	?___ftpack+2
  3380  034E  0008               	return
  3381  034F                     l1051:	
  3382  034F  3001               	movlw	1
  3383  0350  00F5               	movwf	??___ftpack
  3384  0351  0875               	movf	??___ftpack,w
  3385  0352  07F3               	addwf	___ftpack@exp,f
  3386  0353  3001               	movlw	1
  3387  0354                     u1055:	
  3388  0354  36F2               	lsrf	___ftpack@arg+2,f
  3389  0355  0CF1               	rrf	___ftpack@arg+1,f
  3390  0356  0CF0               	rrf	___ftpack@arg,f
  3391  0357  0B89               	decfsz	9,f
  3392  0358  2B54               	goto	u1055
  3393  0359                     l1053:	
  3394  0359  30FE               	movlw	254
  3395  035A  0572               	andwf	___ftpack@arg+2,w
  3396  035B  1903               	btfsc	3,2
  3397  035C  2B72               	goto	l406
  3398  035D  2B4F               	goto	l1051
  3399  035E                     l1055:	
  3400  035E  3001               	movlw	1
  3401  035F  00F5               	movwf	??___ftpack
  3402  0360  0875               	movf	??___ftpack,w
  3403  0361  07F3               	addwf	___ftpack@exp,f
  3404  0362  3001               	movlw	1
  3405  0363  07F0               	addwf	___ftpack@arg,f
  3406  0364  3000               	movlw	0
  3407  0365  1803               	skipnc
  3408  0366  3001               	movlw	1
  3409  0367  07F1               	addwf	___ftpack@arg+1,f
  3410  0368  3000               	movlw	0
  3411  0369  1803               	skipnc
  3412  036A  3001               	movlw	1
  3413  036B  07F2               	addwf	___ftpack@arg+2,f
  3414  036C  3001               	movlw	1
  3415  036D                     u1075:	
  3416  036D  36F2               	lsrf	___ftpack@arg+2,f
  3417  036E  0CF1               	rrf	___ftpack@arg+1,f
  3418  036F  0CF0               	rrf	___ftpack@arg,f
  3419  0370  0B89               	decfsz	9,f
  3420  0371  2B6D               	goto	u1075
  3421  0372                     l406:	
  3422  0372  30FF               	movlw	255
  3423  0373  0572               	andwf	___ftpack@arg+2,w
  3424  0374  1903               	btfsc	3,2
  3425  0375  2B7F               	goto	l1063
  3426  0376  2B5E               	goto	l1055
  3427  0377                     l1061:	
  3428  0377  3001               	movlw	1
  3429  0378  02F3               	subwf	___ftpack@exp,f
  3430  0379  3001               	movlw	1
  3431  037A                     u1095:	
  3432  037A  35F0               	lslf	___ftpack@arg,f
  3433  037B  0DF1               	rlf	___ftpack@arg+1,f
  3434  037C  0DF2               	rlf	___ftpack@arg+2,f
  3435  037D  0B89               	decfsz	9,f
  3436  037E  2B7A               	goto	u1095
  3437  037F                     l1063:	
  3438  037F  1BF1               	btfsc	___ftpack@arg+1,7
  3439  0380  2B85               	goto	l413
  3440  0381  3002               	movlw	2
  3441  0382  0273               	subwf	___ftpack@exp,w
  3442  0383  1803               	skipnc
  3443  0384  2B77               	goto	l1061
  3444  0385                     l413:	
  3445  0385  1873               	btfsc	___ftpack@exp,0
  3446  0386  2B8D               	goto	l414
  3447  0387  30FF               	movlw	255
  3448  0388  05F0               	andwf	___ftpack@arg,f
  3449  0389  307F               	movlw	127
  3450  038A  05F1               	andwf	___ftpack@arg+1,f
  3451  038B  30FF               	movlw	255
  3452  038C  05F2               	andwf	___ftpack@arg+2,f
  3453  038D                     l414:	
  3454  038D  1003               	clrc
  3455  038E  0CF3               	rrf	___ftpack@exp,f
  3456  038F  0873               	movf	___ftpack@exp,w
  3457  0390  00F5               	movwf	??___ftpack
  3458  0391  01F6               	clrf	??___ftpack+1
  3459  0392  01F7               	clrf	??___ftpack+2
  3460  0393  3010               	movlw	16
  3461  0394                     u1135:	
  3462  0394  35F5               	lslf	??___ftpack,f
  3463  0395  0DF6               	rlf	??___ftpack+1,f
  3464  0396  0DF7               	rlf	??___ftpack+2,f
  3465  0397  0B89               	decfsz	9,f
  3466  0398  2B94               	goto	u1135
  3467  0399  0875               	movf	??___ftpack,w
  3468  039A  04F0               	iorwf	___ftpack@arg,f
  3469  039B  0876               	movf	??___ftpack+1,w
  3470  039C  04F1               	iorwf	___ftpack@arg+1,f
  3471  039D  0877               	movf	??___ftpack+2,w
  3472  039E  04F2               	iorwf	___ftpack@arg+2,f
  3473  039F  0874               	movf	___ftpack@sign,w
  3474  03A0  1903               	btfsc	3,2
  3475  03A1  0008               	return
  3476  03A2  17F2               	bsf	___ftpack@arg+2,7
  3477  03A3  0008               	return
  3478  03A4                     __end_of___ftpack:	
  3479                           
  3480                           	psect	text24
  3481  020C                     __ptext24:	
  3482 ;; *************** function _adconv *****************
  3483 ;; Defined at:
  3484 ;;		line 188 in file "main.c"
  3485 ;; Parameters:    Size  Location     Type
  3486 ;;		None
  3487 ;; Auto vars:     Size  Location     Type
  3488 ;;  temp            2    9[COMMON] int 
  3489 ;; Return value:  Size  Location     Type
  3490 ;;                  2    0[COMMON] int 
  3491 ;; Registers used:
  3492 ;;		wreg
  3493 ;; Tracked objects:
  3494 ;;		On entry : 0/0
  3495 ;;		On exit  : 0/0
  3496 ;;		Unchanged: 0/0
  3497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3498 ;;      Params:         2       0       0       0       0       0
  3499 ;;      Locals:         2       0       0       0       0       0
  3500 ;;      Temps:          7       0       0       0       0       0
  3501 ;;      Totals:        11       0       0       0       0       0
  3502 ;;Total ram usage:       11 bytes
  3503 ;; Hardware stack levels used:    1
  3504 ;; This function calls:
  3505 ;;		Nothing
  3506 ;; This function is called by:
  3507 ;;		_loop
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           
  3512                           ;psect for function _adconv
  3513  020C                     _adconv:	
  3514                           
  3515                           ;main.c: 190: int temp;
  3516                           ;main.c: 192: GO_nDONE = 1;
  3517                           
  3518                           ;incstack = 0
  3519                           ; Regs used in _adconv: [wreg]
  3520  020C  0021               	movlb	1	; select bank1
  3521  020D  149D               	bsf	29,1	;volatile
  3522  020E                     l155:	
  3523                           ;main.c: 193: while(GO_nDONE);
  3524                           
  3525  020E  189D               	btfsc	29,1	;volatile
  3526  020F  2A0E               	goto	l155
  3527                           
  3528                           ;main.c: 194: temp = ADRESH;
  3529  0210  081C               	movf	28,w	;volatile
  3530  0211  00F2               	movwf	??_adconv
  3531  0212  01F3               	clrf	??_adconv+1
  3532  0213  0872               	movf	??_adconv,w
  3533  0214  00F9               	movwf	adconv@temp
  3534  0215  0873               	movf	??_adconv+1,w
  3535  0216  00FA               	movwf	adconv@temp+1
  3536                           
  3537                           ;main.c: 195: temp = ( temp << 8 ) | ADRESL;
  3538  0217  081B               	movf	27,w	;volatile
  3539  0218  00F2               	movwf	??_adconv
  3540  0219  01F3               	clrf	??_adconv+1
  3541  021A  087A               	movf	adconv@temp+1,w
  3542  021B  00F5               	movwf	??_adconv+3
  3543  021C  0879               	movf	adconv@temp,w
  3544  021D  00F4               	movwf	??_adconv+2
  3545  021E  0874               	movf	??_adconv+2,w
  3546  021F  00F5               	movwf	??_adconv+3
  3547  0220  01F4               	clrf	??_adconv+2
  3548  0221  0872               	movf	??_adconv,w
  3549  0222  0474               	iorwf	??_adconv+2,w
  3550  0223  00F7               	movwf	??_adconv+5
  3551  0224  0873               	movf	??_adconv+1,w
  3552  0225  0475               	iorwf	??_adconv+3,w
  3553  0226  00F8               	movwf	??_adconv+6
  3554  0227  0877               	movf	??_adconv+5,w
  3555  0228  00F9               	movwf	adconv@temp
  3556  0229  0878               	movf	??_adconv+6,w
  3557  022A  00FA               	movwf	adconv@temp+1
  3558                           
  3559                           ;main.c: 197: return temp;
  3560  022B  087A               	movf	adconv@temp+1,w
  3561  022C  00F1               	movwf	?_adconv+1
  3562  022D  0879               	movf	adconv@temp,w
  3563  022E  00F0               	movwf	?_adconv
  3564  022F  0008               	return
  3565  0230                     __end_of_adconv:	
  3566                           
  3567                           	psect	text25
  3568  0180                     __ptext25:	
  3569 ;; *************** function _init *****************
  3570 ;; Defined at:
  3571 ;;		line 76 in file "main.c"
  3572 ;; Parameters:    Size  Location     Type
  3573 ;;		None
  3574 ;; Auto vars:     Size  Location     Type
  3575 ;;		None
  3576 ;; Return value:  Size  Location     Type
  3577 ;;                  1    wreg      void 
  3578 ;; Registers used:
  3579 ;;		wreg, status,2
  3580 ;; Tracked objects:
  3581 ;;		On entry : 0/0
  3582 ;;		On exit  : 0/0
  3583 ;;		Unchanged: 0/0
  3584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3585 ;;      Params:         0       0       0       0       0       0
  3586 ;;      Locals:         0       0       0       0       0       0
  3587 ;;      Temps:          1       0       0       0       0       0
  3588 ;;      Totals:         1       0       0       0       0       0
  3589 ;;Total ram usage:        1 bytes
  3590 ;; Hardware stack levels used:    1
  3591 ;; This function calls:
  3592 ;;		Nothing
  3593 ;; This function is called by:
  3594 ;;		_main
  3595 ;; This function uses a non-reentrant model
  3596 ;;
  3597                           
  3598                           
  3599                           ;psect for function _init
  3600  0180                     _init:	
  3601                           
  3602                           ;main.c: 77: OSCCON = 0b01110010;
  3603                           
  3604                           ;incstack = 0
  3605                           ; Regs used in _init: [wreg+status,2]
  3606  0180  3072               	movlw	114
  3607  0181  0021               	movlb	1	; select bank1
  3608  0182  0099               	movwf	25	;volatile
  3609                           
  3610                           ;main.c: 78: ANSELA = 0b00010000;
  3611  0183  3010               	movlw	16
  3612  0184  0023               	movlb	3	; select bank3
  3613  0185  008C               	movwf	12	;volatile
  3614                           
  3615                           ;main.c: 79: ANSELB = 0b00000000;
  3616  0186  018D               	clrf	13	;volatile
  3617                           
  3618                           ;main.c: 80: TRISA = 0b00010000;
  3619  0187  3010               	movlw	16
  3620  0188  0021               	movlb	1	; select bank1
  3621  0189  008C               	movwf	12	;volatile
  3622                           
  3623                           ;main.c: 81: TRISB = 0b00000000;
  3624  018A  018D               	clrf	13	;volatile
  3625                           
  3626                           ;main.c: 82: PORTA = 0b00000000;
  3627  018B  0020               	movlb	0	; select bank0
  3628  018C  018C               	clrf	12	;volatile
  3629                           
  3630                           ;main.c: 83: PORTB = 0b00000000;
  3631  018D  018D               	clrf	13	;volatile
  3632                           
  3633                           ;main.c: 85: ADCON1 = 0b10010000;
  3634  018E  3090               	movlw	144
  3635  018F  0021               	movlb	1	; select bank1
  3636  0190  009E               	movwf	30	;volatile
  3637                           
  3638                           ;main.c: 86: ADCON0 = 0b00010011;
  3639  0191  3013               	movlw	19
  3640  0192  009D               	movwf	29	;volatile
  3641                           
  3642                           ;main.c: 87: _delay((unsigned long)((5)*(8000000/4000000.0)));
  3643  0193  3003               	movlw	3
  3644  0194  00F0               	movwf	??_init
  3645  0195                     u1747:	
  3646  0195  0BF0               	decfsz	??_init,f
  3647  0196  2995               	goto	u1747
  3648  0197  0008               	return
  3649  0198                     __end_of_init:	
  3650  007E                     btemp	set	126	;btemp
  3651  007E                     wtemp	set	126
  3652  007E                     wtemp0	set	126
  3653  0080                     wtemp1	set	128
  3654  0082                     wtemp2	set	130
  3655  0084                     wtemp3	set	132
  3656  0086                     wtemp4	set	134
  3657  0088                     wtemp5	set	136
  3658  007F                     wtemp6	set	127
  3659  007E                     ttemp	set	126
  3660  007E                     ttemp0	set	126
  3661  0081                     ttemp1	set	129
  3662  0084                     ttemp2	set	132
  3663  0087                     ttemp3	set	135
  3664  007F                     ttemp4	set	127
  3665  007E                     ltemp	set	126
  3666  007E                     ltemp0	set	126
  3667  0082                     ltemp1	set	130
  3668  0086                     ltemp2	set	134
  3669  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        168
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      78
    BANK1            80      0       0
    BANK2            40      0       0
    BANK3             0      0       0
    BANK4             0      0       0

Pointer List with Targets:

    set_disp@disp	PTR int  size(2) Largest target is 168
		 -> led_disp(BIGRAM[168]), 


Critical Paths under _main in COMMON

    _set_disp->___wmul
    _daconv->___awtoft
    ___ftmul->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    _loop->_disp
    _disp->___awmod
    ___fttol->___ftdiv
    ___awmod->___fttol
    _daconv->___ftdiv
    ___ftdiv->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   15186
                               _init
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0   15186
                             _adconv
                             _daconv
                               _disp
 ---------------------------------------------------------------------------------
 (2) _disp                                                25    22      3    8440
                                             53 BANK0     25    22      3
                            ___awmod
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___fttol
                             ___wmul
                             _adconv (ARG)
                              _close
                             _daconv (ARG)
                               _open
                           _set_disp
                               _wait
 ---------------------------------------------------------------------------------
 (3) _wait                                                 6     4      2      99
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) _set_disp                                             4     0      4     882
                                              6 COMMON     4     0      4
                             ___wmul (ARG)
                             _disp_a
                             _disp_b
                             _disp_c
                             _disp_d
                            _disp_dp
                             _disp_e
                             _disp_f
                             _disp_g
 ---------------------------------------------------------------------------------
 (4) _disp_g                                               2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _disp_f                                               2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _disp_e                                               2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _disp_dp                                              2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _disp_d                                               2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _disp_c                                               2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _disp_b                                               2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _disp_a                                               2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _open                                                 2     0      2      75
                                              0 COMMON     2     0      2
                              _close
 ---------------------------------------------------------------------------------
 (4) _close                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     198
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     464
                                             32 BANK0     14    10      4
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     560
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     720
                                             46 BANK0      7     3      4
                            ___ftdiv (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) _daconv                                               6     3      3    6700
                                             32 BANK0      6     3      3
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                             _adconv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2418
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    2372
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    1812
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) _adconv                                              11     9      2      46
                                              0 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (1) _init                                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
   _loop
     _adconv
     _daconv
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       _adconv (ARG)
     _disp
       ___awmod
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___fttol (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
       ___wmul
       _adconv (ARG)
       _close (ARG)
       _daconv (ARG)
         ___awtoft
           ___ftpack
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         _adconv (ARG)
       _open (ARG)
         _close
       _set_disp (ARG)
         ___wmul (ARG)
         _disp_a (ARG)
         _disp_b (ARG)
         _disp_c (ARG)
         _disp_d (ARG)
         _disp_dp (ARG)
         _disp_e (ARG)
         _disp_f (ARG)
         _disp_g (ARG)
       _wait (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4E      4E       6       97.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               28      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK3                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Tue Mar 07 18:48:00 2017

            __CFG_CP$OFF 0000                       l95 019A      ___wmul@multiplicand 0072  
                    l143 01EF                      l145 01F2                      l155 020E  
                    l147 01F5                      l413 0385                      l245 01B8  
                    l149 020B                      l414 038D                      l406 0372  
                    l497 0411                      _RA0 0060                      _RA1 0061  
                    _RA2 0062                      _RA3 0063                      _RB4 006C  
                    _RA6 0066                      _RB5 006D                      _RA7 0067  
                    _RB6 006E                      _RB7 006F             __CFG_CPD$OFF 0000  
                    u910 0134                      u930 013C                      u870 0124  
                    u950 014C                      u890 012C                      u970 0154  
                    u990 015C             ___awmod@sign 0054             __CFG_BORV$HI 0000  
                    wreg 0009             __CFG_LVP$OFF 0000             ___ftdiv@cntr 003A  
           ___ftdiv@sign 003F                     l1051 034F                     l1115 02AB  
                   l1203 027B                     l1061 0377                     l1053 0359  
                   l1141 02E1                     l1133 02D0                     l1301 0408  
                   l1063 037F                     l1055 035E                     l1047 0348  
                   l1231 05A9                     l1127 02B8                     l1119 02B2  
                   l1207 0291                     l1303 0414                     l1153 01D5  
                   l1225 0593                     l1129 02C4                     l1137 02D9  
                   l1401 01FD                     l1163 04EA                     l1243 05E4  
                   l1307 0422                     l1331 065E                     l1341 069B  
                   l1191 055A                     l1183 0541                     l1255 0600  
                   l1247 05EC                     l1095 01B2                     l1087 01F8  
                   l1351 06E1                     l1169 0500                     l1361 078B  
                   l1259 0608                     l1275 03BD                     l1355 077E  
                   l1347 06C6                     l1293 03ED                     l1373 07ED  
                   l1295 03FB                     l1379 011B                     u1010 0144  
                   u1135 0394                     u1055 0354                     u1075 036D  
                   u1235 02BB                     u1155 01A0                     u1325 0512  
                   u1095 037A                     u1335 0522                     u1255 02CA  
                   u1175 01B9                     u1345 0542                     u1505 0609  
                   u1265 02D1                     u1185 01BE                     u1355 0551  
                   u1515 060F                     u1435 05B5                     u1700 07A3  
                   u1365 055B                     u1445 05C5                     u1605 0409  
                   u1710 07A4                     u1465 05ED                     u1545 03C4  
                   u1705 079F                     u1475 05F3                     u1725 07EB  
                   u1575 03EE                     u1737 01A6                     u1747 0195  
                   u1695 0789             __CFG_WRT$OFF 0000                     _disp 0630  
                   _main 0118             ___ftpack@arg 0070                     _init 0180  
                   _loop 016B             ___ftpack@exp 0073                     _open 01EB  
                   _wait 0198                     fsr0h 0005                     fsr1h 0007  
                   fsr0l 0004                     fsr1l 0006                     btemp 007E  
          __CFG_BOREN$ON 0000                     ltemp 007E                     start 0002  
                   ttemp 007E                     wtemp 007E            __CFG_IESO$OFF 0000  
           ___ftmul@cntr 002E             ___ftmul@sign 002F             ___fttol@exp1 004D  
           ___fttol@lval 0049                    ?_disp 0055                    ?_main 0070  
                  ?_init 0070                    ?_loop 0070                    ?_open 0070  
          __CFG_WDTE$OFF 0000          __end_of___awmod 02E6                    ?_wait 0070  
        __end_of___ftdiv 057C          __end_of___ftmul 0630          __end_of___fttol 042B  
                  _PORTA 000C                    _PORTB 000D                    _TRISA 008C  
                  _TRISB 008D            __CFG_PWRTE$ON 0000           __CFG_FCMEN$OFF 0000  
        __end_of_disp_dp 0147            ___awtoft@sign 007D                    _close 0113  
          ___ftpack@sign 0074                    disp@i 006C                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  wait@i 0074                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F            daconv@digital 0040  
         __CFG_MCLRE$OFF 0000          __initialization 07F0             __end_of_disp 07F0  
           __end_of_main 011F             __end_of_init 0198             __end_of_loop 0180  
           __end_of_open 020C             __end_of_wait 01B0                   ??_disp 0058  
                 ??_main 007E            ___fttol@sign1 0048                   ??_init 0070  
                 ??_loop 007E                   ??_open 0072                   ??_wait 0072  
         __CFG_PLLEN$OFF 0000                   ?_close 0070                   _ADCON0 009D  
                 _ADCON1 009E                   _ADRESH 009C                   _ADRESL 009B  
       __end_of___awtoft 01EB                   _ANSELA 018C                   _ANSELB 018D  
       __end_of___ftpack 03A4                   _OSCCON 0099                   ___ftge 0265  
                 _adconv 020C                   ___wmul 01B0                   _daconv 0230  
         __CFG_STVREN$ON 0000                ??___awmod 0052                ??___ftdiv 0036  
              ??___ftmul 0026                ??___fttol 0044                   _disp_a 011F  
                 _disp_b 0127                   _disp_c 012F                   _disp_d 0137  
                 _disp_e 0147                   _disp_f 014F                   _disp_g 0157  
        ___awmod@divisor 004E                   disp@dp 005E          ___awmod@counter 0053  
              ??_disp_dp 0072    ___ftmul@f3_as_product 002B             __pdataBIGRAM 20C8  
       __end_of_set_disp 0340  __end_of__initialization 07FD               ___ftge@ff1 0070  
             ___ftge@ff2 0073               ___ftdiv@f1 0033               ___ftdiv@f2 0030  
             ___ftdiv@f3 003B               ___awtoft@c 0078               ___ftmul@f1 0020  
             ___ftmul@f2 0023               ___fttol@f1 0040           __pcstackCOMMON 0070  
          __end_of_close 0118                  ??_close 0070               __pmaintext 0118  
                ?___ftge 0070                  ?_adconv 0070                  ?___wmul 0070  
                ?_daconv 0040                  ?_disp_a 0070                  ?_disp_b 0070  
                ?_disp_c 0070                  ?_disp_d 0070                  ?_disp_e 0070  
                ?_disp_f 0070                  ?_disp_g 0070                ?___awtoft 0078  
              ?___ftpack 0070               adconv@temp 0079                ?_set_disp 0076  
        __size_of___ftge 003B                  ___awmod 02A0                  ___ftdiv 04D3  
        __size_of_adconv 0024          __size_of___wmul 001B                  ___ftmul 057C  
                ___fttol 03A4          __size_of_daconv 0035          __size_of_disp_a 0008  
        __size_of_disp_b 0008          __size_of_disp_c 0008          __size_of_disp_d 0008  
        __size_of_disp_e 0008          __size_of_disp_f 0008          __size_of_disp_g 0008  
             ??___awtoft 007B               ??___ftpack 0075                  __ptext1 016B  
                __ptext2 0630                  __ptext3 0198                  __ptext4 02E6  
                __ptext5 0157                  __ptext6 014F                  __ptext7 0147  
                __ptext8 013F                  __ptext9 0137                  _disp_dp 013F  
       ___awmod@dividend 0050                  disp@num 0055     end_of_initialization 07FD  
                init_ram 015F                  initloop 0160               ??_set_disp 007A  
             disp@digits 0064         __CFG_FOSC$INTOSC 0000              ___ftdiv@exp 003E  
            ___ftmul@exp 002A           __end_of___ftge 02A0            __pidataBIGRAM 042B  
         __end_of_adconv 0230           __end_of___wmul 01CB           __end_of_daconv 0265  
         __end_of_disp_a 0127           __end_of_disp_b 012F           __end_of_disp_c 0137  
         __end_of_disp_d 013F           __end_of_disp_e 014F           __end_of_disp_f 0157  
         __end_of_disp_g 015F             daconv@analog 0043      start_initialization 07F0  
               ??___ftge 0076                 ??_adconv 0072                 ??___wmul 0074  
               ??_daconv 007E                 ??_disp_a 0072                 ??_disp_b 0072  
               ??_disp_c 0072                 ??_disp_d 0072                 ??_disp_e 0072  
               ??_disp_f 0072                 ??_disp_g 0072        __size_of___awtoft 0020  
      __size_of___ftpack 0064                ___latbits 0001            __pcstackBANK0 0020  
             open@select 0070                 ?___awmod 004E                 ?___ftdiv 0030  
               ?___ftmul 0020                 ?___fttol 0040        __size_of_set_disp 005A  
          wait@wait_time 0070                 ?_disp_dp 0070           __size_of_close 0005  
             set_disp@dp 0078           ___wmul@product 0074                 _GO_nDONE 04E9  
      ___wmul@multiplier 0070                disp_dp@sw 0070         __size_of___awmod 0046  
       __size_of___ftdiv 00A9         __size_of___ftmul 00B4         __size_of___fttol 0087  
               ___awtoft 01CB                 ___ftpack 0340         __size_of_disp_dp 0008  
               __ptext10 012F                 __ptext11 0127                 __ptext20 057C  
               __ptext12 011F                 __ptext21 04D3                 __ptext13 01EB  
               __ptext22 01CB                 __ptext14 0113                 __ptext23 0340  
               __ptext15 01B0                 __ptext24 020C                 __ptext16 03A4  
               __ptext25 0180                 __ptext17 0265                 __ptext18 02A0  
               __ptext19 0230                 _led_disp 20C8             set_disp@disp 0076  
          __size_of_disp 01C0            __size_of_main 0007            __size_of_init 0018  
          __size_of_loop 0015            __size_of_open 0021            __size_of_wait 0018  
               _set_disp 02E6                 disp@over 0060                 disp_a@sw 0070  
               disp_b@sw 0070                 disp_c@sw 0070                 disp_d@sw 0070  
               disp_e@sw 0070                 disp_f@sw 0070                 disp_g@sw 0070  
      __CFG_CLKOUTEN$OFF 0000             disp@dp_index 0062  
