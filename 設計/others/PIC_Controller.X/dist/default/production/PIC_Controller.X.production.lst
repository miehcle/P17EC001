

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Sun Apr 23 18:19:43 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	dabs	1,0x7E,2
    38  0000                     	;# 
    39  0001                     	;# 
    40  0002                     	;# 
    41  0003                     	;# 
    42  0004                     	;# 
    43  0005                     	;# 
    44  0006                     	;# 
    45  0007                     	;# 
    46  0008                     	;# 
    47  0009                     	;# 
    48  000A                     	;# 
    49  000B                     	;# 
    50  000C                     	;# 
    51  000D                     	;# 
    52  0011                     	;# 
    53  0012                     	;# 
    54  0013                     	;# 
    55  0014                     	;# 
    56  0015                     	;# 
    57  0016                     	;# 
    58  0016                     	;# 
    59  0017                     	;# 
    60  0018                     	;# 
    61  0019                     	;# 
    62  001A                     	;# 
    63  001B                     	;# 
    64  001C                     	;# 
    65  001E                     	;# 
    66  001F                     	;# 
    67  008C                     	;# 
    68  008D                     	;# 
    69  0091                     	;# 
    70  0092                     	;# 
    71  0093                     	;# 
    72  0094                     	;# 
    73  0095                     	;# 
    74  0096                     	;# 
    75  0097                     	;# 
    76  0098                     	;# 
    77  0099                     	;# 
    78  009A                     	;# 
    79  009B                     	;# 
    80  009B                     	;# 
    81  009C                     	;# 
    82  009D                     	;# 
    83  009E                     	;# 
    84  010C                     	;# 
    85  010D                     	;# 
    86  0111                     	;# 
    87  0112                     	;# 
    88  0113                     	;# 
    89  0114                     	;# 
    90  0115                     	;# 
    91  0116                     	;# 
    92  0117                     	;# 
    93  0118                     	;# 
    94  0119                     	;# 
    95  011A                     	;# 
    96  011B                     	;# 
    97  011D                     	;# 
    98  011E                     	;# 
    99  018C                     	;# 
   100  018D                     	;# 
   101  0191                     	;# 
   102  0191                     	;# 
   103  0192                     	;# 
   104  0193                     	;# 
   105  0193                     	;# 
   106  0193                     	;# 
   107  0194                     	;# 
   108  0195                     	;# 
   109  0196                     	;# 
   110  0199                     	;# 
   111  019A                     	;# 
   112  019B                     	;# 
   113  019B                     	;# 
   114  019B                     	;# 
   115  019B                     	;# 
   116  019C                     	;# 
   117  019C                     	;# 
   118  019D                     	;# 
   119  019E                     	;# 
   120  019F                     	;# 
   121  020C                     	;# 
   122  020D                     	;# 
   123  0211                     	;# 
   124  0211                     	;# 
   125  0212                     	;# 
   126  0212                     	;# 
   127  0213                     	;# 
   128  0213                     	;# 
   129  0214                     	;# 
   130  0214                     	;# 
   131  0215                     	;# 
   132  0215                     	;# 
   133  0215                     	;# 
   134  0216                     	;# 
   135  0216                     	;# 
   136  0217                     	;# 
   137  0217                     	;# 
   138  0219                     	;# 
   139  021A                     	;# 
   140  021B                     	;# 
   141  021C                     	;# 
   142  021D                     	;# 
   143  021E                     	;# 
   144  021F                     	;# 
   145  0291                     	;# 
   146  0291                     	;# 
   147  0292                     	;# 
   148  0293                     	;# 
   149  0294                     	;# 
   150  0295                     	;# 
   151  0295                     	;# 
   152  0296                     	;# 
   153  0298                     	;# 
   154  0298                     	;# 
   155  0299                     	;# 
   156  029A                     	;# 
   157  029B                     	;# 
   158  029C                     	;# 
   159  029C                     	;# 
   160  029D                     	;# 
   161  029E                     	;# 
   162  029E                     	;# 
   163  0311                     	;# 
   164  0311                     	;# 
   165  0312                     	;# 
   166  0313                     	;# 
   167  0318                     	;# 
   168  0318                     	;# 
   169  0319                     	;# 
   170  031A                     	;# 
   171  0394                     	;# 
   172  0395                     	;# 
   173  0396                     	;# 
   174  039A                     	;# 
   175  039C                     	;# 
   176  039D                     	;# 
   177  039E                     	;# 
   178  039F                     	;# 
   179  0415                     	;# 
   180  0416                     	;# 
   181  0417                     	;# 
   182  041C                     	;# 
   183  041D                     	;# 
   184  041E                     	;# 
   185  0FE4                     	;# 
   186  0FE5                     	;# 
   187  0FE6                     	;# 
   188  0FE7                     	;# 
   189  0FE8                     	;# 
   190  0FE9                     	;# 
   191  0FEA                     	;# 
   192  0FEB                     	;# 
   193  0FED                     	;# 
   194  0FEE                     	;# 
   195  0FEF                     	;# 
   196  0000                     	;# 
   197  0001                     	;# 
   198  0002                     	;# 
   199  0003                     	;# 
   200  0004                     	;# 
   201  0005                     	;# 
   202  0006                     	;# 
   203  0007                     	;# 
   204  0008                     	;# 
   205  0009                     	;# 
   206  000A                     	;# 
   207  000B                     	;# 
   208  000C                     	;# 
   209  000D                     	;# 
   210  0011                     	;# 
   211  0012                     	;# 
   212  0013                     	;# 
   213  0014                     	;# 
   214  0015                     	;# 
   215  0016                     	;# 
   216  0016                     	;# 
   217  0017                     	;# 
   218  0018                     	;# 
   219  0019                     	;# 
   220  001A                     	;# 
   221  001B                     	;# 
   222  001C                     	;# 
   223  001E                     	;# 
   224  001F                     	;# 
   225  008C                     	;# 
   226  008D                     	;# 
   227  0091                     	;# 
   228  0092                     	;# 
   229  0093                     	;# 
   230  0094                     	;# 
   231  0095                     	;# 
   232  0096                     	;# 
   233  0097                     	;# 
   234  0098                     	;# 
   235  0099                     	;# 
   236  009A                     	;# 
   237  009B                     	;# 
   238  009B                     	;# 
   239  009C                     	;# 
   240  009D                     	;# 
   241  009E                     	;# 
   242  010C                     	;# 
   243  010D                     	;# 
   244  0111                     	;# 
   245  0112                     	;# 
   246  0113                     	;# 
   247  0114                     	;# 
   248  0115                     	;# 
   249  0116                     	;# 
   250  0117                     	;# 
   251  0118                     	;# 
   252  0119                     	;# 
   253  011A                     	;# 
   254  011B                     	;# 
   255  011D                     	;# 
   256  011E                     	;# 
   257  018C                     	;# 
   258  018D                     	;# 
   259  0191                     	;# 
   260  0191                     	;# 
   261  0192                     	;# 
   262  0193                     	;# 
   263  0193                     	;# 
   264  0193                     	;# 
   265  0194                     	;# 
   266  0195                     	;# 
   267  0196                     	;# 
   268  0199                     	;# 
   269  019A                     	;# 
   270  019B                     	;# 
   271  019B                     	;# 
   272  019B                     	;# 
   273  019B                     	;# 
   274  019C                     	;# 
   275  019C                     	;# 
   276  019D                     	;# 
   277  019E                     	;# 
   278  019F                     	;# 
   279  020C                     	;# 
   280  020D                     	;# 
   281  0211                     	;# 
   282  0211                     	;# 
   283  0212                     	;# 
   284  0212                     	;# 
   285  0213                     	;# 
   286  0213                     	;# 
   287  0214                     	;# 
   288  0214                     	;# 
   289  0215                     	;# 
   290  0215                     	;# 
   291  0215                     	;# 
   292  0216                     	;# 
   293  0216                     	;# 
   294  0217                     	;# 
   295  0217                     	;# 
   296  0219                     	;# 
   297  021A                     	;# 
   298  021B                     	;# 
   299  021C                     	;# 
   300  021D                     	;# 
   301  021E                     	;# 
   302  021F                     	;# 
   303  0291                     	;# 
   304  0291                     	;# 
   305  0292                     	;# 
   306  0293                     	;# 
   307  0294                     	;# 
   308  0295                     	;# 
   309  0295                     	;# 
   310  0296                     	;# 
   311  0298                     	;# 
   312  0298                     	;# 
   313  0299                     	;# 
   314  029A                     	;# 
   315  029B                     	;# 
   316  029C                     	;# 
   317  029C                     	;# 
   318  029D                     	;# 
   319  029E                     	;# 
   320  029E                     	;# 
   321  0311                     	;# 
   322  0311                     	;# 
   323  0312                     	;# 
   324  0313                     	;# 
   325  0318                     	;# 
   326  0318                     	;# 
   327  0319                     	;# 
   328  031A                     	;# 
   329  0394                     	;# 
   330  0395                     	;# 
   331  0396                     	;# 
   332  039A                     	;# 
   333  039C                     	;# 
   334  039D                     	;# 
   335  039E                     	;# 
   336  039F                     	;# 
   337  0415                     	;# 
   338  0416                     	;# 
   339  0417                     	;# 
   340  041C                     	;# 
   341  041D                     	;# 
   342  041E                     	;# 
   343  0FE4                     	;# 
   344  0FE5                     	;# 
   345  0FE6                     	;# 
   346  0FE7                     	;# 
   347  0FE8                     	;# 
   348  0FE9                     	;# 
   349  0FEA                     	;# 
   350  0FEB                     	;# 
   351  0FED                     	;# 
   352  0FEE                     	;# 
   353  0FEF                     	;# 
   354  0000                     	;# 
   355  0001                     	;# 
   356  0002                     	;# 
   357  0003                     	;# 
   358  0004                     	;# 
   359  0005                     	;# 
   360  0006                     	;# 
   361  0007                     	;# 
   362  0008                     	;# 
   363  0009                     	;# 
   364  000A                     	;# 
   365  000B                     	;# 
   366  000C                     	;# 
   367  000D                     	;# 
   368  0011                     	;# 
   369  0012                     	;# 
   370  0013                     	;# 
   371  0014                     	;# 
   372  0015                     	;# 
   373  0016                     	;# 
   374  0016                     	;# 
   375  0017                     	;# 
   376  0018                     	;# 
   377  0019                     	;# 
   378  001A                     	;# 
   379  001B                     	;# 
   380  001C                     	;# 
   381  001E                     	;# 
   382  001F                     	;# 
   383  008C                     	;# 
   384  008D                     	;# 
   385  0091                     	;# 
   386  0092                     	;# 
   387  0093                     	;# 
   388  0094                     	;# 
   389  0095                     	;# 
   390  0096                     	;# 
   391  0097                     	;# 
   392  0098                     	;# 
   393  0099                     	;# 
   394  009A                     	;# 
   395  009B                     	;# 
   396  009B                     	;# 
   397  009C                     	;# 
   398  009D                     	;# 
   399  009E                     	;# 
   400  010C                     	;# 
   401  010D                     	;# 
   402  0111                     	;# 
   403  0112                     	;# 
   404  0113                     	;# 
   405  0114                     	;# 
   406  0115                     	;# 
   407  0116                     	;# 
   408  0117                     	;# 
   409  0118                     	;# 
   410  0119                     	;# 
   411  011A                     	;# 
   412  011B                     	;# 
   413  011D                     	;# 
   414  011E                     	;# 
   415  018C                     	;# 
   416  018D                     	;# 
   417  0191                     	;# 
   418  0191                     	;# 
   419  0192                     	;# 
   420  0193                     	;# 
   421  0193                     	;# 
   422  0193                     	;# 
   423  0194                     	;# 
   424  0195                     	;# 
   425  0196                     	;# 
   426  0199                     	;# 
   427  019A                     	;# 
   428  019B                     	;# 
   429  019B                     	;# 
   430  019B                     	;# 
   431  019B                     	;# 
   432  019C                     	;# 
   433  019C                     	;# 
   434  019D                     	;# 
   435  019E                     	;# 
   436  019F                     	;# 
   437  020C                     	;# 
   438  020D                     	;# 
   439  0211                     	;# 
   440  0211                     	;# 
   441  0212                     	;# 
   442  0212                     	;# 
   443  0213                     	;# 
   444  0213                     	;# 
   445  0214                     	;# 
   446  0214                     	;# 
   447  0215                     	;# 
   448  0215                     	;# 
   449  0215                     	;# 
   450  0216                     	;# 
   451  0216                     	;# 
   452  0217                     	;# 
   453  0217                     	;# 
   454  0219                     	;# 
   455  021A                     	;# 
   456  021B                     	;# 
   457  021C                     	;# 
   458  021D                     	;# 
   459  021E                     	;# 
   460  021F                     	;# 
   461  0291                     	;# 
   462  0291                     	;# 
   463  0292                     	;# 
   464  0293                     	;# 
   465  0294                     	;# 
   466  0295                     	;# 
   467  0295                     	;# 
   468  0296                     	;# 
   469  0298                     	;# 
   470  0298                     	;# 
   471  0299                     	;# 
   472  029A                     	;# 
   473  029B                     	;# 
   474  029C                     	;# 
   475  029C                     	;# 
   476  029D                     	;# 
   477  029E                     	;# 
   478  029E                     	;# 
   479  0311                     	;# 
   480  0311                     	;# 
   481  0312                     	;# 
   482  0313                     	;# 
   483  0318                     	;# 
   484  0318                     	;# 
   485  0319                     	;# 
   486  031A                     	;# 
   487  0394                     	;# 
   488  0395                     	;# 
   489  0396                     	;# 
   490  039A                     	;# 
   491  039C                     	;# 
   492  039D                     	;# 
   493  039E                     	;# 
   494  039F                     	;# 
   495  0415                     	;# 
   496  0416                     	;# 
   497  0417                     	;# 
   498  041C                     	;# 
   499  041D                     	;# 
   500  041E                     	;# 
   501  0FE4                     	;# 
   502  0FE5                     	;# 
   503  0FE6                     	;# 
   504  0FE7                     	;# 
   505  0FE8                     	;# 
   506  0FE9                     	;# 
   507  0FEA                     	;# 
   508  0FEB                     	;# 
   509  0FED                     	;# 
   510  0FEE                     	;# 
   511  0FEF                     	;# 
   512  0000                     	;# 
   513  0001                     	;# 
   514  0002                     	;# 
   515  0003                     	;# 
   516  0004                     	;# 
   517  0005                     	;# 
   518  0006                     	;# 
   519  0007                     	;# 
   520  0008                     	;# 
   521  0009                     	;# 
   522  000A                     	;# 
   523  000B                     	;# 
   524  000C                     	;# 
   525  000D                     	;# 
   526  0011                     	;# 
   527  0012                     	;# 
   528  0013                     	;# 
   529  0014                     	;# 
   530  0015                     	;# 
   531  0016                     	;# 
   532  0016                     	;# 
   533  0017                     	;# 
   534  0018                     	;# 
   535  0019                     	;# 
   536  001A                     	;# 
   537  001B                     	;# 
   538  001C                     	;# 
   539  001E                     	;# 
   540  001F                     	;# 
   541  008C                     	;# 
   542  008D                     	;# 
   543  0091                     	;# 
   544  0092                     	;# 
   545  0093                     	;# 
   546  0094                     	;# 
   547  0095                     	;# 
   548  0096                     	;# 
   549  0097                     	;# 
   550  0098                     	;# 
   551  0099                     	;# 
   552  009A                     	;# 
   553  009B                     	;# 
   554  009B                     	;# 
   555  009C                     	;# 
   556  009D                     	;# 
   557  009E                     	;# 
   558  010C                     	;# 
   559  010D                     	;# 
   560  0111                     	;# 
   561  0112                     	;# 
   562  0113                     	;# 
   563  0114                     	;# 
   564  0115                     	;# 
   565  0116                     	;# 
   566  0117                     	;# 
   567  0118                     	;# 
   568  0119                     	;# 
   569  011A                     	;# 
   570  011B                     	;# 
   571  011D                     	;# 
   572  011E                     	;# 
   573  018C                     	;# 
   574  018D                     	;# 
   575  0191                     	;# 
   576  0191                     	;# 
   577  0192                     	;# 
   578  0193                     	;# 
   579  0193                     	;# 
   580  0193                     	;# 
   581  0194                     	;# 
   582  0195                     	;# 
   583  0196                     	;# 
   584  0199                     	;# 
   585  019A                     	;# 
   586  019B                     	;# 
   587  019B                     	;# 
   588  019B                     	;# 
   589  019B                     	;# 
   590  019C                     	;# 
   591  019C                     	;# 
   592  019D                     	;# 
   593  019E                     	;# 
   594  019F                     	;# 
   595  020C                     	;# 
   596  020D                     	;# 
   597  0211                     	;# 
   598  0211                     	;# 
   599  0212                     	;# 
   600  0212                     	;# 
   601  0213                     	;# 
   602  0213                     	;# 
   603  0214                     	;# 
   604  0214                     	;# 
   605  0215                     	;# 
   606  0215                     	;# 
   607  0215                     	;# 
   608  0216                     	;# 
   609  0216                     	;# 
   610  0217                     	;# 
   611  0217                     	;# 
   612  0219                     	;# 
   613  021A                     	;# 
   614  021B                     	;# 
   615  021C                     	;# 
   616  021D                     	;# 
   617  021E                     	;# 
   618  021F                     	;# 
   619  0291                     	;# 
   620  0291                     	;# 
   621  0292                     	;# 
   622  0293                     	;# 
   623  0294                     	;# 
   624  0295                     	;# 
   625  0295                     	;# 
   626  0296                     	;# 
   627  0298                     	;# 
   628  0298                     	;# 
   629  0299                     	;# 
   630  029A                     	;# 
   631  029B                     	;# 
   632  029C                     	;# 
   633  029C                     	;# 
   634  029D                     	;# 
   635  029E                     	;# 
   636  029E                     	;# 
   637  0311                     	;# 
   638  0311                     	;# 
   639  0312                     	;# 
   640  0313                     	;# 
   641  0318                     	;# 
   642  0318                     	;# 
   643  0319                     	;# 
   644  031A                     	;# 
   645  0394                     	;# 
   646  0395                     	;# 
   647  0396                     	;# 
   648  039A                     	;# 
   649  039C                     	;# 
   650  039D                     	;# 
   651  039E                     	;# 
   652  039F                     	;# 
   653  0415                     	;# 
   654  0416                     	;# 
   655  0417                     	;# 
   656  041C                     	;# 
   657  041D                     	;# 
   658  041E                     	;# 
   659  0FE4                     	;# 
   660  0FE5                     	;# 
   661  0FE6                     	;# 
   662  0FE7                     	;# 
   663  0FE8                     	;# 
   664  0FE9                     	;# 
   665  0FEA                     	;# 
   666  0FEB                     	;# 
   667  0FED                     	;# 
   668  0FEE                     	;# 
   669  0FEF                     	;# 
   670  000C                     _PORTA	set	12
   671  000D                     _PORTB	set	13
   672  001B                     _PR2	set	27
   673  001C                     _T2CON	set	28
   674  001A                     _TMR2	set	26
   675  0093                     _BCL1IF	set	147
   676  005F                     _GIE	set	95
   677  005E                     _PEIE	set	94
   678  006B                     _RB3	set	107
   679  008B                     _SSP1IF	set	139
   680  0089                     _TMR2IF	set	137
   681  00E2                     _TMR2ON	set	226
   682  0099                     _TMR4IF	set	153
   683  009D                     _ADCON0	set	157
   684  009E                     _ADCON1	set	158
   685  009C                     _ADRESH	set	156
   686  009B                     _ADRESL	set	155
   687  0099                     _OSCCON	set	153
   688  008C                     _TRISA	set	140
   689  008D                     _TRISB	set	141
   690  0493                     _BCL1IE	set	1171
   691  04E9                     _GO_nDONE	set	1257
   692  048B                     _SSP1IE	set	1163
   693  0489                     _TMR2IE	set	1161
   694  0499                     _TMR4IE	set	1177
   695  018C                     _ANSELA	set	396
   696  018D                     _ANSELB	set	397
   697  0212                     _SSP1ADD	set	530
   698  0211                     _SSP1BUF	set	529
   699  0215                     _SSP1CON1	set	533
   700  0216                     _SSP1CON2	set	534
   701  0216                     _SSP1CON2bits	set	534
   702  0214                     _SSP1STAT	set	532
   703  0214                     _SSP1STATbits	set	532
   704  029E                     _CCPTMRS	set	670
   705  0313                     _CCP3CON	set	787
   706  0313                     _CCP3CONbits	set	787
   707  0312                     _CCPR3H	set	786
   708  0311                     _CCPR3L	set	785
   709  0416                     _PR4	set	1046
   710  0417                     _T4CON	set	1047
   711  0415                     _TMR4	set	1045
   712  20BA                     _TMR4ON	set	8378
   713                           
   714                           	psect	text0
   715  0000                     __ptext0:	
   716                           ; #config settings
   717                           
   718                           
   719                           ;psect for function ___ftpack
   720  0000                     
   721                           	psect	cinit
   722  0012                     start_initialization:	
   723  0012                     __initialization:	
   724                           
   725                           ; Clear objects allocated to BANK0
   726  0012  01DE               	clrf	__pbssBANK0& (0+127)
   727  0013  01DF               	clrf	(__pbssBANK0+1)& (0+127)
   728  0014  01E0               	clrf	(__pbssBANK0+2)& (0+127)
   729  0015  01E1               	clrf	(__pbssBANK0+3)& (0+127)
   730  0016  01E2               	clrf	(__pbssBANK0+4)& (0+127)
   731  0017  01E3               	clrf	(__pbssBANK0+5)& (0+127)
   732  0018  01E4               	clrf	(__pbssBANK0+6)& (0+127)
   733  0019  01E5               	clrf	(__pbssBANK0+7)& (0+127)
   734  001A  01E6               	clrf	(__pbssBANK0+8)& (0+127)
   735  001B                     end_of_initialization:	
   736                           ;End of C runtime variable initialization code
   737                           
   738  001B                     __end_of__initialization:	
   739  001B  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   740  001C  0020               	movlb	0
   741  001D  3185  2D1A         	ljmp	_main	;jump to C main() function
   742                           
   743                           	psect	bssBANK0
   744  005E                     __pbssBANK0:	
   745  005E                     D_calc@previous:	
   746  005E                     	ds	2
   747  0060                     I_calc@sum:	
   748  0060                     	ds	2
   749  0062                     _controller_current_limit:	
   750  0062                     	ds	2
   751  0064                     interrupt_I2C@counter:	
   752  0064                     	ds	2
   753  0066                     I2C_slave_interrupt@data_ptr:	
   754  0066                     	ds	1
   755                           
   756                           	psect	cstackBANK1
   757  00A0                     __pcstackBANK1:	
   758  00A0                     ??_loop:	
   759  00A0                     ??_init_I2C_master:	
   760                           ; 0 bytes @ 0x0
   761                           
   762  00A0                     ?_init_adcon:	
   763                           ; 0 bytes @ 0x0
   764                           
   765  00A0                     ??_init_PWM:	
   766                           ; 0 bytes @ 0x0
   767                           
   768  00A0                     ??_init_Timer4:	
   769                           ; 0 bytes @ 0x0
   770                           
   771  00A0                     init_adcon@anselA:	
   772                           ; 0 bytes @ 0x0
   773                           
   774                           
   775                           ; 2 bytes @ 0x0
   776  00A0                     	ds	2
   777  00A2                     init_adcon@anselB:	
   778                           
   779                           ; 2 bytes @ 0x2
   780  00A2                     	ds	2
   781  00A4                     ??_init:	
   782  00A4                     ??_init_adcon:	
   783                           ; 0 bytes @ 0x4
   784                           
   785                           
   786                           ; 0 bytes @ 0x4
   787  00A4                     	ds	1
   788  00A5                     init@i:	
   789                           
   790                           ; 1 bytes @ 0x5
   791  00A5                     	ds	1
   792  00A6                     ?_main:	
   793  00A6                     main@argc:	
   794                           ; 2 bytes @ 0x6
   795                           
   796                           
   797                           ; 2 bytes @ 0x6
   798  00A6                     	ds	2
   799  00A8                     main@argv:	
   800                           
   801                           ; 2 bytes @ 0x8
   802  00A8                     	ds	2
   803  00AA                     ??_main:	
   804                           
   805                           	psect	cstackCOMMON
   806  0070                     __pcstackCOMMON:	
   807                           ; 0 bytes @ 0xA
   808                           
   809  0070                     ?_init:	
   810  0070                     ?_loop:	
   811                           ; 0 bytes @ 0x0
   812                           
   813  0070                     ?_init_I2C_master:	
   814                           ; 0 bytes @ 0x0
   815                           
   816  0070                     ?_init_PWM:	
   817                           ; 0 bytes @ 0x0
   818                           
   819  0070                     ?_interrupt_controller:	
   820                           ; 0 bytes @ 0x0
   821                           
   822  0070                     ?_set_current_limit:	
   823                           ; 0 bytes @ 0x0
   824                           
   825  0070                     ?_call_send:	
   826                           ; 0 bytes @ 0x0
   827                           
   828  0070                     ?_init_Timer4:	
   829                           ; 0 bytes @ 0x0
   830                           
   831  0070                     ?_inter:	
   832                           ; 0 bytes @ 0x0
   833                           
   834  0070                     ?_output:	
   835                           ; 0 bytes @ 0x0
   836                           
   837  0070                     ?_I2C_idle_check:	
   838                           ; 0 bytes @ 0x0
   839                           
   840  0070                     ??_I2C_idle_check:	
   841                           ; 0 bytes @ 0x0
   842                           
   843  0070                     ?_adconv:	
   844                           ; 0 bytes @ 0x0
   845                           
   846  0070                     ?_get_current_limit:	
   847                           ; 2 bytes @ 0x0
   848                           
   849  0070                     ?_I2C_ack_check:	
   850                           ; 2 bytes @ 0x0
   851                           
   852  0070                     ?___ftpack:	
   853                           ; 2 bytes @ 0x0
   854                           
   855  0070                     ?___lmul:	
   856                           ; 3 bytes @ 0x0
   857                           
   858  0070                     output@out:	
   859                           ; 4 bytes @ 0x0
   860                           
   861  0070                     set_current_limit@current_limit:	
   862                           ; 2 bytes @ 0x0
   863                           
   864  0070                     adconv@pin_select:	
   865                           ; 2 bytes @ 0x0
   866                           
   867  0070                     ___ftpack@arg:	
   868                           ; 2 bytes @ 0x0
   869                           
   870  0070                     ___lmul@multiplier:	
   871                           ; 3 bytes @ 0x0
   872                           
   873                           
   874                           ; 4 bytes @ 0x0
   875  0070                     	ds	2
   876  0072                     ??_adconv:	
   877  0072                     ??_set_current_limit:	
   878                           ; 0 bytes @ 0x2
   879                           
   880  0072                     ??_output:	
   881                           ; 0 bytes @ 0x2
   882                           
   883  0072                     ??_get_current_limit:	
   884                           ; 0 bytes @ 0x2
   885                           
   886  0072                     ??_I2C_ack_check:	
   887                           ; 0 bytes @ 0x2
   888                           
   889  0072                     I2C_ack_check@i:	
   890                           ; 0 bytes @ 0x2
   891                           
   892                           
   893                           ; 2 bytes @ 0x2
   894  0072                     	ds	1
   895  0073                     ___ftpack@exp:	
   896                           
   897                           ; 1 bytes @ 0x3
   898  0073                     	ds	1
   899  0074                     ?_I2C_send_data:	
   900  0074                     I2C_send_data@data:	
   901                           ; 0 bytes @ 0x4
   902                           
   903  0074                     ___ftpack@sign:	
   904                           ; 1 bytes @ 0x4
   905                           
   906  0074                     ___lmul@multiplicand:	
   907                           ; 1 bytes @ 0x4
   908                           
   909                           
   910                           ; 4 bytes @ 0x4
   911  0074                     	ds	1
   912  0075                     ??___ftpack:	
   913  0075                     I2C_send_data@length:	
   914                           ; 0 bytes @ 0x5
   915                           
   916                           
   917                           ; 2 bytes @ 0x5
   918  0075                     	ds	2
   919  0077                     ??_I2C_send_data:	
   920                           
   921                           ; 0 bytes @ 0x7
   922  0077                     	ds	1
   923  0078                     ??___lmul:	
   924  0078                     ?___awtoft:	
   925                           ; 0 bytes @ 0x8
   926                           
   927  0078                     I2C_send_data@addr:	
   928                           ; 3 bytes @ 0x8
   929                           
   930  0078                     ___awtoft@c:	
   931                           ; 1 bytes @ 0x8
   932                           
   933  0078                     ___lmul@product:	
   934                           ; 2 bytes @ 0x8
   935                           
   936                           
   937                           ; 4 bytes @ 0x8
   938  0078                     	ds	1
   939  0079                     adconv@temp:	
   940  0079                     I2C_send_data@i:	
   941                           ; 2 bytes @ 0x9
   942                           
   943                           
   944                           ; 2 bytes @ 0x9
   945  0079                     	ds	2
   946  007B                     ??_call_send:	
   947  007B                     ?_measure:	
   948                           ; 0 bytes @ 0xB
   949                           
   950  007B                     ??___awtoft:	
   951                           ; 0 bytes @ 0xB
   952                           
   953  007B                     measure@pin_select:	
   954                           ; 0 bytes @ 0xB
   955                           
   956                           
   957                           ; 2 bytes @ 0xB
   958  007B                     	ds	1
   959  007C                     ?_current_conversion:	
   960  007C                     current_conversion@measured_value:	
   961                           ; 2 bytes @ 0xC
   962                           
   963                           
   964                           ; 2 bytes @ 0xC
   965  007C                     	ds	1
   966  007D                     ??_measure:	
   967  007D                     measure@value:	
   968                           ; 0 bytes @ 0xD
   969                           
   970  007D                     ___awtoft@sign:	
   971                           ; 1 bytes @ 0xD
   972                           
   973                           
   974                           ; 1 bytes @ 0xD
   975  007D                     	ds	1
   976  007E                     ??_P_calc:	
   977                           
   978                           	psect	cstackBANK0
   979  0020                     __pcstackBANK0:	
   980                           ; 0 bytes @ 0xE
   981                           
   982  0020                     ??_current_conversion:	
   983  0020                     ?___ftmul:	
   984                           ; 0 bytes @ 0x0
   985                           
   986  0020                     call_send@data:	
   987                           ; 3 bytes @ 0x0
   988                           
   989  0020                     ___ftmul@f1:	
   990                           ; 2 bytes @ 0x0
   991                           
   992                           
   993                           ; 3 bytes @ 0x0
   994  0020                     	ds	2
   995  0022                     call_send@send_data:	
   996                           
   997                           ; 1 bytes @ 0x2
   998  0022                     	ds	1
   999  0023                     ___ftmul@f2:	
  1000                           
  1001                           ; 3 bytes @ 0x3
  1002  0023                     	ds	2
  1003  0025                     current_conversion@current:	
  1004                           
  1005                           ; 2 bytes @ 0x5
  1006  0025                     	ds	1
  1007  0026                     ??___ftmul:	
  1008                           
  1009                           ; 0 bytes @ 0x6
  1010  0026                     	ds	4
  1011  002A                     ___ftmul@exp:	
  1012                           
  1013                           ; 1 bytes @ 0xA
  1014  002A                     	ds	1
  1015  002B                     ___ftmul@f3_as_product:	
  1016                           
  1017                           ; 3 bytes @ 0xB
  1018  002B                     	ds	3
  1019  002E                     ___ftmul@cntr:	
  1020                           
  1021                           ; 1 bytes @ 0xE
  1022  002E                     	ds	1
  1023  002F                     ___ftmul@sign:	
  1024                           
  1025                           ; 1 bytes @ 0xF
  1026  002F                     	ds	1
  1027  0030                     ?___fttol:	
  1028  0030                     ___fttol@f1:	
  1029                           ; 4 bytes @ 0x10
  1030                           
  1031                           
  1032                           ; 3 bytes @ 0x10
  1033  0030                     	ds	4
  1034  0034                     ??___fttol:	
  1035                           
  1036                           ; 0 bytes @ 0x14
  1037  0034                     	ds	4
  1038  0038                     ___fttol@sign1:	
  1039                           
  1040                           ; 1 bytes @ 0x18
  1041  0038                     	ds	1
  1042  0039                     ___fttol@lval:	
  1043                           
  1044                           ; 4 bytes @ 0x19
  1045  0039                     	ds	4
  1046  003D                     ___fttol@exp1:	
  1047                           
  1048                           ; 1 bytes @ 0x1D
  1049  003D                     	ds	1
  1050  003E                     ?_P_calc:	
  1051  003E                     ?_I_calc:	
  1052                           ; 2 bytes @ 0x1E
  1053                           
  1054  003E                     P_calc@res:	
  1055                           ; 2 bytes @ 0x1E
  1056                           
  1057  003E                     I_calc@res:	
  1058                           ; 2 bytes @ 0x1E
  1059                           
  1060                           
  1061                           ; 2 bytes @ 0x1E
  1062  003E                     	ds	2
  1063  0040                     ??_I_calc:	
  1064  0040                     P_calc@temp:	
  1065                           ; 0 bytes @ 0x20
  1066                           
  1067                           
  1068                           ; 2 bytes @ 0x20
  1069  0040                     	ds	1
  1070  0041                     I_calc@temp:	
  1071                           
  1072                           ; 2 bytes @ 0x21
  1073  0041                     	ds	2
  1074  0043                     _I_calc$143:	
  1075                           
  1076                           ; 2 bytes @ 0x23
  1077  0043                     	ds	2
  1078  0045                     _I_calc$144:	
  1079                           
  1080                           ; 2 bytes @ 0x25
  1081  0045                     	ds	2
  1082  0047                     ?_calc:	
  1083  0047                     calc@ref:	
  1084                           ; 0 bytes @ 0x27
  1085                           
  1086                           
  1087                           ; 2 bytes @ 0x27
  1088  0047                     	ds	2
  1089  0049                     calc@mes:	
  1090                           
  1091                           ; 2 bytes @ 0x29
  1092  0049                     	ds	2
  1093  004B                     calc@output:	
  1094                           
  1095                           ; 1 bytes @ 0x2B
  1096  004B                     	ds	1
  1097  004C                     ??_calc:	
  1098                           
  1099                           ; 0 bytes @ 0x2C
  1100  004C                     	ds	2
  1101  004E                     _calc$133:	
  1102                           
  1103                           ; 2 bytes @ 0x2E
  1104  004E                     	ds	2
  1105  0050                     _calc$134:	
  1106                           
  1107                           ; 2 bytes @ 0x30
  1108  0050                     	ds	2
  1109  0052                     _calc$135:	
  1110                           
  1111                           ; 2 bytes @ 0x32
  1112  0052                     	ds	2
  1113  0054                     calc@res:	
  1114                           
  1115                           ; 2 bytes @ 0x34
  1116  0054                     	ds	2
  1117  0056                     ??_interrupt_controller:	
  1118                           
  1119                           ; 0 bytes @ 0x36
  1120  0056                     	ds	1
  1121  0057                     interrupt_controller@volume:	
  1122                           
  1123                           ; 2 bytes @ 0x37
  1124  0057                     	ds	2
  1125  0059                     interrupt_controller@current:	
  1126                           
  1127                           ; 2 bytes @ 0x39
  1128  0059                     	ds	2
  1129  005B                     interrupt_controller@out:	
  1130                           
  1131                           ; 2 bytes @ 0x3B
  1132  005B                     	ds	2
  1133  005D                     ??_inter:	
  1134                           
  1135                           ; 0 bytes @ 0x3D
  1136  005D                     	ds	1
  1137                           
  1138                           	psect	maintext
  1139  051A                     __pmaintext:	
  1140 ;;
  1141 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1142 ;;
  1143 ;; *************** function _main *****************
  1144 ;; Defined at:
  1145 ;;		line 24 in file "main.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;  argc            2    6[BANK1 ] int 
  1148 ;;  argv            2    8[BANK1 ] PTR PTR unsigned char 
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;		None
  1151 ;; Return value:  Size  Location     Type
  1152 ;;                  2    6[BANK1 ] int 
  1153 ;; Registers used:
  1154 ;;		wreg, status,2, status,0, pclath, cstack
  1155 ;; Tracked objects:
  1156 ;;		On entry : 17F/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1160 ;;      Params:         0       0       4       0       0       0
  1161 ;;      Locals:         0       0       0       0       0       0
  1162 ;;      Temps:          0       0       0       0       0       0
  1163 ;;      Totals:         0       0       4       0       0       0
  1164 ;;Total ram usage:        4 bytes
  1165 ;; Hardware stack levels required when called:    9
  1166 ;; This function calls:
  1167 ;;		_init
  1168 ;;		_loop
  1169 ;; This function is called by:
  1170 ;;		Startup code after reset
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174                           
  1175                           ;psect for function _main
  1176  051A                     _main:	
  1177                           
  1178                           ;main.c: 25: init();
  1179                           
  1180                           ;incstack = 0
  1181                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1182  051A  3183  23DF  3185   	fcall	_init
  1183  051D                     l1489:	
  1184                           ;main.c: 27: while(1) {
  1185                           
  1186                           
  1187                           ;main.c: 28: loop();
  1188  051D  3185  2521  3185   	fcall	_loop
  1189  0520  2D1D               	goto	l1489
  1190  0521                     __end_of_main:	
  1191                           ;main.c: 29: }
  1192                           ;main.c: 31: return (0);
  1193                           ;	Return value of _main is never used
  1194                           
  1195                           
  1196                           	psect	text1
  1197  0521                     __ptext1:	
  1198 ;; *************** function _loop *****************
  1199 ;; Defined at:
  1200 ;;		line 49 in file "main.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;		None
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;		None
  1205 ;; Return value:  Size  Location     Type
  1206 ;;		None               void
  1207 ;; Registers used:
  1208 ;;		None
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1214 ;;      Params:         0       0       0       0       0       0
  1215 ;;      Locals:         0       0       0       0       0       0
  1216 ;;      Temps:          0       0       0       0       0       0
  1217 ;;      Totals:         0       0       0       0       0       0
  1218 ;;Total ram usage:        0 bytes
  1219 ;; Hardware stack levels used:    1
  1220 ;; Hardware stack levels required when called:    6
  1221 ;; This function calls:
  1222 ;;		Nothing
  1223 ;; This function is called by:
  1224 ;;		_main
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227                           
  1228                           
  1229                           ;psect for function _loop
  1230  0521                     _loop:	
  1231                           
  1232                           ;incstack = 0
  1233                           ; Regs used in _loop: []
  1234  0521  0008               	return
  1235  0522                     __end_of_loop:	
  1236                           
  1237                           	psect	text2
  1238  03DF                     __ptext2:	
  1239 ;; *************** function _init *****************
  1240 ;; Defined at:
  1241 ;;		line 34 in file "main.c"
  1242 ;; Parameters:    Size  Location     Type
  1243 ;;		None
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;  i               1    5[BANK1 ] unsigned char 
  1246 ;; Return value:  Size  Location     Type
  1247 ;;		None               void
  1248 ;; Registers used:
  1249 ;;		wreg, status,2, status,0, pclath, cstack
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1255 ;;      Params:         0       0       0       0       0       0
  1256 ;;      Locals:         0       0       1       0       0       0
  1257 ;;      Temps:          0       0       1       0       0       0
  1258 ;;      Totals:         0       0       2       0       0       0
  1259 ;;Total ram usage:        2 bytes
  1260 ;; Hardware stack levels used:    1
  1261 ;; Hardware stack levels required when called:    8
  1262 ;; This function calls:
  1263 ;;		_init_I2C_master
  1264 ;;		_init_PWM
  1265 ;;		_init_adcon
  1266 ;; This function is called by:
  1267 ;;		_main
  1268 ;; This function uses a non-reentrant model
  1269 ;;
  1270                           
  1271                           
  1272                           ;psect for function _init
  1273  03DF                     _init:	
  1274                           
  1275                           ;main.c: 35: OSCCON = 0b01111010;
  1276                           
  1277                           ;incstack = 0
  1278                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  1279  03DF  307A               	movlw	122
  1280  03E0  0021               	movlb	1	; select bank1
  1281  03E1  0099               	movwf	25	;volatile
  1282                           
  1283                           ;main.c: 36: TRISA = 0x03;
  1284  03E2  3003               	movlw	3
  1285  03E3  008C               	movwf	12	;volatile
  1286                           
  1287                           ;main.c: 37: TRISB = 0x00;
  1288  03E4  018D               	clrf	13	;volatile
  1289                           
  1290                           ;main.c: 38: PORTA = 0x00;
  1291  03E5  0020               	movlb	0	; select bank0
  1292  03E6  018C               	clrf	12	;volatile
  1293                           
  1294                           ;main.c: 39: PORTB = 0x00;
  1295  03E7  018D               	clrf	13	;volatile
  1296                           
  1297                           ;main.c: 40: for(unsigned char i = 0; i < 100; i++){}
  1298  03E8  0021               	movlb	1	; select bank1
  1299  03E9  01A5               	clrf	init@i^(0+128)
  1300  03EA  3064               	movlw	100
  1301  03EB  0225               	subwf	init@i^(0+128),w
  1302  03EC  1803               	btfsc	3,0
  1303  03ED  2BF6               	goto	l38
  1304  03EE                     l1465:	
  1305  03EE  3001               	movlw	1
  1306  03EF  00A4               	movwf	??_init^(0+128)
  1307  03F0  0824               	movf	??_init^(0+128),w
  1308  03F1  07A5               	addwf	init@i^(0+128),f
  1309  03F2  3064               	movlw	100
  1310  03F3  0225               	subwf	init@i^(0+128),w
  1311  03F4  1C03               	skipc
  1312  03F5  2BEE               	goto	l1465
  1313  03F6                     l38:	
  1314                           
  1315                           ;main.c: 41: GIE = 1;
  1316  03F6  178B               	bsf	11,7	;volatile
  1317                           
  1318                           ;main.c: 42: PEIE = 1;
  1319  03F7  170B               	bsf	11,6	;volatile
  1320                           
  1321                           ;main.c: 43: init_I2C_master();
  1322  03F8  3184  24D7  3183   	fcall	_init_I2C_master
  1323                           
  1324                           ;main.c: 44: init_adcon(0x03,0x00);
  1325  03FB  3003               	movlw	3
  1326  03FC  0021               	movlb	1	; select bank1
  1327  03FD  00A0               	movwf	init_adcon@anselA^(0+128)
  1328  03FE  3000               	movlw	0
  1329  03FF  00A1               	movwf	(init_adcon@anselA^(0+128)+1)
  1330  0400  3000               	movlw	0
  1331  0401  00A2               	movwf	init_adcon@anselB^(0+128)
  1332  0402  3000               	movlw	0
  1333  0403  00A3               	movwf	(init_adcon@anselB^(0+128)+1)
  1334  0404  3184  24E7  3183   	fcall	_init_adcon
  1335                           
  1336                           ;main.c: 45: init_PWM();
  1337  0407  3184  24B3         	fcall	_init_PWM
  1338                           
  1339                           ;main.c: 46: RB3 = 1;
  1340  0409  0020               	movlb	0	; select bank0
  1341  040A  158D               	bsf	13,3	;volatile
  1342  040B  0008               	return
  1343  040C                     __end_of_init:	
  1344                           
  1345                           	psect	text3
  1346  04E7                     __ptext3:	
  1347 ;; *************** function _init_adcon *****************
  1348 ;; Defined at:
  1349 ;;		line 25 in file "adcon.c"
  1350 ;; Parameters:    Size  Location     Type
  1351 ;;  anselA          2    0[BANK1 ] int 
  1352 ;;  anselB          2    2[BANK1 ] int 
  1353 ;; Auto vars:     Size  Location     Type
  1354 ;;		None
  1355 ;; Return value:  Size  Location     Type
  1356 ;;		None               void
  1357 ;; Registers used:
  1358 ;;		wreg
  1359 ;; Tracked objects:
  1360 ;;		On entry : 0/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1364 ;;      Params:         0       0       4       0       0       0
  1365 ;;      Locals:         0       0       0       0       0       0
  1366 ;;      Temps:          0       0       0       0       0       0
  1367 ;;      Totals:         0       0       4       0       0       0
  1368 ;;Total ram usage:        4 bytes
  1369 ;; Hardware stack levels used:    1
  1370 ;; Hardware stack levels required when called:    6
  1371 ;; This function calls:
  1372 ;;		Nothing
  1373 ;; This function is called by:
  1374 ;;		_init
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           
  1378                           
  1379                           ;psect for function _init_adcon
  1380  04E7                     _init_adcon:	
  1381                           
  1382                           ;adcon.c: 26: ANSELA = anselA;
  1383                           
  1384                           ;incstack = 0
  1385                           ; Regs used in _init_adcon: [wreg]
  1386  04E7  0021               	movlb	1	; select bank1
  1387  04E8  0820               	movf	init_adcon@anselA^(0+128),w
  1388  04E9  0023               	movlb	3	; select bank3
  1389  04EA  008C               	movwf	12	;volatile
  1390                           
  1391                           ;adcon.c: 27: ANSELB = anselB;
  1392  04EB  0021               	movlb	1	; select bank1
  1393  04EC  0822               	movf	init_adcon@anselB^(0+128),w
  1394  04ED  0023               	movlb	3	; select bank3
  1395  04EE  008D               	movwf	13	;volatile
  1396                           
  1397                           ;adcon.c: 28: ADCON1 = 0b10010000;
  1398  04EF  3090               	movlw	144
  1399  04F0  0021               	movlb	1	; select bank1
  1400  04F1  009E               	movwf	30	;volatile
  1401                           
  1402                           ;adcon.c: 29: ADCON0 = 0b00000001;
  1403  04F2  3001               	movlw	1
  1404  04F3  009D               	movwf	29	;volatile
  1405  04F4  0008               	return
  1406  04F5                     __end_of_init_adcon:	
  1407                           
  1408                           	psect	text4
  1409  04B3                     __ptext4:	
  1410 ;; *************** function _init_PWM *****************
  1411 ;; Defined at:
  1412 ;;		line 82 in file "controller.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;		None
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;		None
  1417 ;; Return value:  Size  Location     Type
  1418 ;;		None               void
  1419 ;; Registers used:
  1420 ;;		wreg, status,2
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1426 ;;      Params:         0       0       0       0       0       0
  1427 ;;      Locals:         0       0       0       0       0       0
  1428 ;;      Temps:          0       0       0       0       0       0
  1429 ;;      Totals:         0       0       0       0       0       0
  1430 ;;Total ram usage:        0 bytes
  1431 ;; Hardware stack levels used:    1
  1432 ;; Hardware stack levels required when called:    6
  1433 ;; This function calls:
  1434 ;;		Nothing
  1435 ;; This function is called by:
  1436 ;;		_init
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           
  1441                           ;psect for function _init_PWM
  1442  04B3                     _init_PWM:	
  1443                           
  1444                           ;controller.c: 83: CCPTMRS = 0b00000000;
  1445                           
  1446                           ;incstack = 0
  1447                           ; Regs used in _init_PWM: [wreg+status,2]
  1448  04B3  0025               	movlb	5	; select bank5
  1449  04B4  019E               	clrf	30	;volatile
  1450                           
  1451                           ;controller.c: 84: CCP3CON = 0b00001100;
  1452  04B5  300C               	movlw	12
  1453  04B6  0026               	movlb	6	; select bank6
  1454  04B7  0093               	movwf	19	;volatile
  1455                           
  1456                           ;controller.c: 85: T2CON = 0b00000000;
  1457  04B8  0020               	movlb	0	; select bank0
  1458  04B9  019C               	clrf	28	;volatile
  1459                           
  1460                           ;controller.c: 86: TMR2IE = 1;
  1461  04BA  0021               	movlb	1	; select bank1
  1462  04BB  1491               	bsf	17,1	;volatile
  1463                           
  1464                           ;controller.c: 87: PR2 = 255;
  1465  04BC  30FF               	movlw	255
  1466  04BD  0020               	movlb	0	; select bank0
  1467  04BE  009B               	movwf	27	;volatile
  1468                           
  1469                           ;controller.c: 88: CCPR3L = 0;
  1470  04BF  0026               	movlb	6	; select bank6
  1471  04C0  0191               	clrf	17	;volatile
  1472                           
  1473                           ;controller.c: 89: CCPR3H = 0;
  1474  04C1  0192               	clrf	18	;volatile
  1475                           
  1476                           ;controller.c: 90: TMR2 = 0;
  1477  04C2  0020               	movlb	0	; select bank0
  1478  04C3  019A               	clrf	26	;volatile
  1479                           
  1480                           ;controller.c: 91: TMR2ON = 1;
  1481  04C4  151C               	bsf	28,2	;volatile
  1482  04C5  0008               	return
  1483  04C6                     __end_of_init_PWM:	
  1484                           
  1485                           	psect	text5
  1486  04D7                     __ptext5:	
  1487 ;; *************** function _init_I2C_master *****************
  1488 ;; Defined at:
  1489 ;;		line 24 in file "I2C.c"
  1490 ;; Parameters:    Size  Location     Type
  1491 ;;		None
  1492 ;; Auto vars:     Size  Location     Type
  1493 ;;		None
  1494 ;; Return value:  Size  Location     Type
  1495 ;;		None               void
  1496 ;; Registers used:
  1497 ;;		wreg, status,2, status,0, pclath, cstack
  1498 ;; Tracked objects:
  1499 ;;		On entry : 0/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1503 ;;      Params:         0       0       0       0       0       0
  1504 ;;      Locals:         0       0       0       0       0       0
  1505 ;;      Temps:          0       0       0       0       0       0
  1506 ;;      Totals:         0       0       0       0       0       0
  1507 ;;Total ram usage:        0 bytes
  1508 ;; Hardware stack levels used:    1
  1509 ;; Hardware stack levels required when called:    7
  1510 ;; This function calls:
  1511 ;;		_init_Timer4
  1512 ;; This function is called by:
  1513 ;;		_init
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517                           
  1518                           ;psect for function _init_I2C_master
  1519  04D7                     _init_I2C_master:	
  1520                           
  1521                           ;I2C.c: 25: SSP1STAT = 0b10000000;
  1522                           
  1523                           ;incstack = 0
  1524                           ; Regs used in _init_I2C_master: [wreg+status,2+status,0+pclath+cstack]
  1525  04D7  3080               	movlw	128
  1526  04D8  0024               	movlb	4	; select bank4
  1527  04D9  0094               	movwf	20	;volatile
  1528                           
  1529                           ;I2C.c: 26: SSP1CON1 = 0b00101000;
  1530  04DA  3028               	movlw	40
  1531  04DB  0095               	movwf	21	;volatile
  1532                           
  1533                           ;I2C.c: 27: SSP1ADD = 0x27;
  1534  04DC  3027               	movlw	39
  1535  04DD  0092               	movwf	18	;volatile
  1536                           
  1537                           ;I2C.c: 28: SSP1IE = 1;
  1538  04DE  0021               	movlb	1	; select bank1
  1539  04DF  1591               	bsf	17,3	;volatile
  1540                           
  1541                           ;I2C.c: 29: BCL1IE = 1;
  1542  04E0  1592               	bsf	18,3	;volatile
  1543                           
  1544                           ;I2C.c: 30: SSP1IF = 0;
  1545  04E1  0020               	movlb	0	; select bank0
  1546  04E2  1191               	bcf	17,3	;volatile
  1547                           
  1548                           ;I2C.c: 31: BCL1IF = 0;
  1549  04E3  1192               	bcf	18,3	;volatile
  1550                           
  1551                           ;I2C.c: 33: init_Timer4();
  1552  04E4  3184  24F5         	fcall	_init_Timer4
  1553  04E6  0008               	return
  1554  04E7                     __end_of_init_I2C_master:	
  1555                           
  1556                           	psect	text6
  1557  04F5                     __ptext6:	
  1558 ;; *************** function _init_Timer4 *****************
  1559 ;; Defined at:
  1560 ;;		line 156 in file "I2C.c"
  1561 ;; Parameters:    Size  Location     Type
  1562 ;;		None
  1563 ;; Auto vars:     Size  Location     Type
  1564 ;;		None
  1565 ;; Return value:  Size  Location     Type
  1566 ;;		None               void
  1567 ;; Registers used:
  1568 ;;		wreg, status,2
  1569 ;; Tracked objects:
  1570 ;;		On entry : 0/0
  1571 ;;		On exit  : 0/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1574 ;;      Params:         0       0       0       0       0       0
  1575 ;;      Locals:         0       0       0       0       0       0
  1576 ;;      Temps:          0       0       0       0       0       0
  1577 ;;      Totals:         0       0       0       0       0       0
  1578 ;;Total ram usage:        0 bytes
  1579 ;; Hardware stack levels used:    1
  1580 ;; Hardware stack levels required when called:    6
  1581 ;; This function calls:
  1582 ;;		Nothing
  1583 ;; This function is called by:
  1584 ;;		_init_I2C_master
  1585 ;; This function uses a non-reentrant model
  1586 ;;
  1587                           
  1588                           
  1589                           ;psect for function _init_Timer4
  1590  04F5                     _init_Timer4:	
  1591                           
  1592                           ;I2C.c: 157: T4CON = 0b00000010;
  1593                           
  1594                           ;incstack = 0
  1595                           ; Regs used in _init_Timer4: [wreg+status,2]
  1596  04F5  3002               	movlw	2
  1597  04F6  0028               	movlb	8	; select bank8
  1598  04F7  0097               	movwf	23	;volatile
  1599                           
  1600                           ;I2C.c: 158: PR4 = 249;
  1601  04F8  30F9               	movlw	249
  1602  04F9  0096               	movwf	22	;volatile
  1603                           
  1604                           ;I2C.c: 159: TMR4IE = 1;
  1605  04FA  0021               	movlb	1	; select bank1
  1606  04FB  1493               	bsf	19,1	;volatile
  1607                           
  1608                           ;I2C.c: 160: TMR4 = 0;
  1609  04FC  0028               	movlb	8	; select bank8
  1610  04FD  0195               	clrf	21	;volatile
  1611                           
  1612                           ;I2C.c: 161: TMR4ON = 1;
  1613  04FE  1517               	bsf	23,2	;volatile
  1614  04FF  0008               	return
  1615  0500                     __end_of_init_Timer4:	
  1616                           
  1617                           	psect	intentry
  1618  0004                     __pintentry:	
  1619 ;; *************** function _inter *****************
  1620 ;; Defined at:
  1621 ;;		line 54 in file "main.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;		None
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;		None
  1626 ;; Return value:  Size  Location     Type
  1627 ;;		None               void
  1628 ;; Registers used:
  1629 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1635 ;;      Params:         0       0       0       0       0       0
  1636 ;;      Locals:         0       0       0       0       0       0
  1637 ;;      Temps:          0       1       0       0       0       0
  1638 ;;      Totals:         0       1       0       0       0       0
  1639 ;;Total ram usage:        1 bytes
  1640 ;; Hardware stack levels used:    1
  1641 ;; Hardware stack levels required when called:    5
  1642 ;; This function calls:
  1643 ;;		_interrupt_controller
  1644 ;; This function is called by:
  1645 ;;		Interrupt level 1
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649  0004                     _inter:	
  1650                           
  1651                           ;incstack = 0
  1652                           ; Regs used in _inter: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1653  0004  147E               	bsf	126,0	;set compiler interrupt flag
  1654  0005  3180               	pagesel	$
  1655  0006  0020               	movlb	0	; select bank0
  1656  0007  087F               	movf	127,w
  1657  0008  00DD               	movwf	??_inter
  1658                           
  1659                           ;main.c: 55: interrupt_controller();
  1660  0009  3182  22F0         	fcall	_interrupt_controller
  1661  000B  0020               	movlb	0	; select bank0
  1662  000C  085D               	movf	??_inter,w
  1663  000D  00FF               	movwf	127
  1664  000E  107E               	bcf	126,0	;clear compiler interrupt flag
  1665  000F  0009               	retfie
  1666  0010                     __end_of_inter:	
  1667                           
  1668                           	psect	text8
  1669  02F0                     __ptext8:	
  1670 ;; *************** function _interrupt_controller *****************
  1671 ;; Defined at:
  1672 ;;		line 66 in file "controller.c"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;		None
  1675 ;; Auto vars:     Size  Location     Type
  1676 ;;  out             2   59[BANK0 ] int 
  1677 ;;  current         2   57[BANK0 ] int 
  1678 ;;  volume          2   55[BANK0 ] int 
  1679 ;; Return value:  Size  Location     Type
  1680 ;;		None               void
  1681 ;; Registers used:
  1682 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1688 ;;      Params:         0       0       0       0       0       0
  1689 ;;      Locals:         0       6       0       0       0       0
  1690 ;;      Temps:          0       1       0       0       0       0
  1691 ;;      Totals:         0       7       0       0       0       0
  1692 ;;Total ram usage:        7 bytes
  1693 ;; Hardware stack levels used:    1
  1694 ;; Hardware stack levels required when called:    4
  1695 ;; This function calls:
  1696 ;;		_calc
  1697 ;;		_call_send
  1698 ;;		_current_conversion
  1699 ;;		_measure
  1700 ;;		_output
  1701 ;;		_set_current_limit
  1702 ;; This function is called by:
  1703 ;;		_inter
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707                           
  1708                           ;psect for function _interrupt_controller
  1709  02F0                     _interrupt_controller:	
  1710                           
  1711                           ;controller.c: 67: if(TMR2IF == 1) {
  1712                           
  1713                           ;incstack = 0
  1714                           ; Regs used in _interrupt_controller: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1715  02F0  0020               	movlb	0	; select bank0
  1716  02F1  1C91               	btfss	17,1	;volatile
  1717  02F2  0008               	return
  1718                           
  1719                           ;controller.c: 68: int current;
  1720                           ;controller.c: 69: int volume;
  1721                           ;controller.c: 70: int out;
  1722                           ;controller.c: 71: measure(&current, 0b00000101);
  1723  02F3  3005               	movlw	5
  1724  02F4  00FB               	movwf	measure@pin_select
  1725  02F5  3000               	movlw	0
  1726  02F6  00FC               	movwf	measure@pin_select+1
  1727  02F7  3059               	movlw	interrupt_controller@current& (0+255)
  1728  02F8  3184  24C6  3182   	fcall	_measure
  1729                           
  1730                           ;controller.c: 72: measure(&volume, 0b00000001);
  1731  02FB  3001               	movlw	1
  1732  02FC  00FB               	movwf	measure@pin_select
  1733  02FD  3000               	movlw	0
  1734  02FE  00FC               	movwf	measure@pin_select+1
  1735  02FF  3057               	movlw	interrupt_controller@volume& (0+255)
  1736  0300  3184  24C6  3182   	fcall	_measure
  1737                           
  1738                           ;controller.c: 73: current = current_conversion(current);
  1739  0303  0020               	movlb	0	; select bank0
  1740  0304  085A               	movf	interrupt_controller@current+1,w
  1741  0305  01FD               	clrf	current_conversion@measured_value+1
  1742  0306  07FD               	addwf	current_conversion@measured_value+1,f
  1743  0307  0859               	movf	interrupt_controller@current,w
  1744  0308  01FC               	clrf	current_conversion@measured_value
  1745  0309  07FC               	addwf	current_conversion@measured_value,f
  1746  030A  3182  2297  3182   	fcall	_current_conversion
  1747  030D  087D               	movf	?_current_conversion+1,w
  1748  030E  0020               	movlb	0	; select bank0
  1749  030F  01DA               	clrf	interrupt_controller@current+1
  1750  0310  07DA               	addwf	interrupt_controller@current+1,f
  1751  0311  087C               	movf	?_current_conversion,w
  1752  0312  01D9               	clrf	interrupt_controller@current
  1753  0313  07D9               	addwf	interrupt_controller@current,f
  1754                           
  1755                           ;controller.c: 74: set_current_limit(volume);
  1756  0314  0858               	movf	interrupt_controller@volume+1,w
  1757  0315  01F1               	clrf	set_current_limit@current_limit+1
  1758  0316  07F1               	addwf	set_current_limit@current_limit+1,f
  1759  0317  0857               	movf	interrupt_controller@volume,w
  1760  0318  01F0               	clrf	set_current_limit@current_limit
  1761  0319  07F0               	addwf	set_current_limit@current_limit,f
  1762  031A  3185  250A  3182   	fcall	_set_current_limit
  1763                           
  1764                           ;controller.c: 75: calc(current,volume,&out);
  1765  031D  0020               	movlb	0	; select bank0
  1766  031E  085A               	movf	interrupt_controller@current+1,w
  1767  031F  01C8               	clrf	calc@ref+1
  1768  0320  07C8               	addwf	calc@ref+1,f
  1769  0321  0859               	movf	interrupt_controller@current,w
  1770  0322  01C7               	clrf	calc@ref
  1771  0323  07C7               	addwf	calc@ref,f
  1772  0324  0858               	movf	interrupt_controller@volume+1,w
  1773  0325  01CA               	clrf	calc@mes+1
  1774  0326  07CA               	addwf	calc@mes+1,f
  1775  0327  0857               	movf	interrupt_controller@volume,w
  1776  0328  01C9               	clrf	calc@mes
  1777  0329  07C9               	addwf	calc@mes,f
  1778  032A  305B               	movlw	interrupt_controller@out& (0+255)
  1779  032B  00D6               	movwf	??_interrupt_controller
  1780  032C  0856               	movf	??_interrupt_controller,w
  1781  032D  00CB               	movwf	calc@output
  1782  032E  3181  215A  3182   	fcall	_calc
  1783                           
  1784                           ;controller.c: 76: output(out);
  1785  0331  0020               	movlb	0	; select bank0
  1786  0332  085C               	movf	interrupt_controller@out+1,w
  1787  0333  01F1               	clrf	output@out+1
  1788  0334  07F1               	addwf	output@out+1,f
  1789  0335  085B               	movf	interrupt_controller@out,w
  1790  0336  01F0               	clrf	output@out
  1791  0337  07F0               	addwf	output@out,f
  1792  0338  3184  249C  3182   	fcall	_output
  1793                           
  1794                           ;controller.c: 77: TMR2IF = 0;
  1795  033B  0020               	movlb	0	; select bank0
  1796  033C  1091               	bcf	17,1	;volatile
  1797                           
  1798                           ;controller.c: 78: call_send();
  1799  033D  3184  2437         	fcall	_call_send
  1800  033F  0008               	return
  1801  0340                     __end_of_interrupt_controller:	
  1802                           
  1803                           	psect	text9
  1804  050A                     __ptext9:	
  1805 ;; *************** function _set_current_limit *****************
  1806 ;; Defined at:
  1807 ;;		line 107 in file "controller.c"
  1808 ;; Parameters:    Size  Location     Type
  1809 ;;  current_limi    2    0[COMMON] int 
  1810 ;; Auto vars:     Size  Location     Type
  1811 ;;		None
  1812 ;; Return value:  Size  Location     Type
  1813 ;;		None               void
  1814 ;; Registers used:
  1815 ;;		wreg, status,2, status,0
  1816 ;; Tracked objects:
  1817 ;;		On entry : 0/0
  1818 ;;		On exit  : 0/0
  1819 ;;		Unchanged: 0/0
  1820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1821 ;;      Params:         2       0       0       0       0       0
  1822 ;;      Locals:         0       0       0       0       0       0
  1823 ;;      Temps:          0       0       0       0       0       0
  1824 ;;      Totals:         2       0       0       0       0       0
  1825 ;;Total ram usage:        2 bytes
  1826 ;; Hardware stack levels used:    1
  1827 ;; This function calls:
  1828 ;;		Nothing
  1829 ;; This function is called by:
  1830 ;;		_interrupt_controller
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834                           
  1835                           ;psect for function _set_current_limit
  1836  050A                     _set_current_limit:	
  1837                           
  1838                           ;controller.c: 108: controller_current_limit = current_limit;
  1839                           
  1840                           ;incstack = 0
  1841                           ; Regs used in _set_current_limit: [wreg+status,2+status,0]
  1842  050A  0871               	movf	set_current_limit@current_limit+1,w
  1843  050B  0020               	movlb	0	; select bank0
  1844  050C  01E3               	clrf	_controller_current_limit+1
  1845  050D  07E3               	addwf	_controller_current_limit+1,f
  1846  050E  0870               	movf	set_current_limit@current_limit,w
  1847  050F  01E2               	clrf	_controller_current_limit
  1848  0510  07E2               	addwf	_controller_current_limit,f
  1849  0511  0008               	return
  1850  0512                     __end_of_set_current_limit:	
  1851                           
  1852                           	psect	text10
  1853  049C                     __ptext10:	
  1854 ;; *************** function _output *****************
  1855 ;; Defined at:
  1856 ;;		line 60 in file "controller.c"
  1857 ;; Parameters:    Size  Location     Type
  1858 ;;  out             2    0[COMMON] int 
  1859 ;; Auto vars:     Size  Location     Type
  1860 ;;		None
  1861 ;; Return value:  Size  Location     Type
  1862 ;;		None               void
  1863 ;; Registers used:
  1864 ;;		wreg, status,2, status,0
  1865 ;; Tracked objects:
  1866 ;;		On entry : 0/0
  1867 ;;		On exit  : 0/0
  1868 ;;		Unchanged: 0/0
  1869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1870 ;;      Params:         2       0       0       0       0       0
  1871 ;;      Locals:         0       0       0       0       0       0
  1872 ;;      Temps:          2       0       0       0       0       0
  1873 ;;      Totals:         4       0       0       0       0       0
  1874 ;;Total ram usage:        4 bytes
  1875 ;; Hardware stack levels used:    1
  1876 ;; This function calls:
  1877 ;;		Nothing
  1878 ;; This function is called by:
  1879 ;;		_interrupt_controller
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883                           
  1884                           ;psect for function _output
  1885  049C                     _output:	
  1886                           
  1887                           ;controller.c: 61: CCPR3L = out >> 2;
  1888                           
  1889                           ;incstack = 0
  1890                           ; Regs used in _output: [wreg+status,2+status,0]
  1891  049C  0871               	movf	output@out+1,w
  1892  049D  00F3               	movwf	??_output+1
  1893  049E  0870               	movf	output@out,w
  1894  049F  00F2               	movwf	??_output
  1895  04A0  0D73               	rlf	??_output+1,w
  1896  04A1  0CF3               	rrf	??_output+1,f
  1897  04A2  0CF2               	rrf	??_output,f
  1898  04A3  0D73               	rlf	??_output+1,w
  1899  04A4  0CF3               	rrf	??_output+1,f
  1900  04A5  0CF2               	rrf	??_output,f
  1901  04A6  0872               	movf	??_output,w
  1902  04A7  0026               	movlb	6	; select bank6
  1903  04A8  0091               	movwf	17	;volatile
  1904                           
  1905                           ;controller.c: 62: CCP3CONbits.DC3B = out & 0x03;
  1906  04A9  0870               	movf	output@out,w
  1907  04AA  3903               	andlw	3
  1908  04AB  00F2               	movwf	??_output
  1909  04AC  0EF2               	swapf	??_output,f
  1910  04AD  0813               	movf	19,w	;volatile
  1911  04AE  0672               	xorwf	??_output,w
  1912  04AF  39CF               	andlw	-49
  1913  04B0  0672               	xorwf	??_output,w
  1914  04B1  0093               	movwf	19	;volatile
  1915  04B2  0008               	return
  1916  04B3                     __end_of_output:	
  1917                           
  1918                           	psect	text11
  1919  04C6                     __ptext11:	
  1920 ;; *************** function _measure *****************
  1921 ;; Defined at:
  1922 ;;		line 16 in file "controller.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;  value           1    wreg     PTR int 
  1925 ;;		 -> interrupt_controller@volume(2), interrupt_controller@current(2), 
  1926 ;;  pin_select      2   11[COMMON] int 
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;  value           1   13[COMMON] PTR int 
  1929 ;;		 -> interrupt_controller@volume(2), interrupt_controller@current(2), 
  1930 ;; Return value:  Size  Location     Type
  1931 ;;		None               void
  1932 ;; Registers used:
  1933 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1934 ;; Tracked objects:
  1935 ;;		On entry : 0/0
  1936 ;;		On exit  : 0/0
  1937 ;;		Unchanged: 0/0
  1938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1939 ;;      Params:         2       0       0       0       0       0
  1940 ;;      Locals:         1       0       0       0       0       0
  1941 ;;      Temps:          0       0       0       0       0       0
  1942 ;;      Totals:         3       0       0       0       0       0
  1943 ;;Total ram usage:        3 bytes
  1944 ;; Hardware stack levels used:    1
  1945 ;; Hardware stack levels required when called:    1
  1946 ;; This function calls:
  1947 ;;		_adconv
  1948 ;; This function is called by:
  1949 ;;		_interrupt_controller
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           
  1953                           
  1954                           ;psect for function _measure
  1955  04C6                     _measure:	
  1956                           
  1957                           ;incstack = 0
  1958                           ; Regs used in _measure: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1959                           ;measure@value stored from wreg
  1960  04C6  00FD               	movwf	measure@value
  1961                           
  1962                           ;controller.c: 17: *value = adconv(pin_select);
  1963  04C7  087C               	movf	measure@pin_select+1,w
  1964  04C8  01F1               	clrf	adconv@pin_select+1
  1965  04C9  07F1               	addwf	adconv@pin_select+1,f
  1966  04CA  087B               	movf	measure@pin_select,w
  1967  04CB  01F0               	clrf	adconv@pin_select
  1968  04CC  07F0               	addwf	adconv@pin_select,f
  1969  04CD  3184  240C         	fcall	_adconv
  1970  04CF  087D               	movf	measure@value,w
  1971  04D0  0086               	movwf	6
  1972  04D1  0187               	clrf	7
  1973  04D2  0870               	movf	?_adconv,w
  1974  04D3  3FC0               	movwi [0]fsr1
  1975  04D4  0871               	movf	?_adconv+1,w
  1976  04D5  3FC1               	movwi [1]fsr1
  1977  04D6  0008               	return
  1978  04D7                     __end_of_measure:	
  1979                           
  1980                           	psect	text12
  1981  040C                     __ptext12:	
  1982 ;; *************** function _adconv *****************
  1983 ;; Defined at:
  1984 ;;		line 13 in file "adcon.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;  pin_select      2    0[COMMON] int 
  1987 ;; Auto vars:     Size  Location     Type
  1988 ;;  temp            2    9[COMMON] int 
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  2    0[COMMON] int 
  1991 ;; Registers used:
  1992 ;;		wreg, status,2, status,0
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1998 ;;      Params:         2       0       0       0       0       0
  1999 ;;      Locals:         2       0       0       0       0       0
  2000 ;;      Temps:          7       0       0       0       0       0
  2001 ;;      Totals:        11       0       0       0       0       0
  2002 ;;Total ram usage:       11 bytes
  2003 ;; Hardware stack levels used:    1
  2004 ;; This function calls:
  2005 ;;		Nothing
  2006 ;; This function is called by:
  2007 ;;		_measure
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011                           
  2012                           ;psect for function _adconv
  2013  040C                     _adconv:	
  2014                           
  2015                           ;adcon.c: 14: int temp;
  2016                           ;adcon.c: 16: ADCON0 = pin_select;
  2017                           
  2018                           ;incstack = 0
  2019                           ; Regs used in _adconv: [wreg+status,2+status,0]
  2020  040C  0870               	movf	adconv@pin_select,w
  2021  040D  0021               	movlb	1	; select bank1
  2022  040E  009D               	movwf	29	;volatile
  2023                           
  2024                           ;adcon.c: 17: _delay((unsigned long)((1)*(16000000/4000000.0)));
  2025  040F  3200               	nop2	;2 cycle nop
  2026  0410  3200               	nop2	;2 cycle nop
  2027                           
  2028                           ;adcon.c: 18: GO_nDONE = 1;
  2029  0411  0021               	movlb	1	; select bank1
  2030  0412  149D               	bsf	29,1	;volatile
  2031  0413                     i1l162:	
  2032                           ;adcon.c: 19: while(GO_nDONE);
  2033                           
  2034  0413  189D               	btfsc	29,1	;volatile
  2035  0414  2C13               	goto	i1l162
  2036                           
  2037                           ;adcon.c: 20: temp = ADRESH;
  2038  0415  081C               	movf	28,w	;volatile
  2039  0416  00F2               	movwf	??_adconv
  2040  0417  01F3               	clrf	??_adconv+1
  2041  0418  0872               	movf	??_adconv,w
  2042  0419  00F9               	movwf	adconv@temp
  2043  041A  0873               	movf	??_adconv+1,w
  2044  041B  00FA               	movwf	adconv@temp+1
  2045                           
  2046                           ;adcon.c: 21: temp = (temp << 8) | ADRESL;
  2047  041C  081B               	movf	27,w	;volatile
  2048  041D  00F2               	movwf	??_adconv
  2049  041E  01F3               	clrf	??_adconv+1
  2050  041F  087A               	movf	adconv@temp+1,w
  2051  0420  00F5               	movwf	??_adconv+3
  2052  0421  0879               	movf	adconv@temp,w
  2053  0422  00F4               	movwf	??_adconv+2
  2054  0423  0874               	movf	??_adconv+2,w
  2055  0424  00F5               	movwf	??_adconv+3
  2056  0425  01F4               	clrf	??_adconv+2
  2057  0426  0872               	movf	??_adconv,w
  2058  0427  0474               	iorwf	??_adconv+2,w
  2059  0428  00F7               	movwf	??_adconv+5
  2060  0429  0873               	movf	??_adconv+1,w
  2061  042A  0475               	iorwf	??_adconv+3,w
  2062  042B  00F8               	movwf	??_adconv+6
  2063  042C  0877               	movf	??_adconv+5,w
  2064  042D  00F9               	movwf	adconv@temp
  2065  042E  0878               	movf	??_adconv+6,w
  2066  042F  00FA               	movwf	adconv@temp+1
  2067                           
  2068                           ;adcon.c: 22: return temp;
  2069  0430  087A               	movf	adconv@temp+1,w
  2070  0431  01F1               	clrf	?_adconv+1
  2071  0432  07F1               	addwf	?_adconv+1,f
  2072  0433  0879               	movf	adconv@temp,w
  2073  0434  01F0               	clrf	?_adconv
  2074  0435  07F0               	addwf	?_adconv,f
  2075  0436  0008               	return
  2076  0437                     __end_of_adconv:	
  2077                           
  2078                           	psect	text13
  2079  0297                     __ptext13:	
  2080 ;; *************** function _current_conversion *****************
  2081 ;; Defined at:
  2082 ;;		line 99 in file "controller.c"
  2083 ;; Parameters:    Size  Location     Type
  2084 ;;  measured_val    2   12[COMMON] int 
  2085 ;; Auto vars:     Size  Location     Type
  2086 ;;  current         2    5[BANK0 ] int 
  2087 ;; Return value:  Size  Location     Type
  2088 ;;                  2   12[COMMON] int 
  2089 ;; Registers used:
  2090 ;;		wreg, status,2, status,0, pclath, cstack
  2091 ;; Tracked objects:
  2092 ;;		On entry : 0/0
  2093 ;;		On exit  : 0/0
  2094 ;;		Unchanged: 0/0
  2095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2096 ;;      Params:         2       0       0       0       0       0
  2097 ;;      Locals:         0       2       0       0       0       0
  2098 ;;      Temps:          0       5       0       0       0       0
  2099 ;;      Totals:         2       7       0       0       0       0
  2100 ;;Total ram usage:        9 bytes
  2101 ;; Hardware stack levels used:    1
  2102 ;; Hardware stack levels required when called:    1
  2103 ;; This function calls:
  2104 ;;		___lmul
  2105 ;; This function is called by:
  2106 ;;		_interrupt_controller
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110                           
  2111                           ;psect for function _current_conversion
  2112  0297                     _current_conversion:	
  2113                           
  2114                           ;controller.c: 103: int current = (((long) (measured_value - 0x0200)) * ((long) 1000) * 
      +                          ((long) 20)) >> 10;
  2115                           
  2116                           ;incstack = 0
  2117                           ; Regs used in _current_conversion: [wreg+status,2+status,0+pclath+cstack]
  2118  0297  087C               	movf	current_conversion@measured_value,w
  2119  0298  3E00               	addlw	0
  2120  0299  00F0               	movwf	___lmul@multiplier
  2121  029A  30FE               	movlw	254
  2122  029B  3D7D               	addwfc	current_conversion@measured_value+1,w
  2123  029C  00F1               	movwf	___lmul@multiplier+1
  2124  029D  01F2               	clrf	___lmul@multiplier+2
  2125  029E  1BF1               	btfsc	___lmul@multiplier+1,7
  2126  029F  03F2               	decf	___lmul@multiplier+2,f
  2127  02A0  0872               	movf	___lmul@multiplier+2,w
  2128  02A1  00F3               	movwf	___lmul@multiplier+3
  2129  02A2  3000               	movlw	0
  2130  02A3  00F7               	movwf	___lmul@multiplicand+3
  2131  02A4  3000               	movlw	0
  2132  02A5  00F6               	movwf	___lmul@multiplicand+2
  2133  02A6  304E               	movlw	78
  2134  02A7  00F5               	movwf	___lmul@multiplicand+1
  2135  02A8  3020               	movlw	32
  2136  02A9  00F4               	movwf	___lmul@multiplicand
  2137  02AA  3183  23B0  3182   	fcall	___lmul
  2138  02AD  0870               	movf	?___lmul,w
  2139  02AE  0020               	movlb	0	; select bank0
  2140  02AF  00A0               	movwf	??_current_conversion
  2141  02B0  0871               	movf	?___lmul+1,w
  2142  02B1  00A1               	movwf	??_current_conversion+1
  2143  02B2  0872               	movf	?___lmul+2,w
  2144  02B3  00A2               	movwf	??_current_conversion+2
  2145  02B4  0873               	movf	?___lmul+3,w
  2146  02B5  00A3               	movwf	??_current_conversion+3
  2147  02B6  300A               	movlw	10
  2148  02B7  00A4               	movwf	??_current_conversion+4
  2149  02B8                     u114_25:	
  2150  02B8  37A3               	asrf	??_current_conversion+3,f
  2151  02B9  0CA2               	rrf	??_current_conversion+2,f
  2152  02BA  0CA1               	rrf	??_current_conversion+1,f
  2153  02BB  0CA0               	rrf	??_current_conversion,f
  2154  02BC  0BA4               	decfsz	??_current_conversion+4,f
  2155  02BD  2AB8               	goto	u114_25
  2156  02BE  0821               	movf	??_current_conversion+1,w
  2157  02BF  01A6               	clrf	current_conversion@current+1
  2158  02C0  07A6               	addwf	current_conversion@current+1,f
  2159  02C1  0820               	movf	??_current_conversion,w
  2160  02C2  01A5               	clrf	current_conversion@current
  2161  02C3  07A5               	addwf	current_conversion@current,f
  2162                           
  2163                           ;controller.c: 104: return ((((long) current) * ((long) 12000)) >> 10);
  2164  02C4  0825               	movf	current_conversion@current,w
  2165  02C5  00F0               	movwf	___lmul@multiplier
  2166  02C6  0826               	movf	current_conversion@current+1,w
  2167  02C7  00F1               	movwf	___lmul@multiplier+1
  2168  02C8  0D89               	rlf	9,f
  2169  02C9  3B89               	subwfb	9,f
  2170  02CA  0989               	comf	9,f
  2171  02CB  00F2               	movwf	___lmul@multiplier+2
  2172  02CC  00F3               	movwf	___lmul@multiplier+3
  2173  02CD  3000               	movlw	0
  2174  02CE  00F7               	movwf	___lmul@multiplicand+3
  2175  02CF  3000               	movlw	0
  2176  02D0  00F6               	movwf	___lmul@multiplicand+2
  2177  02D1  302E               	movlw	46
  2178  02D2  00F5               	movwf	___lmul@multiplicand+1
  2179  02D3  30E0               	movlw	224
  2180  02D4  00F4               	movwf	___lmul@multiplicand
  2181  02D5  3183  23B0  3182   	fcall	___lmul
  2182  02D8  0870               	movf	?___lmul,w
  2183  02D9  0020               	movlb	0	; select bank0
  2184  02DA  00A0               	movwf	??_current_conversion
  2185  02DB  0871               	movf	?___lmul+1,w
  2186  02DC  00A1               	movwf	??_current_conversion+1
  2187  02DD  0872               	movf	?___lmul+2,w
  2188  02DE  00A2               	movwf	??_current_conversion+2
  2189  02DF  0873               	movf	?___lmul+3,w
  2190  02E0  00A3               	movwf	??_current_conversion+3
  2191  02E1  300A               	movlw	10
  2192  02E2  00A4               	movwf	??_current_conversion+4
  2193  02E3                     u115_25:	
  2194  02E3  37A3               	asrf	??_current_conversion+3,f
  2195  02E4  0CA2               	rrf	??_current_conversion+2,f
  2196  02E5  0CA1               	rrf	??_current_conversion+1,f
  2197  02E6  0CA0               	rrf	??_current_conversion,f
  2198  02E7  0BA4               	decfsz	??_current_conversion+4,f
  2199  02E8  2AE3               	goto	u115_25
  2200  02E9  0821               	movf	??_current_conversion+1,w
  2201  02EA  01FD               	clrf	?_current_conversion+1
  2202  02EB  07FD               	addwf	?_current_conversion+1,f
  2203  02EC  0820               	movf	??_current_conversion,w
  2204  02ED  01FC               	clrf	?_current_conversion
  2205  02EE  07FC               	addwf	?_current_conversion,f
  2206  02EF  0008               	return
  2207  02F0                     __end_of_current_conversion:	
  2208                           
  2209                           	psect	text14
  2210  03B0                     __ptext14:	
  2211 ;; *************** function ___lmul *****************
  2212 ;; Defined at:
  2213 ;;		line 15 in file "C:\isaka\application\compiler\xc\xc8\sources\common\Umul32.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;  multiplier      4    0[COMMON] unsigned long 
  2216 ;;  multiplicand    4    4[COMMON] unsigned long 
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;  product         4    8[COMMON] unsigned long 
  2219 ;; Return value:  Size  Location     Type
  2220 ;;                  4    0[COMMON] unsigned long 
  2221 ;; Registers used:
  2222 ;;		wreg, status,2, status,0
  2223 ;; Tracked objects:
  2224 ;;		On entry : 0/0
  2225 ;;		On exit  : 0/0
  2226 ;;		Unchanged: 0/0
  2227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2228 ;;      Params:         8       0       0       0       0       0
  2229 ;;      Locals:         4       0       0       0       0       0
  2230 ;;      Temps:          0       0       0       0       0       0
  2231 ;;      Totals:        12       0       0       0       0       0
  2232 ;;Total ram usage:       12 bytes
  2233 ;; Hardware stack levels used:    1
  2234 ;; This function calls:
  2235 ;;		Nothing
  2236 ;; This function is called by:
  2237 ;;		_current_conversion
  2238 ;; This function uses a non-reentrant model
  2239 ;;
  2240                           
  2241                           
  2242                           ;psect for function ___lmul
  2243  03B0                     ___lmul:	
  2244                           
  2245                           ;incstack = 0
  2246                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2247  03B0  3000               	movlw	0
  2248  03B1  00FB               	movwf	___lmul@product+3
  2249  03B2  3000               	movlw	0
  2250  03B3  00FA               	movwf	___lmul@product+2
  2251  03B4  3000               	movlw	0
  2252  03B5  00F9               	movwf	___lmul@product+1
  2253  03B6  3000               	movlw	0
  2254  03B7  00F8               	movwf	___lmul@product
  2255  03B8                     i1l1365:	
  2256  03B8  1C70               	btfss	___lmul@multiplier,0
  2257  03B9  2BC2               	goto	i1l1369
  2258  03BA  0874               	movf	___lmul@multiplicand,w
  2259  03BB  07F8               	addwf	___lmul@product,f
  2260  03BC  0875               	movf	___lmul@multiplicand+1,w
  2261  03BD  3DF9               	addwfc	___lmul@product+1,f
  2262  03BE  0876               	movf	___lmul@multiplicand+2,w
  2263  03BF  3DFA               	addwfc	___lmul@product+2,f
  2264  03C0  0877               	movf	___lmul@multiplicand+3,w
  2265  03C1  3DFB               	addwfc	___lmul@product+3,f
  2266  03C2                     i1l1369:	
  2267  03C2  3001               	movlw	1
  2268  03C3                     u108_25:	
  2269  03C3  35F4               	lslf	___lmul@multiplicand,f
  2270  03C4  0DF5               	rlf	___lmul@multiplicand+1,f
  2271  03C5  0DF6               	rlf	___lmul@multiplicand+2,f
  2272  03C6  0DF7               	rlf	___lmul@multiplicand+3,f
  2273  03C7  0B89               	decfsz	9,f
  2274  03C8  2BC3               	goto	u108_25
  2275  03C9  3001               	movlw	1
  2276  03CA                     u109_25:	
  2277  03CA  36F3               	lsrf	___lmul@multiplier+3,f
  2278  03CB  0CF2               	rrf	___lmul@multiplier+2,f
  2279  03CC  0CF1               	rrf	___lmul@multiplier+1,f
  2280  03CD  0CF0               	rrf	___lmul@multiplier,f
  2281  03CE  0B89               	decfsz	9,f
  2282  03CF  2BCA               	goto	u109_25
  2283  03D0  0873               	movf	___lmul@multiplier+3,w
  2284  03D1  0472               	iorwf	___lmul@multiplier+2,w
  2285  03D2  0471               	iorwf	___lmul@multiplier+1,w
  2286  03D3  0470               	iorwf	___lmul@multiplier,w
  2287  03D4  1D03               	skipz
  2288  03D5  2BB8               	goto	i1l1365
  2289  03D6  087B               	movf	___lmul@product+3,w
  2290  03D7  00F3               	movwf	?___lmul+3
  2291  03D8  087A               	movf	___lmul@product+2,w
  2292  03D9  00F2               	movwf	?___lmul+2
  2293  03DA  0879               	movf	___lmul@product+1,w
  2294  03DB  00F1               	movwf	?___lmul+1
  2295  03DC  0878               	movf	___lmul@product,w
  2296  03DD  00F0               	movwf	?___lmul
  2297  03DE  0008               	return
  2298  03DF                     __end_of___lmul:	
  2299                           
  2300                           	psect	text15
  2301  0437                     __ptext15:	
  2302 ;; *************** function _call_send *****************
  2303 ;; Defined at:
  2304 ;;		line 164 in file "I2C.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;		None
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;  data            2    0[BANK0 ] int 
  2309 ;;  send_data       1    2[BANK0 ] unsigned char 
  2310 ;; Return value:  Size  Location     Type
  2311 ;;		None               void
  2312 ;; Registers used:
  2313 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2314 ;; Tracked objects:
  2315 ;;		On entry : 0/0
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2319 ;;      Params:         0       0       0       0       0       0
  2320 ;;      Locals:         0       3       0       0       0       0
  2321 ;;      Temps:          3       0       0       0       0       0
  2322 ;;      Totals:         3       3       0       0       0       0
  2323 ;;Total ram usage:        6 bytes
  2324 ;; Hardware stack levels used:    1
  2325 ;; Hardware stack levels required when called:    2
  2326 ;; This function calls:
  2327 ;;		_I2C_send_data
  2328 ;;		_get_current_limit
  2329 ;; This function is called by:
  2330 ;;		_interrupt_controller
  2331 ;; This function uses a non-reentrant model
  2332 ;;
  2333                           
  2334                           
  2335                           ;psect for function _call_send
  2336  0437                     _call_send:	
  2337                           
  2338                           ;I2C.c: 165: int data = get_current_limit();
  2339                           
  2340                           ;incstack = 0
  2341                           ; Regs used in _call_send: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2342  0437  3185  2512  3184   	fcall	_get_current_limit
  2343  043A  0871               	movf	?_get_current_limit+1,w
  2344  043B  0020               	movlb	0	; select bank0
  2345  043C  01A1               	clrf	call_send@data+1
  2346  043D  07A1               	addwf	call_send@data+1,f
  2347  043E  0870               	movf	?_get_current_limit,w
  2348  043F  01A0               	clrf	call_send@data
  2349  0440  07A0               	addwf	call_send@data,f
  2350                           
  2351                           ;I2C.c: 166: char send_data = data >> 2;
  2352  0441  0821               	movf	call_send@data+1,w
  2353  0442  00FC               	movwf	??_call_send+1
  2354  0443  0820               	movf	call_send@data,w
  2355  0444  00FB               	movwf	??_call_send
  2356  0445  0D7C               	rlf	??_call_send+1,w
  2357  0446  0CFC               	rrf	??_call_send+1,f
  2358  0447  0CFB               	rrf	??_call_send,f
  2359  0448  0D7C               	rlf	??_call_send+1,w
  2360  0449  0CFC               	rrf	??_call_send+1,f
  2361  044A  0CFB               	rrf	??_call_send,f
  2362  044B  087B               	movf	??_call_send,w
  2363  044C  00FD               	movwf	??_call_send+2
  2364  044D  087D               	movf	??_call_send+2,w
  2365  044E  00A2               	movwf	call_send@send_data
  2366                           
  2367                           ;I2C.c: 167: I2C_send_data((0x02), &send_data, 1);
  2368  044F  3022               	movlw	call_send@send_data& (0+255)
  2369  0450  00FB               	movwf	??_call_send
  2370  0451  087B               	movf	??_call_send,w
  2371  0452  00F4               	movwf	I2C_send_data@data
  2372  0453  3001               	movlw	1
  2373  0454  00F5               	movwf	I2C_send_data@length
  2374  0455  3000               	movlw	0
  2375  0456  00F6               	movwf	I2C_send_data@length+1
  2376  0457  3002               	movlw	2
  2377  0458  3183  2340         	fcall	_I2C_send_data
  2378  045A  0008               	return
  2379  045B                     __end_of_call_send:	
  2380                           
  2381                           	psect	text16
  2382  0512                     __ptext16:	
  2383 ;; *************** function _get_current_limit *****************
  2384 ;; Defined at:
  2385 ;;		line 111 in file "controller.c"
  2386 ;; Parameters:    Size  Location     Type
  2387 ;;		None
  2388 ;; Auto vars:     Size  Location     Type
  2389 ;;		None
  2390 ;; Return value:  Size  Location     Type
  2391 ;;                  2    0[COMMON] int 
  2392 ;; Registers used:
  2393 ;;		wreg, status,2, status,0
  2394 ;; Tracked objects:
  2395 ;;		On entry : 0/0
  2396 ;;		On exit  : 0/0
  2397 ;;		Unchanged: 0/0
  2398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2399 ;;      Params:         2       0       0       0       0       0
  2400 ;;      Locals:         0       0       0       0       0       0
  2401 ;;      Temps:          0       0       0       0       0       0
  2402 ;;      Totals:         2       0       0       0       0       0
  2403 ;;Total ram usage:        2 bytes
  2404 ;; Hardware stack levels used:    1
  2405 ;; This function calls:
  2406 ;;		Nothing
  2407 ;; This function is called by:
  2408 ;;		_call_send
  2409 ;;		_interrupt_I2C
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413                           
  2414                           ;psect for function _get_current_limit
  2415  0512                     _get_current_limit:	
  2416                           
  2417                           ;controller.c: 112: return controller_current_limit;
  2418                           
  2419                           ;incstack = 0
  2420                           ; Regs used in _get_current_limit: [wreg+status,2+status,0]
  2421  0512  0020               	movlb	0	; select bank0
  2422  0513  0863               	movf	_controller_current_limit+1,w
  2423  0514  01F1               	clrf	?_get_current_limit+1
  2424  0515  07F1               	addwf	?_get_current_limit+1,f
  2425  0516  0862               	movf	_controller_current_limit,w
  2426  0517  01F0               	clrf	?_get_current_limit
  2427  0518  07F0               	addwf	?_get_current_limit,f
  2428  0519  0008               	return
  2429  051A                     __end_of_get_current_limit:	
  2430                           
  2431                           	psect	text17
  2432  0340                     __ptext17:	
  2433 ;; *************** function _I2C_send_data *****************
  2434 ;; Defined at:
  2435 ;;		line 65 in file "I2C.c"
  2436 ;; Parameters:    Size  Location     Type
  2437 ;;  addr            1    wreg     unsigned char 
  2438 ;;  data            1    4[COMMON] PTR unsigned char 
  2439 ;;		 -> call_send@send_data(1), interrupt_I2C@send_data(1), 
  2440 ;;  length          2    5[COMMON] int 
  2441 ;; Auto vars:     Size  Location     Type
  2442 ;;  addr            1    8[COMMON] unsigned char 
  2443 ;;  i               2    9[COMMON] int 
  2444 ;; Return value:  Size  Location     Type
  2445 ;;		None               void
  2446 ;; Registers used:
  2447 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2453 ;;      Params:         3       0       0       0       0       0
  2454 ;;      Locals:         3       0       0       0       0       0
  2455 ;;      Temps:          1       0       0       0       0       0
  2456 ;;      Totals:         7       0       0       0       0       0
  2457 ;;Total ram usage:        7 bytes
  2458 ;; Hardware stack levels used:    1
  2459 ;; Hardware stack levels required when called:    1
  2460 ;; This function calls:
  2461 ;;		_I2C_ack_check
  2462 ;;		_I2C_idle_check
  2463 ;; This function is called by:
  2464 ;;		_call_send
  2465 ;;		_interrupt_I2C
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           
  2470                           ;psect for function _I2C_send_data
  2471  0340                     _I2C_send_data:	
  2472                           
  2473                           ;incstack = 0
  2474                           ; Regs used in _I2C_send_data: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2475                           ;I2C_send_data@addr stored from wreg
  2476  0340  00F8               	movwf	I2C_send_data@addr
  2477                           
  2478                           ;I2C.c: 66: I2C_idle_check();
  2479  0341  3185  2500  3183   	fcall	_I2C_idle_check
  2480                           
  2481                           ;I2C.c: 67: SSP1CON2bits.SEN = 1;
  2482  0344  0024               	movlb	4	; select bank4
  2483  0345  1416               	bsf	22,0	;volatile
  2484                           
  2485                           ;I2C.c: 69: I2C_idle_check();
  2486  0346  3185  2500  3183   	fcall	_I2C_idle_check
  2487                           
  2488                           ;I2C.c: 70: SSP1BUF = addr << 1;
  2489  0349  3578               	lslf	I2C_send_data@addr,w
  2490  034A  0024               	movlb	4	; select bank4
  2491  034B  0091               	movwf	17	;volatile
  2492                           
  2493                           ;I2C.c: 72: if (!I2C_ack_check()) { return; }
  2494  034C  3184  245B  3183   	fcall	_I2C_ack_check
  2495  034F  0871               	movf	?_I2C_ack_check+1,w
  2496  0350  0470               	iorwf	?_I2C_ack_check,w
  2497  0351  1903               	btfsc	3,2
  2498  0352  0008               	return
  2499                           
  2500                           ;I2C.c: 74: for(int i = 0; i < length; i++) {
  2501  0353  01F9               	clrf	I2C_send_data@i
  2502  0354  01FA               	clrf	I2C_send_data@i+1
  2503  0355                     i1l226:	
  2504  0355  087A               	movf	I2C_send_data@i+1,w
  2505  0356  3A80               	xorlw	128
  2506  0357  00F7               	movwf	??_I2C_send_data
  2507  0358  0876               	movf	I2C_send_data@length+1,w
  2508  0359  3A80               	xorlw	128
  2509  035A  0277               	subwf	??_I2C_send_data,w
  2510  035B  1D03               	skipz
  2511  035C  2B5F               	goto	u106_25
  2512  035D  0875               	movf	I2C_send_data@length,w
  2513  035E  0279               	subwf	I2C_send_data@i,w
  2514  035F                     u106_25:	
  2515  035F  1803               	btfsc	3,0
  2516  0360  2B7A               	goto	i1l1359
  2517                           
  2518                           ;I2C.c: 75: I2C_idle_check();
  2519  0361  3185  2500  3183   	fcall	_I2C_idle_check
  2520                           
  2521                           ;I2C.c: 76: SSP1BUF = *data;
  2522  0364  0874               	movf	I2C_send_data@data,w
  2523  0365  0086               	movwf	6
  2524  0366  0187               	clrf	7
  2525  0367  0801               	movf	1,w
  2526  0368  0024               	movlb	4	; select bank4
  2527  0369  0091               	movwf	17	;volatile
  2528                           
  2529                           ;I2C.c: 77: data++;
  2530  036A  3001               	movlw	1
  2531  036B  00F7               	movwf	??_I2C_send_data
  2532  036C  0877               	movf	??_I2C_send_data,w
  2533  036D  07F4               	addwf	I2C_send_data@data,f
  2534                           
  2535                           ;I2C.c: 79: if (!I2C_ack_check()) { return; }
  2536  036E  3184  245B  3183   	fcall	_I2C_ack_check
  2537  0371  0871               	movf	?_I2C_ack_check+1,w
  2538  0372  0470               	iorwf	?_I2C_ack_check,w
  2539  0373  1903               	btfsc	3,2
  2540  0374  0008               	return
  2541  0375  3001               	movlw	1
  2542  0376  07F9               	addwf	I2C_send_data@i,f
  2543  0377  3000               	movlw	0
  2544  0378  3DFA               	addwfc	I2C_send_data@i+1,f
  2545  0379  2B55               	goto	i1l226
  2546  037A                     i1l1359:	
  2547                           
  2548                           ;I2C.c: 80: }
  2549                           ;I2C.c: 82: I2C_idle_check();
  2550  037A  3185  2500         	fcall	_I2C_idle_check
  2551                           
  2552                           ;I2C.c: 83: SSP1CON2bits.PEN = 1;
  2553  037C  0024               	movlb	4	; select bank4
  2554  037D  1516               	bsf	22,2	;volatile
  2555  037E  0008               	return
  2556  037F                     __end_of_I2C_send_data:	
  2557                           
  2558                           	psect	text18
  2559  0500                     __ptext18:	
  2560 ;; *************** function _I2C_idle_check *****************
  2561 ;; Defined at:
  2562 ;;		line 39 in file "I2C.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;		None
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;		None
  2567 ;; Return value:  Size  Location     Type
  2568 ;;		None               void
  2569 ;; Registers used:
  2570 ;;		wreg, status,2, status,0
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2576 ;;      Params:         0       0       0       0       0       0
  2577 ;;      Locals:         0       0       0       0       0       0
  2578 ;;      Temps:          1       0       0       0       0       0
  2579 ;;      Totals:         1       0       0       0       0       0
  2580 ;;Total ram usage:        1 bytes
  2581 ;; Hardware stack levels used:    1
  2582 ;; This function calls:
  2583 ;;		Nothing
  2584 ;; This function is called by:
  2585 ;;		_I2C_send_data
  2586 ;; This function uses a non-reentrant model
  2587 ;;
  2588                           
  2589                           
  2590                           ;psect for function _I2C_idle_check
  2591  0500                     _I2C_idle_check:	
  2592  0500                     i1l1159:	
  2593                           ;I2C.c: 40: while (( SSP1CON2 & 0x1F ) | (SSP1STAT & 0x05)) ;
  2594                           
  2595                           ;incstack = 0
  2596                           ; Regs used in _I2C_idle_check: [wreg+status,2+status,0]
  2597                           
  2598  0500  3005               	movlw	5
  2599  0501  0024               	movlb	4	; select bank4
  2600  0502  0514               	andwf	20,w	;volatile
  2601  0503  00F0               	movwf	??_I2C_idle_check
  2602  0504  0816               	movf	22,w	;volatile
  2603  0505  391F               	andlw	31
  2604  0506  0470               	iorwf	??_I2C_idle_check,w
  2605  0507  1903               	btfsc	3,2
  2606  0508  0008               	return
  2607  0509  2D00               	goto	i1l1159
  2608  050A                     __end_of_I2C_idle_check:	
  2609                           
  2610                           	psect	text19
  2611  045B                     __ptext19:	
  2612 ;; *************** function _I2C_ack_check *****************
  2613 ;; Defined at:
  2614 ;;		line 49 in file "I2C.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;		None
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;  i               2    2[COMMON] unsigned int 
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  2    0[COMMON] int 
  2621 ;; Registers used:
  2622 ;;		wreg, status,2
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2628 ;;      Params:         2       0       0       0       0       0
  2629 ;;      Locals:         2       0       0       0       0       0
  2630 ;;      Temps:          0       0       0       0       0       0
  2631 ;;      Totals:         4       0       0       0       0       0
  2632 ;;Total ram usage:        4 bytes
  2633 ;; Hardware stack levels used:    1
  2634 ;; This function calls:
  2635 ;;		Nothing
  2636 ;; This function is called by:
  2637 ;;		_I2C_send_data
  2638 ;; This function uses a non-reentrant model
  2639 ;;
  2640                           
  2641                           
  2642                           ;psect for function _I2C_ack_check
  2643  045B                     _I2C_ack_check:	
  2644                           
  2645                           ;I2C.c: 50: unsigned int i;
  2646                           ;I2C.c: 51: for (i = 0; i < 65535; i++) {
  2647                           
  2648                           ;incstack = 0
  2649                           ; Regs used in _I2C_ack_check: [wreg+status,2]
  2650  045B  01F2               	clrf	I2C_ack_check@i
  2651  045C  01F3               	clrf	I2C_ack_check@i+1
  2652  045D  30FF               	movlw	255
  2653  045E  0673               	xorwf	I2C_ack_check@i+1,w
  2654  045F  1D03               	skipz
  2655  0460  2C63               	goto	u74_25
  2656  0461  30FF               	movlw	255
  2657  0462  0672               	xorwf	I2C_ack_check@i,w
  2658  0463                     u74_25:	
  2659  0463  1903               	btfsc	3,2
  2660  0464  2C79               	goto	i1l1173
  2661  0465                     i1l218:	
  2662                           
  2663                           ;I2C.c: 52: if (SSP1CON2bits.ACKSTAT == 1) {
  2664  0465  0024               	movlb	4	; select bank4
  2665  0466  1F16               	btfss	22,6	;volatile
  2666  0467  2C6D               	goto	i1l1171
  2667                           
  2668                           ;I2C.c: 53: return 1;
  2669  0468  3001               	movlw	1
  2670  0469  00F0               	movwf	?_I2C_ack_check
  2671  046A  3000               	movlw	0
  2672  046B  00F1               	movwf	?_I2C_ack_check+1
  2673  046C  0008               	return
  2674  046D                     i1l1171:	
  2675  046D  3001               	movlw	1
  2676  046E  07F2               	addwf	I2C_ack_check@i,f
  2677  046F  3000               	movlw	0
  2678  0470  3DF3               	addwfc	I2C_ack_check@i+1,f
  2679  0471  30FF               	movlw	255
  2680  0472  0673               	xorwf	I2C_ack_check@i+1,w
  2681  0473  1D03               	skipz
  2682  0474  2C77               	goto	u76_25
  2683  0475  30FF               	movlw	255
  2684  0476  0672               	xorwf	I2C_ack_check@i,w
  2685  0477                     u76_25:	
  2686  0477  1D03               	skipz
  2687  0478  2C65               	goto	i1l218
  2688  0479                     i1l1173:	
  2689                           
  2690                           ;I2C.c: 54: }
  2691                           ;I2C.c: 55: }
  2692                           ;I2C.c: 56: return 0;
  2693  0479  01F0               	clrf	?_I2C_ack_check
  2694  047A  01F1               	clrf	?_I2C_ack_check+1
  2695  047B  0008               	return
  2696  047C                     __end_of_I2C_ack_check:	
  2697                           
  2698                           	psect	text20
  2699  015A                     __ptext20:	
  2700 ;; *************** function _calc *****************
  2701 ;; Defined at:
  2702 ;;		line 21 in file "controller.c"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;  ref             2   39[BANK0 ] int 
  2705 ;;  mes             2   41[BANK0 ] int 
  2706 ;;  output          1   43[BANK0 ] PTR int 
  2707 ;;		 -> interrupt_controller@out(2), 
  2708 ;; Auto vars:     Size  Location     Type
  2709 ;;  res             2   52[BANK0 ] int 
  2710 ;; Return value:  Size  Location     Type
  2711 ;;		None               void
  2712 ;; Registers used:
  2713 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2714 ;; Tracked objects:
  2715 ;;		On entry : 0/0
  2716 ;;		On exit  : 0/0
  2717 ;;		Unchanged: 0/0
  2718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2719 ;;      Params:         0       5       0       0       0       0
  2720 ;;      Locals:         0       8       0       0       0       0
  2721 ;;      Temps:          0       2       0       0       0       0
  2722 ;;      Totals:         0      15       0       0       0       0
  2723 ;;Total ram usage:       15 bytes
  2724 ;; Hardware stack levels used:    1
  2725 ;; Hardware stack levels required when called:    3
  2726 ;; This function calls:
  2727 ;;		_I_calc
  2728 ;;		_P_calc
  2729 ;; This function is called by:
  2730 ;;		_interrupt_controller
  2731 ;; This function uses a non-reentrant model
  2732 ;;
  2733                           
  2734                           
  2735                           ;psect for function _calc
  2736  015A                     _calc:	
  2737                           
  2738                           ;controller.c: 22: int res;
  2739                           ;controller.c: 24: *output = 0;
  2740                           
  2741                           ;incstack = 0
  2742                           ; Regs used in _calc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2743  015A  0020               	movlb	0	; select bank0
  2744  015B  084B               	movf	calc@output,w
  2745  015C  0086               	movwf	6
  2746  015D  0187               	clrf	7
  2747  015E  3000               	movlw	0
  2748  015F  3FC0               	movwi [0]fsr1
  2749  0160  3FC1               	movwi [1]fsr1
  2750                           
  2751                           ;controller.c: 25: res = ref - mes;
  2752  0161  0949               	comf	calc@mes,w
  2753  0162  00CC               	movwf	??_calc
  2754  0163  094A               	comf	calc@mes+1,w
  2755  0164  00CD               	movwf	??_calc+1
  2756  0165  0ACC               	incf	??_calc,f
  2757  0166  1903               	skipnz
  2758  0167  0ACD               	incf	??_calc+1,f
  2759  0168  0847               	movf	calc@ref,w
  2760  0169  074C               	addwf	??_calc,w
  2761  016A  00D4               	movwf	calc@res
  2762  016B  0848               	movf	calc@ref+1,w
  2763  016C  3D4D               	addwfc	??_calc+1,w
  2764  016D  00D5               	movwf	calc@res+1
  2765                           
  2766                           ;controller.c: 26: *output += P_calc(res);
  2767  016E  0855               	movf	calc@res+1,w
  2768  016F  01BF               	clrf	P_calc@res+1
  2769  0170  07BF               	addwf	P_calc@res+1,f
  2770  0171  0854               	movf	calc@res,w
  2771  0172  01BE               	clrf	P_calc@res
  2772  0173  07BE               	addwf	P_calc@res,f
  2773  0174  3183  237F  3181   	fcall	_P_calc
  2774  0177  0020               	movlb	0	; select bank0
  2775  0178  084B               	movf	calc@output,w
  2776  0179  0086               	movwf	6
  2777  017A  0187               	clrf	7
  2778  017B  083E               	movf	?_P_calc,w
  2779  017C  0781               	addwf	1,f
  2780  017D  3141               	addfsr 1,1
  2781  017E  083F               	movf	?_P_calc+1,w
  2782  017F  3D81               	addwfc	1,f
  2783  0180  317F               	addfsr 1,-1
  2784                           
  2785                           ;controller.c: 27: *output += I_calc(res);
  2786  0181  0855               	movf	calc@res+1,w
  2787  0182  01BF               	clrf	I_calc@res+1
  2788  0183  07BF               	addwf	I_calc@res+1,f
  2789  0184  0854               	movf	calc@res,w
  2790  0185  01BE               	clrf	I_calc@res
  2791  0186  07BE               	addwf	I_calc@res,f
  2792  0187  3181  21D4  3181   	fcall	_I_calc
  2793  018A  0020               	movlb	0	; select bank0
  2794  018B  084B               	movf	calc@output,w
  2795  018C  0086               	movwf	6
  2796  018D  0187               	clrf	7
  2797  018E  083E               	movf	?_I_calc,w
  2798  018F  0781               	addwf	1,f
  2799  0190  3141               	addfsr 1,1
  2800  0191  083F               	movf	?_I_calc+1,w
  2801  0192  3D81               	addwfc	1,f
  2802  0193  317F               	addfsr 1,-1
  2803                           
  2804                           ;controller.c: 29: *output = ((((*output>=0) ? (*output) : (0))<=1023) ? (((*output>=0) 
      +                          ? (*output) : (0))) : (1023));
  2805  0194  084B               	movf	calc@output,w
  2806  0195  0086               	movwf	6
  2807  0196  0187               	clrf	7
  2808  0197  3141               	addfsr 1,1
  2809  0198  1F81               	btfss	1,7
  2810  0199  299D               	goto	i1l1421
  2811  019A  01D0               	clrf	_calc$134
  2812  019B  01D1               	clrf	_calc$134+1
  2813  019C  29A4               	goto	i1l1423
  2814  019D                     i1l1421:	
  2815  019D  084B               	movf	calc@output,w
  2816  019E  0086               	movwf	6
  2817  019F  0187               	clrf	7
  2818  01A0  3F40               	moviw [0]fsr1
  2819  01A1  00D0               	movwf	_calc$134
  2820  01A2  3F41               	moviw [1]fsr1
  2821  01A3  00D1               	movwf	_calc$134+1
  2822  01A4                     i1l1423:	
  2823  01A4  0851               	movf	_calc$134+1,w
  2824  01A5  3A80               	xorlw	128
  2825  01A6  00CC               	movwf	??_calc
  2826  01A7  3084               	movlw	132
  2827  01A8  024C               	subwf	??_calc,w
  2828  01A9  1D03               	skipz
  2829  01AA  29AD               	goto	u112_25
  2830  01AB  3000               	movlw	0
  2831  01AC  0250               	subwf	_calc$134,w
  2832  01AD                     u112_25:	
  2833  01AD  1C03               	skipc
  2834  01AE  29B5               	goto	i1l1427
  2835  01AF  30FF               	movlw	255
  2836  01B0  0020               	movlb	0	; select bank0
  2837  01B1  00CE               	movwf	_calc$133
  2838  01B2  3003               	movlw	3
  2839  01B3  00CF               	movwf	_calc$133+1
  2840  01B4  29CC               	goto	i1l1435
  2841  01B5                     i1l1427:	
  2842  01B5  0020               	movlb	0	; select bank0
  2843  01B6  084B               	movf	calc@output,w
  2844  01B7  0086               	movwf	6
  2845  01B8  0187               	clrf	7
  2846  01B9  3141               	addfsr 1,1
  2847  01BA  1F81               	btfss	1,7
  2848  01BB  29BF               	goto	i1l1431
  2849  01BC  01D2               	clrf	_calc$135
  2850  01BD  01D3               	clrf	_calc$135+1
  2851  01BE  29C6               	goto	i1l1433
  2852  01BF                     i1l1431:	
  2853  01BF  084B               	movf	calc@output,w
  2854  01C0  0086               	movwf	6
  2855  01C1  0187               	clrf	7
  2856  01C2  3F40               	moviw [0]fsr1
  2857  01C3  00D2               	movwf	_calc$135
  2858  01C4  3F41               	moviw [1]fsr1
  2859  01C5  00D3               	movwf	_calc$135+1
  2860  01C6                     i1l1433:	
  2861  01C6  0853               	movf	_calc$135+1,w
  2862  01C7  01CF               	clrf	_calc$133+1
  2863  01C8  07CF               	addwf	_calc$133+1,f
  2864  01C9  0852               	movf	_calc$135,w
  2865  01CA  01CE               	clrf	_calc$133
  2866  01CB  07CE               	addwf	_calc$133,f
  2867  01CC                     i1l1435:	
  2868  01CC  084B               	movf	calc@output,w
  2869  01CD  0086               	movwf	6
  2870  01CE  0187               	clrf	7
  2871  01CF  084E               	movf	_calc$133,w
  2872  01D0  3FC0               	movwi [0]fsr1
  2873  01D1  084F               	movf	_calc$133+1,w
  2874  01D2  3FC1               	movwi [1]fsr1
  2875  01D3  0008               	return
  2876  01D4                     __end_of_calc:	
  2877                           
  2878                           	psect	text21
  2879  037F                     __ptext21:	
  2880 ;; *************** function _P_calc *****************
  2881 ;; Defined at:
  2882 ;;		line 33 in file "controller.c"
  2883 ;; Parameters:    Size  Location     Type
  2884 ;;  res             2   30[BANK0 ] int 
  2885 ;; Auto vars:     Size  Location     Type
  2886 ;;  temp            2   32[BANK0 ] int 
  2887 ;; Return value:  Size  Location     Type
  2888 ;;                  2   30[BANK0 ] int 
  2889 ;; Registers used:
  2890 ;;		wreg, status,2, status,0, pclath, cstack
  2891 ;; Tracked objects:
  2892 ;;		On entry : 0/0
  2893 ;;		On exit  : 0/0
  2894 ;;		Unchanged: 0/0
  2895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2896 ;;      Params:         0       2       0       0       0       0
  2897 ;;      Locals:         0       2       0       0       0       0
  2898 ;;      Temps:          0       0       0       0       0       0
  2899 ;;      Totals:         0       4       0       0       0       0
  2900 ;;Total ram usage:        4 bytes
  2901 ;; Hardware stack levels used:    1
  2902 ;; Hardware stack levels required when called:    2
  2903 ;; This function calls:
  2904 ;;		___awtoft
  2905 ;;		___ftmul
  2906 ;;		___fttol
  2907 ;; This function is called by:
  2908 ;;		_calc
  2909 ;; This function uses a non-reentrant model
  2910 ;;
  2911                           
  2912                           
  2913                           ;psect for function _P_calc
  2914  037F                     _P_calc:	
  2915                           
  2916                           ;controller.c: 34: int temp;
  2917                           ;controller.c: 36: temp = (int) (res * 1.0);
  2918                           
  2919                           ;incstack = 0
  2920                           ; Regs used in _P_calc: [wreg+status,2+status,0+pclath+cstack]
  2921  037F  0020               	movlb	0	; select bank0
  2922  0380  083F               	movf	P_calc@res+1,w
  2923  0381  01F9               	clrf	___awtoft@c+1
  2924  0382  07F9               	addwf	___awtoft@c+1,f
  2925  0383  083E               	movf	P_calc@res,w
  2926  0384  01F8               	clrf	___awtoft@c
  2927  0385  07F8               	addwf	___awtoft@c,f
  2928  0386  3184  247C  3183   	fcall	___awtoft
  2929  0389  0878               	movf	?___awtoft,w
  2930  038A  0020               	movlb	0	; select bank0
  2931  038B  00A3               	movwf	___ftmul@f2
  2932  038C  0879               	movf	?___awtoft+1,w
  2933  038D  00A4               	movwf	___ftmul@f2+1
  2934  038E  087A               	movf	?___awtoft+2,w
  2935  038F  00A5               	movwf	___ftmul@f2+2
  2936  0390  3000               	movlw	0
  2937  0391  00A0               	movwf	___ftmul@f1
  2938  0392  3080               	movlw	128
  2939  0393  00A1               	movwf	___ftmul@f1+1
  2940  0394  303F               	movlw	63
  2941  0395  00A2               	movwf	___ftmul@f1+2
  2942  0396  3180  201F  3183   	fcall	___ftmul
  2943  0399  0020               	movlb	0	; select bank0
  2944  039A  0820               	movf	?___ftmul,w
  2945  039B  00B0               	movwf	___fttol@f1
  2946  039C  0821               	movf	?___ftmul+1,w
  2947  039D  00B1               	movwf	___fttol@f1+1
  2948  039E  0822               	movf	?___ftmul+2,w
  2949  039F  00B2               	movwf	___fttol@f1+2
  2950  03A0  3180  20D3         	fcall	___fttol
  2951  03A2  0020               	movlb	0	; select bank0
  2952  03A3  0831               	movf	?___fttol+1,w
  2953  03A4  01C1               	clrf	P_calc@temp+1
  2954  03A5  07C1               	addwf	P_calc@temp+1,f
  2955  03A6  0830               	movf	?___fttol,w
  2956  03A7  01C0               	clrf	P_calc@temp
  2957  03A8  07C0               	addwf	P_calc@temp,f
  2958                           
  2959                           ;controller.c: 37: return temp;
  2960  03A9  0841               	movf	P_calc@temp+1,w
  2961  03AA  01BF               	clrf	?_P_calc+1
  2962  03AB  07BF               	addwf	?_P_calc+1,f
  2963  03AC  0840               	movf	P_calc@temp,w
  2964  03AD  01BE               	clrf	?_P_calc
  2965  03AE  07BE               	addwf	?_P_calc,f
  2966  03AF  0008               	return
  2967  03B0                     __end_of_P_calc:	
  2968                           
  2969                           	psect	text22
  2970  01D4                     __ptext22:	
  2971 ;; *************** function _I_calc *****************
  2972 ;; Defined at:
  2973 ;;		line 40 in file "controller.c"
  2974 ;; Parameters:    Size  Location     Type
  2975 ;;  res             2   30[BANK0 ] int 
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;  temp            2   33[BANK0 ] int 
  2978 ;; Return value:  Size  Location     Type
  2979 ;;                  2   30[BANK0 ] int 
  2980 ;; Registers used:
  2981 ;;		wreg, status,2, status,0, pclath, cstack
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2987 ;;      Params:         0       2       0       0       0       0
  2988 ;;      Locals:         0       6       0       0       0       0
  2989 ;;      Temps:          0       1       0       0       0       0
  2990 ;;      Totals:         0       9       0       0       0       0
  2991 ;;Total ram usage:        9 bytes
  2992 ;; Hardware stack levels used:    1
  2993 ;; Hardware stack levels required when called:    2
  2994 ;; This function calls:
  2995 ;;		___awtoft
  2996 ;;		___ftmul
  2997 ;;		___fttol
  2998 ;; This function is called by:
  2999 ;;		_calc
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           
  3004                           ;psect for function _I_calc
  3005  01D4                     _I_calc:	
  3006                           
  3007                           ;controller.c: 41: int temp;
  3008                           ;controller.c: 42: static int sum = 0;
  3009                           ;controller.c: 44: sum += res;
  3010                           
  3011                           ;incstack = 0
  3012                           ; Regs used in _I_calc: [wreg+status,2+status,0+pclath+cstack]
  3013  01D4  0020               	movlb	0	; select bank0
  3014  01D5  083E               	movf	I_calc@res,w
  3015  01D6  07E0               	addwf	I_calc@sum,f
  3016  01D7  083F               	movf	I_calc@res+1,w
  3017  01D8  3DE1               	addwfc	I_calc@sum+1,f
  3018                           
  3019                           ;controller.c: 45: sum = ((((sum>=0) ? (sum) : (0))<=1023) ? (((sum>=0) ? (sum) : (0))) 
      +                          : (1023));
  3020  01D9  1FE1               	btfss	I_calc@sum+1,7
  3021  01DA  29DE               	goto	i1l1307
  3022  01DB  01C3               	clrf	_I_calc$143
  3023  01DC  01C4               	clrf	_I_calc$143+1
  3024  01DD  29E4               	goto	i1l1309
  3025  01DE                     i1l1307:	
  3026  01DE  0861               	movf	I_calc@sum+1,w
  3027  01DF  01C4               	clrf	_I_calc$143+1
  3028  01E0  07C4               	addwf	_I_calc$143+1,f
  3029  01E1  0860               	movf	I_calc@sum,w
  3030  01E2  01C3               	clrf	_I_calc$143
  3031  01E3  07C3               	addwf	_I_calc$143,f
  3032  01E4                     i1l1309:	
  3033  01E4  0844               	movf	_I_calc$143+1,w
  3034  01E5  3A80               	xorlw	128
  3035  01E6  00C0               	movwf	??_I_calc
  3036  01E7  3084               	movlw	132
  3037  01E8  0240               	subwf	??_I_calc,w
  3038  01E9  1D03               	skipz
  3039  01EA  29ED               	goto	u102_25
  3040  01EB  3000               	movlw	0
  3041  01EC  0243               	subwf	_I_calc$143,w
  3042  01ED                     u102_25:	
  3043  01ED  1C03               	skipc
  3044  01EE  29F5               	goto	i1l108
  3045  01EF  30FF               	movlw	255
  3046  01F0  0020               	movlb	0	; select bank0
  3047  01F1  00E0               	movwf	I_calc@sum
  3048  01F2  3003               	movlw	3
  3049  01F3  00E1               	movwf	I_calc@sum+1
  3050  01F4  2A07               	goto	i1l1317
  3051  01F5                     i1l108:	
  3052  01F5  0020               	movlb	0	; select bank0
  3053  01F6  1FE1               	btfss	I_calc@sum+1,7
  3054  01F7  29FB               	goto	i1l1315
  3055  01F8  01C5               	clrf	_I_calc$144
  3056  01F9  01C6               	clrf	_I_calc$144+1
  3057  01FA  2A01               	goto	i1l118
  3058  01FB                     i1l1315:	
  3059  01FB  0861               	movf	I_calc@sum+1,w
  3060  01FC  01C6               	clrf	_I_calc$144+1
  3061  01FD  07C6               	addwf	_I_calc$144+1,f
  3062  01FE  0860               	movf	I_calc@sum,w
  3063  01FF  01C5               	clrf	_I_calc$144
  3064  0200  07C5               	addwf	_I_calc$144,f
  3065  0201                     i1l118:	
  3066  0201  0846               	movf	_I_calc$144+1,w
  3067  0202  01E1               	clrf	I_calc@sum+1
  3068  0203  07E1               	addwf	I_calc@sum+1,f
  3069  0204  0845               	movf	_I_calc$144,w
  3070  0205  01E0               	clrf	I_calc@sum
  3071  0206  07E0               	addwf	I_calc@sum,f
  3072  0207                     i1l1317:	
  3073                           
  3074                           ;controller.c: 46: temp = (int) (sum * 0.01);
  3075  0207  0861               	movf	I_calc@sum+1,w
  3076  0208  01F9               	clrf	___awtoft@c+1
  3077  0209  07F9               	addwf	___awtoft@c+1,f
  3078  020A  0860               	movf	I_calc@sum,w
  3079  020B  01F8               	clrf	___awtoft@c
  3080  020C  07F8               	addwf	___awtoft@c,f
  3081  020D  3184  247C  3181   	fcall	___awtoft
  3082  0210  0878               	movf	?___awtoft,w
  3083  0211  0020               	movlb	0	; select bank0
  3084  0212  00A3               	movwf	___ftmul@f2
  3085  0213  0879               	movf	?___awtoft+1,w
  3086  0214  00A4               	movwf	___ftmul@f2+1
  3087  0215  087A               	movf	?___awtoft+2,w
  3088  0216  00A5               	movwf	___ftmul@f2+2
  3089  0217  30D7               	movlw	215
  3090  0218  00A0               	movwf	___ftmul@f1
  3091  0219  3023               	movlw	35
  3092  021A  00A1               	movwf	___ftmul@f1+1
  3093  021B  303C               	movlw	60
  3094  021C  00A2               	movwf	___ftmul@f1+2
  3095  021D  3180  201F  3181   	fcall	___ftmul
  3096  0220  0020               	movlb	0	; select bank0
  3097  0221  0820               	movf	?___ftmul,w
  3098  0222  00B0               	movwf	___fttol@f1
  3099  0223  0821               	movf	?___ftmul+1,w
  3100  0224  00B1               	movwf	___fttol@f1+1
  3101  0225  0822               	movf	?___ftmul+2,w
  3102  0226  00B2               	movwf	___fttol@f1+2
  3103  0227  3180  20D3         	fcall	___fttol
  3104  0229  0020               	movlb	0	; select bank0
  3105  022A  0831               	movf	?___fttol+1,w
  3106  022B  01C2               	clrf	I_calc@temp+1
  3107  022C  07C2               	addwf	I_calc@temp+1,f
  3108  022D  0830               	movf	?___fttol,w
  3109  022E  01C1               	clrf	I_calc@temp
  3110  022F  07C1               	addwf	I_calc@temp,f
  3111                           
  3112                           ;controller.c: 47: return temp;
  3113  0230  0842               	movf	I_calc@temp+1,w
  3114  0231  01BF               	clrf	?_I_calc+1
  3115  0232  07BF               	addwf	?_I_calc+1,f
  3116  0233  0841               	movf	I_calc@temp,w
  3117  0234  01BE               	clrf	?_I_calc
  3118  0235  07BE               	addwf	?_I_calc,f
  3119  0236  0008               	return
  3120  0237                     __end_of_I_calc:	
  3121                           
  3122                           	psect	text23
  3123  00D3                     __ptext23:	
  3124 ;; *************** function ___fttol *****************
  3125 ;; Defined at:
  3126 ;;		line 44 in file "C:\isaka\application\compiler\xc\xc8\sources\common\fttol.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;  f1              3   16[BANK0 ] float 
  3129 ;; Auto vars:     Size  Location     Type
  3130 ;;  lval            4   25[BANK0 ] unsigned long 
  3131 ;;  exp1            1   29[BANK0 ] unsigned char 
  3132 ;;  sign1           1   24[BANK0 ] unsigned char 
  3133 ;; Return value:  Size  Location     Type
  3134 ;;                  4   16[BANK0 ] long 
  3135 ;; Registers used:
  3136 ;;		wreg, status,2, status,0
  3137 ;; Tracked objects:
  3138 ;;		On entry : 0/0
  3139 ;;		On exit  : 0/0
  3140 ;;		Unchanged: 0/0
  3141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3142 ;;      Params:         0       4       0       0       0       0
  3143 ;;      Locals:         0       6       0       0       0       0
  3144 ;;      Temps:          0       4       0       0       0       0
  3145 ;;      Totals:         0      14       0       0       0       0
  3146 ;;Total ram usage:       14 bytes
  3147 ;; Hardware stack levels used:    1
  3148 ;; This function calls:
  3149 ;;		Nothing
  3150 ;; This function is called by:
  3151 ;;		_P_calc
  3152 ;;		_I_calc
  3153 ;;		_D_calc
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157                           
  3158                           ;psect for function ___fttol
  3159  00D3                     ___fttol:	
  3160                           
  3161                           ;incstack = 0
  3162                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3163  00D3  0020               	movlb	0	; select bank0
  3164  00D4  0830               	movf	___fttol@f1,w
  3165  00D5  00B4               	movwf	??___fttol
  3166  00D6  0831               	movf	___fttol@f1+1,w
  3167  00D7  00B5               	movwf	??___fttol+1
  3168  00D8  0832               	movf	___fttol@f1+2,w
  3169  00D9  00B6               	movwf	??___fttol+2
  3170  00DA  1003               	clrc
  3171  00DB  0D35               	rlf	??___fttol+1,w
  3172  00DC  0D36               	rlf	??___fttol+2,w
  3173  00DD  00B7               	movwf	??___fttol+3
  3174  00DE  0837               	movf	??___fttol+3,w
  3175  00DF  00BD               	movwf	___fttol@exp1
  3176  00E0  08BD               	movf	___fttol@exp1,f
  3177  00E1  1D03               	skipz
  3178  00E2  28EC               	goto	i1l1245
  3179  00E3  3000               	movlw	0
  3180  00E4  00B3               	movwf	?___fttol+3
  3181  00E5  3000               	movlw	0
  3182  00E6  00B2               	movwf	?___fttol+2
  3183  00E7  3000               	movlw	0
  3184  00E8  00B1               	movwf	?___fttol+1
  3185  00E9  3000               	movlw	0
  3186  00EA  00B0               	movwf	?___fttol
  3187  00EB  0008               	return
  3188  00EC                     i1l1245:	
  3189  00EC  0830               	movf	___fttol@f1,w
  3190  00ED  00B4               	movwf	??___fttol
  3191  00EE  0831               	movf	___fttol@f1+1,w
  3192  00EF  00B5               	movwf	??___fttol+1
  3193  00F0  0832               	movf	___fttol@f1+2,w
  3194  00F1  00B6               	movwf	??___fttol+2
  3195  00F2  3017               	movlw	23
  3196  00F3                     u91_25:	
  3197  00F3  36B6               	lsrf	??___fttol+2,f
  3198  00F4  0CB5               	rrf	??___fttol+1,f
  3199  00F5  0CB4               	rrf	??___fttol,f
  3200  00F6  0B89               	decfsz	9,f
  3201  00F7  28F3               	goto	u91_25
  3202  00F8  0834               	movf	??___fttol,w
  3203  00F9  00B7               	movwf	??___fttol+3
  3204  00FA  0837               	movf	??___fttol+3,w
  3205  00FB  00B8               	movwf	___fttol@sign1
  3206  00FC  17B1               	bsf	___fttol@f1+1,7
  3207  00FD  30FF               	movlw	255
  3208  00FE  05B0               	andwf	___fttol@f1,f
  3209  00FF  30FF               	movlw	255
  3210  0100  05B1               	andwf	___fttol@f1+1,f
  3211  0101  3000               	movlw	0
  3212  0102  05B2               	andwf	___fttol@f1+2,f
  3213  0103  0830               	movf	___fttol@f1,w
  3214  0104  00B9               	movwf	___fttol@lval
  3215  0105  0831               	movf	___fttol@f1+1,w
  3216  0106  00BA               	movwf	___fttol@lval+1
  3217  0107  0832               	movf	___fttol@f1+2,w
  3218  0108  00BB               	movwf	___fttol@lval+2
  3219  0109  01BC               	clrf	___fttol@lval+3
  3220  010A  308E               	movlw	142
  3221  010B  02BD               	subwf	___fttol@exp1,f
  3222  010C  1FBD               	btfss	___fttol@exp1,7
  3223  010D  292A               	goto	i1l1265
  3224  010E  083D               	movf	___fttol@exp1,w
  3225  010F  3A80               	xorlw	128
  3226  0110  3E8F               	addlw	143
  3227  0111  1803               	skipnc
  3228  0112  291C               	goto	i1l1263
  3229  0113  3000               	movlw	0
  3230  0114  00B3               	movwf	?___fttol+3
  3231  0115  3000               	movlw	0
  3232  0116  00B2               	movwf	?___fttol+2
  3233  0117  3000               	movlw	0
  3234  0118  00B1               	movwf	?___fttol+1
  3235  0119  3000               	movlw	0
  3236  011A  00B0               	movwf	?___fttol
  3237  011B  0008               	return
  3238  011C                     i1l1263:	
  3239  011C  3001               	movlw	1
  3240  011D                     u94_25:	
  3241  011D  36BC               	lsrf	___fttol@lval+3,f
  3242  011E  0CBB               	rrf	___fttol@lval+2,f
  3243  011F  0CBA               	rrf	___fttol@lval+1,f
  3244  0120  0CB9               	rrf	___fttol@lval,f
  3245  0121  0B89               	decfsz	9,f
  3246  0122  291D               	goto	u94_25
  3247  0123  3001               	movlw	1
  3248  0124  00B4               	movwf	??___fttol
  3249  0125  0834               	movf	??___fttol,w
  3250  0126  07BD               	addwf	___fttol@exp1,f
  3251  0127  1903               	btfsc	3,2
  3252  0128  2943               	goto	i1l1275
  3253  0129  291C               	goto	i1l1263
  3254  012A                     i1l1265:	
  3255  012A  3018               	movlw	24
  3256  012B  023D               	subwf	___fttol@exp1,w
  3257  012C  1C03               	skipc
  3258  012D  2940               	goto	i1l1273
  3259  012E  3000               	movlw	0
  3260  012F  00B3               	movwf	?___fttol+3
  3261  0130  3000               	movlw	0
  3262  0131  00B2               	movwf	?___fttol+2
  3263  0132  3000               	movlw	0
  3264  0133  00B1               	movwf	?___fttol+1
  3265  0134  3000               	movlw	0
  3266  0135  00B0               	movwf	?___fttol
  3267  0136  0008               	return
  3268  0137                     i1l1271:	
  3269  0137  3001               	movlw	1
  3270  0138                     u97_25:	
  3271  0138  35B9               	lslf	___fttol@lval,f
  3272  0139  0DBA               	rlf	___fttol@lval+1,f
  3273  013A  0DBB               	rlf	___fttol@lval+2,f
  3274  013B  0DBC               	rlf	___fttol@lval+3,f
  3275  013C  0B89               	decfsz	9,f
  3276  013D  2938               	goto	u97_25
  3277  013E  3001               	movlw	1
  3278  013F  02BD               	subwf	___fttol@exp1,f
  3279  0140                     i1l1273:	
  3280  0140  08BD               	movf	___fttol@exp1,f
  3281  0141  1D03               	skipz
  3282  0142  2937               	goto	i1l1271
  3283  0143                     i1l1275:	
  3284  0143  0838               	movf	___fttol@sign1,w
  3285  0144  1903               	btfsc	3,2
  3286  0145  2951               	goto	i1l1279
  3287  0146  09B9               	comf	___fttol@lval,f
  3288  0147  09BA               	comf	___fttol@lval+1,f
  3289  0148  09BB               	comf	___fttol@lval+2,f
  3290  0149  09BC               	comf	___fttol@lval+3,f
  3291  014A  0AB9               	incf	___fttol@lval,f
  3292  014B  1903               	skipnz
  3293  014C  0ABA               	incf	___fttol@lval+1,f
  3294  014D  1903               	skipnz
  3295  014E  0ABB               	incf	___fttol@lval+2,f
  3296  014F  1903               	skipnz
  3297  0150  0ABC               	incf	___fttol@lval+3,f
  3298  0151                     i1l1279:	
  3299  0151  083C               	movf	___fttol@lval+3,w
  3300  0152  00B3               	movwf	?___fttol+3
  3301  0153  083B               	movf	___fttol@lval+2,w
  3302  0154  00B2               	movwf	?___fttol+2
  3303  0155  083A               	movf	___fttol@lval+1,w
  3304  0156  00B1               	movwf	?___fttol+1
  3305  0157  0839               	movf	___fttol@lval,w
  3306  0158  00B0               	movwf	?___fttol
  3307  0159  0008               	return
  3308  015A                     __end_of___fttol:	
  3309                           
  3310                           	psect	text24
  3311  001F                     __ptext24:	
  3312 ;; *************** function ___ftmul *****************
  3313 ;; Defined at:
  3314 ;;		line 62 in file "C:\isaka\application\compiler\xc\xc8\sources\common\ftmul.c"
  3315 ;; Parameters:    Size  Location     Type
  3316 ;;  f1              3    0[BANK0 ] float 
  3317 ;;  f2              3    3[BANK0 ] float 
  3318 ;; Auto vars:     Size  Location     Type
  3319 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  3320 ;;  sign            1   15[BANK0 ] unsigned char 
  3321 ;;  cntr            1   14[BANK0 ] unsigned char 
  3322 ;;  exp             1   10[BANK0 ] unsigned char 
  3323 ;; Return value:  Size  Location     Type
  3324 ;;                  3    0[BANK0 ] float 
  3325 ;; Registers used:
  3326 ;;		wreg, status,2, status,0, pclath, cstack
  3327 ;; Tracked objects:
  3328 ;;		On entry : 0/0
  3329 ;;		On exit  : 0/0
  3330 ;;		Unchanged: 0/0
  3331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3332 ;;      Params:         0       6       0       0       0       0
  3333 ;;      Locals:         0       6       0       0       0       0
  3334 ;;      Temps:          0       4       0       0       0       0
  3335 ;;      Totals:         0      16       0       0       0       0
  3336 ;;Total ram usage:       16 bytes
  3337 ;; Hardware stack levels used:    1
  3338 ;; Hardware stack levels required when called:    1
  3339 ;; This function calls:
  3340 ;;		___ftpack
  3341 ;; This function is called by:
  3342 ;;		_P_calc
  3343 ;;		_I_calc
  3344 ;;		_D_calc
  3345 ;; This function uses a non-reentrant model
  3346 ;;
  3347                           
  3348                           
  3349                           ;psect for function ___ftmul
  3350  001F                     ___ftmul:	
  3351                           
  3352                           ;incstack = 0
  3353                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3354  001F  0020               	movlb	0	; select bank0
  3355  0020  0820               	movf	___ftmul@f1,w
  3356  0021  00A6               	movwf	??___ftmul
  3357  0022  0821               	movf	___ftmul@f1+1,w
  3358  0023  00A7               	movwf	??___ftmul+1
  3359  0024  0822               	movf	___ftmul@f1+2,w
  3360  0025  00A8               	movwf	??___ftmul+2
  3361  0026  1003               	clrc
  3362  0027  0D27               	rlf	??___ftmul+1,w
  3363  0028  0D28               	rlf	??___ftmul+2,w
  3364  0029  00A9               	movwf	??___ftmul+3
  3365  002A  0829               	movf	??___ftmul+3,w
  3366  002B  00AA               	movwf	___ftmul@exp
  3367  002C  08AA               	movf	___ftmul@exp,f
  3368  002D  1D03               	skipz
  3369  002E  2836               	goto	i1l1195
  3370  002F  3000               	movlw	0
  3371  0030  00A0               	movwf	?___ftmul
  3372  0031  3000               	movlw	0
  3373  0032  00A1               	movwf	?___ftmul+1
  3374  0033  3000               	movlw	0
  3375  0034  00A2               	movwf	?___ftmul+2
  3376  0035  0008               	return
  3377  0036                     i1l1195:	
  3378  0036  0823               	movf	___ftmul@f2,w
  3379  0037  00A6               	movwf	??___ftmul
  3380  0038  0824               	movf	___ftmul@f2+1,w
  3381  0039  00A7               	movwf	??___ftmul+1
  3382  003A  0825               	movf	___ftmul@f2+2,w
  3383  003B  00A8               	movwf	??___ftmul+2
  3384  003C  1003               	clrc
  3385  003D  0D27               	rlf	??___ftmul+1,w
  3386  003E  0D28               	rlf	??___ftmul+2,w
  3387  003F  00A9               	movwf	??___ftmul+3
  3388  0040  0829               	movf	??___ftmul+3,w
  3389  0041  00AF               	movwf	___ftmul@sign
  3390  0042  08AF               	movf	___ftmul@sign,f
  3391  0043  1D03               	skipz
  3392  0044  284C               	goto	i1l1201
  3393  0045  3000               	movlw	0
  3394  0046  00A0               	movwf	?___ftmul
  3395  0047  3000               	movlw	0
  3396  0048  00A1               	movwf	?___ftmul+1
  3397  0049  3000               	movlw	0
  3398  004A  00A2               	movwf	?___ftmul+2
  3399  004B  0008               	return
  3400  004C                     i1l1201:	
  3401  004C  082F               	movf	___ftmul@sign,w
  3402  004D  3E7B               	addlw	123
  3403  004E  00A6               	movwf	??___ftmul
  3404  004F  0826               	movf	??___ftmul,w
  3405  0050  07AA               	addwf	___ftmul@exp,f
  3406  0051  0820               	movf	___ftmul@f1,w
  3407  0052  00A6               	movwf	??___ftmul
  3408  0053  0821               	movf	___ftmul@f1+1,w
  3409  0054  00A7               	movwf	??___ftmul+1
  3410  0055  0822               	movf	___ftmul@f1+2,w
  3411  0056  00A8               	movwf	??___ftmul+2
  3412  0057  3010               	movlw	16
  3413  0058                     u80_25:	
  3414  0058  36A8               	lsrf	??___ftmul+2,f
  3415  0059  0CA7               	rrf	??___ftmul+1,f
  3416  005A  0CA6               	rrf	??___ftmul,f
  3417  005B  0B89               	decfsz	9,f
  3418  005C  2858               	goto	u80_25
  3419  005D  0826               	movf	??___ftmul,w
  3420  005E  00A9               	movwf	??___ftmul+3
  3421  005F  0829               	movf	??___ftmul+3,w
  3422  0060  00AF               	movwf	___ftmul@sign
  3423  0061  0823               	movf	___ftmul@f2,w
  3424  0062  00A6               	movwf	??___ftmul
  3425  0063  0824               	movf	___ftmul@f2+1,w
  3426  0064  00A7               	movwf	??___ftmul+1
  3427  0065  0825               	movf	___ftmul@f2+2,w
  3428  0066  00A8               	movwf	??___ftmul+2
  3429  0067  3010               	movlw	16
  3430  0068                     u81_25:	
  3431  0068  36A8               	lsrf	??___ftmul+2,f
  3432  0069  0CA7               	rrf	??___ftmul+1,f
  3433  006A  0CA6               	rrf	??___ftmul,f
  3434  006B  0B89               	decfsz	9,f
  3435  006C  2868               	goto	u81_25
  3436  006D  0826               	movf	??___ftmul,w
  3437  006E  00A9               	movwf	??___ftmul+3
  3438  006F  0829               	movf	??___ftmul+3,w
  3439  0070  06AF               	xorwf	___ftmul@sign,f
  3440  0071  3080               	movlw	128
  3441  0072  00A6               	movwf	??___ftmul
  3442  0073  0826               	movf	??___ftmul,w
  3443  0074  05AF               	andwf	___ftmul@sign,f
  3444  0075  17A1               	bsf	___ftmul@f1+1,7
  3445  0076  17A4               	bsf	___ftmul@f2+1,7
  3446  0077  30FF               	movlw	255
  3447  0078  05A3               	andwf	___ftmul@f2,f
  3448  0079  30FF               	movlw	255
  3449  007A  05A4               	andwf	___ftmul@f2+1,f
  3450  007B  3000               	movlw	0
  3451  007C  05A5               	andwf	___ftmul@f2+2,f
  3452  007D  3000               	movlw	0
  3453  007E  00AB               	movwf	___ftmul@f3_as_product
  3454  007F  3000               	movlw	0
  3455  0080  00AC               	movwf	___ftmul@f3_as_product+1
  3456  0081  3000               	movlw	0
  3457  0082  00AD               	movwf	___ftmul@f3_as_product+2
  3458  0083  3007               	movlw	7
  3459  0084  00A6               	movwf	??___ftmul
  3460  0085  0826               	movf	??___ftmul,w
  3461  0086  00AE               	movwf	___ftmul@cntr
  3462  0087                     i1l1213:	
  3463  0087  1C20               	btfss	___ftmul@f1,0
  3464  0088  288F               	goto	i1l1217
  3465  0089  0823               	movf	___ftmul@f2,w
  3466  008A  07AB               	addwf	___ftmul@f3_as_product,f
  3467  008B  0824               	movf	___ftmul@f2+1,w
  3468  008C  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  3469  008D  0825               	movf	___ftmul@f2+2,w
  3470  008E  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  3471  008F                     i1l1217:	
  3472  008F  3001               	movlw	1
  3473  0090                     u83_25:	
  3474  0090  36A2               	lsrf	___ftmul@f1+2,f
  3475  0091  0CA1               	rrf	___ftmul@f1+1,f
  3476  0092  0CA0               	rrf	___ftmul@f1,f
  3477  0093  0B89               	decfsz	9,f
  3478  0094  2890               	goto	u83_25
  3479  0095  3001               	movlw	1
  3480  0096                     u84_25:	
  3481  0096  35A3               	lslf	___ftmul@f2,f
  3482  0097  0DA4               	rlf	___ftmul@f2+1,f
  3483  0098  0DA5               	rlf	___ftmul@f2+2,f
  3484  0099  0B89               	decfsz	9,f
  3485  009A  2896               	goto	u84_25
  3486  009B  3001               	movlw	1
  3487  009C  02AE               	subwf	___ftmul@cntr,f
  3488  009D  1D03               	btfss	3,2
  3489  009E  2887               	goto	i1l1213
  3490  009F  3009               	movlw	9
  3491  00A0  00A6               	movwf	??___ftmul
  3492  00A1  0826               	movf	??___ftmul,w
  3493  00A2  00AE               	movwf	___ftmul@cntr
  3494  00A3                     i1l1225:	
  3495  00A3  1C20               	btfss	___ftmul@f1,0
  3496  00A4  28AB               	goto	i1l1229
  3497  00A5  0823               	movf	___ftmul@f2,w
  3498  00A6  07AB               	addwf	___ftmul@f3_as_product,f
  3499  00A7  0824               	movf	___ftmul@f2+1,w
  3500  00A8  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  3501  00A9  0825               	movf	___ftmul@f2+2,w
  3502  00AA  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  3503  00AB                     i1l1229:	
  3504  00AB  3001               	movlw	1
  3505  00AC                     u87_25:	
  3506  00AC  36A2               	lsrf	___ftmul@f1+2,f
  3507  00AD  0CA1               	rrf	___ftmul@f1+1,f
  3508  00AE  0CA0               	rrf	___ftmul@f1,f
  3509  00AF  0B89               	decfsz	9,f
  3510  00B0  28AC               	goto	u87_25
  3511  00B1  3001               	movlw	1
  3512  00B2                     u88_25:	
  3513  00B2  36AD               	lsrf	___ftmul@f3_as_product+2,f
  3514  00B3  0CAC               	rrf	___ftmul@f3_as_product+1,f
  3515  00B4  0CAB               	rrf	___ftmul@f3_as_product,f
  3516  00B5  0B89               	decfsz	9,f
  3517  00B6  28B2               	goto	u88_25
  3518  00B7  3001               	movlw	1
  3519  00B8  02AE               	subwf	___ftmul@cntr,f
  3520  00B9  1D03               	btfss	3,2
  3521  00BA  28A3               	goto	i1l1225
  3522  00BB  082B               	movf	___ftmul@f3_as_product,w
  3523  00BC  00F0               	movwf	___ftpack@arg
  3524  00BD  082C               	movf	___ftmul@f3_as_product+1,w
  3525  00BE  00F1               	movwf	___ftpack@arg+1
  3526  00BF  082D               	movf	___ftmul@f3_as_product+2,w
  3527  00C0  00F2               	movwf	___ftpack@arg+2
  3528  00C1  082A               	movf	___ftmul@exp,w
  3529  00C2  00A6               	movwf	??___ftmul
  3530  00C3  0826               	movf	??___ftmul,w
  3531  00C4  00F3               	movwf	___ftpack@exp
  3532  00C5  082F               	movf	___ftmul@sign,w
  3533  00C6  00A7               	movwf	??___ftmul+1
  3534  00C7  0827               	movf	??___ftmul+1,w
  3535  00C8  00F4               	movwf	___ftpack@sign
  3536  00C9  3182  2237         	fcall	___ftpack
  3537  00CB  0870               	movf	?___ftpack,w
  3538  00CC  0020               	movlb	0	; select bank0
  3539  00CD  00A0               	movwf	?___ftmul
  3540  00CE  0871               	movf	?___ftpack+1,w
  3541  00CF  00A1               	movwf	?___ftmul+1
  3542  00D0  0872               	movf	?___ftpack+2,w
  3543  00D1  00A2               	movwf	?___ftmul+2
  3544  00D2  0008               	return
  3545  00D3                     __end_of___ftmul:	
  3546                           
  3547                           	psect	text25
  3548  047C                     __ptext25:	
  3549 ;; *************** function ___awtoft *****************
  3550 ;; Defined at:
  3551 ;;		line 32 in file "C:\isaka\application\compiler\xc\xc8\sources\common\awtoft.c"
  3552 ;; Parameters:    Size  Location     Type
  3553 ;;  c               2    8[COMMON] int 
  3554 ;; Auto vars:     Size  Location     Type
  3555 ;;  sign            1   13[COMMON] unsigned char 
  3556 ;; Return value:  Size  Location     Type
  3557 ;;                  3    8[COMMON] float 
  3558 ;; Registers used:
  3559 ;;		wreg, status,2, status,0, pclath, cstack
  3560 ;; Tracked objects:
  3561 ;;		On entry : 0/0
  3562 ;;		On exit  : 0/0
  3563 ;;		Unchanged: 0/0
  3564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3565 ;;      Params:         3       0       0       0       0       0
  3566 ;;      Locals:         1       0       0       0       0       0
  3567 ;;      Temps:          2       0       0       0       0       0
  3568 ;;      Totals:         6       0       0       0       0       0
  3569 ;;Total ram usage:        6 bytes
  3570 ;; Hardware stack levels used:    1
  3571 ;; Hardware stack levels required when called:    1
  3572 ;; This function calls:
  3573 ;;		___ftpack
  3574 ;; This function is called by:
  3575 ;;		_P_calc
  3576 ;;		_I_calc
  3577 ;;		_D_calc
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           
  3581                           
  3582                           ;psect for function ___awtoft
  3583  047C                     ___awtoft:	
  3584                           
  3585                           ;incstack = 0
  3586                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  3587  047C  01FD               	clrf	___awtoft@sign
  3588  047D  1FF9               	btfss	___awtoft@c+1,7
  3589  047E  2C86               	goto	i1l1185
  3590  047F  09F8               	comf	___awtoft@c,f
  3591  0480  09F9               	comf	___awtoft@c+1,f
  3592  0481  0AF8               	incf	___awtoft@c,f
  3593  0482  1903               	skipnz
  3594  0483  0AF9               	incf	___awtoft@c+1,f
  3595  0484  01FD               	clrf	___awtoft@sign
  3596  0485  0AFD               	incf	___awtoft@sign,f
  3597  0486                     i1l1185:	
  3598  0486  0878               	movf	___awtoft@c,w
  3599  0487  00F0               	movwf	___ftpack@arg
  3600  0488  0879               	movf	___awtoft@c+1,w
  3601  0489  00F1               	movwf	___ftpack@arg+1
  3602  048A  01F2               	clrf	___ftpack@arg+2
  3603  048B  308E               	movlw	142
  3604  048C  00FB               	movwf	??___awtoft
  3605  048D  087B               	movf	??___awtoft,w
  3606  048E  00F3               	movwf	___ftpack@exp
  3607  048F  087D               	movf	___awtoft@sign,w
  3608  0490  00FC               	movwf	??___awtoft+1
  3609  0491  087C               	movf	??___awtoft+1,w
  3610  0492  00F4               	movwf	___ftpack@sign
  3611  0493  3182  2237         	fcall	___ftpack
  3612  0495  0870               	movf	?___ftpack,w
  3613  0496  00F8               	movwf	?___awtoft
  3614  0497  0871               	movf	?___ftpack+1,w
  3615  0498  00F9               	movwf	?___awtoft+1
  3616  0499  0872               	movf	?___ftpack+2,w
  3617  049A  00FA               	movwf	?___awtoft+2
  3618  049B  0008               	return
  3619  049C                     __end_of___awtoft:	
  3620                           
  3621                           	psect	text26
  3622  0237                     __ptext26:	
  3623 ;; *************** function ___ftpack *****************
  3624 ;; Defined at:
  3625 ;;		line 62 in file "C:\isaka\application\compiler\xc\xc8\sources\common\float.c"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;  arg             3    0[COMMON] unsigned um
  3628 ;;  exp             1    3[COMMON] unsigned char 
  3629 ;;  sign            1    4[COMMON] unsigned char 
  3630 ;; Auto vars:     Size  Location     Type
  3631 ;;		None
  3632 ;; Return value:  Size  Location     Type
  3633 ;;                  3    0[COMMON] float 
  3634 ;; Registers used:
  3635 ;;		wreg, status,2, status,0
  3636 ;; Tracked objects:
  3637 ;;		On entry : 0/0
  3638 ;;		On exit  : 0/0
  3639 ;;		Unchanged: 0/0
  3640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3641 ;;      Params:         5       0       0       0       0       0
  3642 ;;      Locals:         0       0       0       0       0       0
  3643 ;;      Temps:          3       0       0       0       0       0
  3644 ;;      Totals:         8       0       0       0       0       0
  3645 ;;Total ram usage:        8 bytes
  3646 ;; Hardware stack levels used:    1
  3647 ;; This function calls:
  3648 ;;		Nothing
  3649 ;; This function is called by:
  3650 ;;		___awtoft
  3651 ;;		___ftmul
  3652 ;; This function uses a non-reentrant model
  3653 ;;
  3654                           
  3655                           
  3656                           ;psect for function ___ftpack
  3657  0237                     ___ftpack:	
  3658                           
  3659                           ;incstack = 0
  3660                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3661  0237  0873               	movf	___ftpack@exp,w
  3662  0238  1903               	btfsc	3,2
  3663  0239  2A3F               	goto	i1l1131
  3664  023A  0872               	movf	___ftpack@arg+2,w
  3665  023B  0471               	iorwf	___ftpack@arg+1,w
  3666  023C  0470               	iorwf	___ftpack@arg,w
  3667  023D  1D03               	skipz
  3668  023E  2A50               	goto	i1l1137
  3669  023F                     i1l1131:	
  3670  023F  3000               	movlw	0
  3671  0240  00F0               	movwf	?___ftpack
  3672  0241  3000               	movlw	0
  3673  0242  00F1               	movwf	?___ftpack+1
  3674  0243  3000               	movlw	0
  3675  0244  00F2               	movwf	?___ftpack+2
  3676  0245  0008               	return
  3677  0246                     i1l1135:	
  3678  0246  3001               	movlw	1
  3679  0247  00F5               	movwf	??___ftpack
  3680  0248  0875               	movf	??___ftpack,w
  3681  0249  07F3               	addwf	___ftpack@exp,f
  3682  024A  3001               	movlw	1
  3683  024B                     u64_25:	
  3684  024B  36F2               	lsrf	___ftpack@arg+2,f
  3685  024C  0CF1               	rrf	___ftpack@arg+1,f
  3686  024D  0CF0               	rrf	___ftpack@arg,f
  3687  024E  0B89               	decfsz	9,f
  3688  024F  2A4B               	goto	u64_25
  3689  0250                     i1l1137:	
  3690  0250  30FE               	movlw	254
  3691  0251  0572               	andwf	___ftpack@arg+2,w
  3692  0252  1903               	btfsc	3,2
  3693  0253  2A69               	goto	i1l499
  3694  0254  2A46               	goto	i1l1135
  3695  0255                     i1l1139:	
  3696  0255  3001               	movlw	1
  3697  0256  00F5               	movwf	??___ftpack
  3698  0257  0875               	movf	??___ftpack,w
  3699  0258  07F3               	addwf	___ftpack@exp,f
  3700  0259  3001               	movlw	1
  3701  025A  07F0               	addwf	___ftpack@arg,f
  3702  025B  3000               	movlw	0
  3703  025C  1803               	skipnc
  3704  025D  3001               	movlw	1
  3705  025E  07F1               	addwf	___ftpack@arg+1,f
  3706  025F  3000               	movlw	0
  3707  0260  1803               	skipnc
  3708  0261  3001               	movlw	1
  3709  0262  07F2               	addwf	___ftpack@arg+2,f
  3710  0263  3001               	movlw	1
  3711  0264                     u66_25:	
  3712  0264  36F2               	lsrf	___ftpack@arg+2,f
  3713  0265  0CF1               	rrf	___ftpack@arg+1,f
  3714  0266  0CF0               	rrf	___ftpack@arg,f
  3715  0267  0B89               	decfsz	9,f
  3716  0268  2A64               	goto	u66_25
  3717  0269                     i1l499:	
  3718  0269  30FF               	movlw	255
  3719  026A  0572               	andwf	___ftpack@arg+2,w
  3720  026B  1903               	btfsc	3,2
  3721  026C  2A76               	goto	i1l1147
  3722  026D  2A55               	goto	i1l1139
  3723  026E                     i1l1145:	
  3724  026E  3001               	movlw	1
  3725  026F  02F3               	subwf	___ftpack@exp,f
  3726  0270  3001               	movlw	1
  3727  0271                     u68_25:	
  3728  0271  35F0               	lslf	___ftpack@arg,f
  3729  0272  0DF1               	rlf	___ftpack@arg+1,f
  3730  0273  0DF2               	rlf	___ftpack@arg+2,f
  3731  0274  0B89               	decfsz	9,f
  3732  0275  2A71               	goto	u68_25
  3733  0276                     i1l1147:	
  3734  0276  1FF1               	btfss	___ftpack@arg+1,7
  3735  0277  2A6E               	goto	i1l1145
  3736  0278  1873               	btfsc	___ftpack@exp,0
  3737  0279  2A80               	goto	i1l505
  3738  027A  30FF               	movlw	255
  3739  027B  05F0               	andwf	___ftpack@arg,f
  3740  027C  307F               	movlw	127
  3741  027D  05F1               	andwf	___ftpack@arg+1,f
  3742  027E  30FF               	movlw	255
  3743  027F  05F2               	andwf	___ftpack@arg+2,f
  3744  0280                     i1l505:	
  3745  0280  1003               	clrc
  3746  0281  0CF3               	rrf	___ftpack@exp,f
  3747  0282  0873               	movf	___ftpack@exp,w
  3748  0283  00F5               	movwf	??___ftpack
  3749  0284  01F6               	clrf	??___ftpack+1
  3750  0285  01F7               	clrf	??___ftpack+2
  3751  0286  3010               	movlw	16
  3752  0287                     u71_25:	
  3753  0287  35F5               	lslf	??___ftpack,f
  3754  0288  0DF6               	rlf	??___ftpack+1,f
  3755  0289  0DF7               	rlf	??___ftpack+2,f
  3756  028A  0B89               	decfsz	9,f
  3757  028B  2A87               	goto	u71_25
  3758  028C  0875               	movf	??___ftpack,w
  3759  028D  04F0               	iorwf	___ftpack@arg,f
  3760  028E  0876               	movf	??___ftpack+1,w
  3761  028F  04F1               	iorwf	___ftpack@arg+1,f
  3762  0290  0877               	movf	??___ftpack+2,w
  3763  0291  04F2               	iorwf	___ftpack@arg+2,f
  3764  0292  0874               	movf	___ftpack@sign,w
  3765  0293  1903               	btfsc	3,2
  3766  0294  0008               	return
  3767  0295  17F2               	bsf	___ftpack@arg+2,7
  3768  0296  0008               	return
  3769  0297                     __end_of___ftpack:	
  3770  007E                     btemp	set	126	;btemp
  3771  007E                     pic14e$flags	set	126
  3772  007E                     wtemp	set	126
  3773  007E                     wtemp0	set	126
  3774  0080                     wtemp1	set	128
  3775  0082                     wtemp2	set	130
  3776  0084                     wtemp3	set	132
  3777  0086                     wtemp4	set	134
  3778  0088                     wtemp5	set	136
  3779  007F                     wtemp6	set	127
  3780  007E                     ttemp	set	126
  3781  007E                     ttemp0	set	126
  3782  0081                     ttemp1	set	129
  3783  0084                     ttemp2	set	132
  3784  0087                     ttemp3	set	135
  3785  007F                     ttemp4	set	127
  3786  007E                     ltemp	set	126
  3787  007E                     ltemp0	set	126
  3788  0082                     ltemp1	set	130
  3789  0086                     ltemp2	set	134
  3790  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     62      71
    BANK1            80     10      10
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    I2C_slave_interrupt@data_ptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_send_data@data	PTR unsigned char  size(1) Largest target is 1
		 -> call_send@send_data(BANK0[1]), interrupt_I2C@send_data(COMMON[1]), 

    calc@output	PTR int  size(1) Largest target is 2
		 -> interrupt_controller@out(BANK0[2]), 

    measure@value	PTR int  size(1) Largest target is 2
		 -> interrupt_controller@volume(BANK0[2]), interrupt_controller@current(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _inter in COMMON

    _interrupt_controller->_call_send
    _interrupt_controller->_current_conversion
    _interrupt_controller->_measure
    _measure->_adconv
    _current_conversion->___lmul
    _call_send->_I2C_send_data
    _I2C_send_data->_I2C_ack_check
    _P_calc->___awtoft
    _I_calc->___awtoft
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _inter in BANK0

    _inter->_interrupt_controller
    _interrupt_controller->_calc
    _calc->_I_calc
    _P_calc->___fttol
    _I_calc->___fttol
    ___fttol->___ftmul

Critical Paths under _main in BANK1

    _main->_init
    _init->_init_adcon

Critical Paths under _inter in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _inter in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _inter in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _inter in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4     218
                                              6 BANK1      4     0      4
                               _init
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0     218
                                              4 BANK1      2     2      0
                    _init_I2C_master
                           _init_PWM
                         _init_adcon
 ---------------------------------------------------------------------------------
 (2) _init_adcon                                           4     0      4     172
                                              0 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (2) _init_PWM                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_I2C_master                                      0     0      0       0
                        _init_Timer4
 ---------------------------------------------------------------------------------
 (3) _init_Timer4                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _inter                                                1     1      0   13213
                                             61 BANK0      1     1      0
               _interrupt_controller
 ---------------------------------------------------------------------------------
 (5) _interrupt_controller                                 7     7      0   13213
                                             54 BANK0      7     7      0
                               _calc
                          _call_send
                 _current_conversion
                            _measure
                             _output
                  _set_current_limit
 ---------------------------------------------------------------------------------
 (6) _set_current_limit                                    2     0      2      86
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _output                                               4     2      2     108
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (6) _measure                                              3     1      2     380
                                             11 COMMON     3     1      2
                             _adconv
 ---------------------------------------------------------------------------------
 (7) _adconv                                              11     9      2     132
                                              0 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (6) _current_conversion                                   9     7      2     457
                                             12 COMMON     2     0      2
                                              0 BANK0      7     7      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) ___lmul                                              12     4      8     348
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (6) _call_send                                            6     6      0     440
                                             11 COMMON     3     3      0
                                              0 BANK0      3     3      0
                      _I2C_send_data
                  _get_current_limit
 ---------------------------------------------------------------------------------
 (7) _get_current_limit                                    2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _I2C_send_data                                        7     4      3     393
                                              4 COMMON     7     4      3
                      _I2C_ack_check
                     _I2C_idle_check
 ---------------------------------------------------------------------------------
 (8) _I2C_idle_check                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _I2C_ack_check                                        4     2      2      46
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (6) _calc                                                15    10      5   11549
                                             39 BANK0     15    10      5
                             _I_calc
                             _P_calc
 ---------------------------------------------------------------------------------
 (7) _P_calc                                               4     2      2    5486
                                             30 BANK0      4     2      2
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (7) _I_calc                                               9     7      2    5534
                                             30 BANK0      9     7      2
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (8) ___fttol                                             14    10      4     444
                                             16 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___ftmul                                             16    10      6    2680
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (8) ___awtoft                                             6     3      3    2253
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (9) ___ftpack                                             8     3      5    1970
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _init_I2C_master
       _init_Timer4
     _init_PWM
     _init_adcon
   _loop

 _inter (ROOT)
   _interrupt_controller
     _calc
       _I_calc
         ___awtoft
           ___ftpack
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
       _P_calc
         ___awtoft
           ___ftpack
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
     _call_send
       _I2C_send_data
         _I2C_ack_check
         _I2C_idle_check
       _get_current_limit
     _current_conversion
       ___lmul
     _measure
       _adconv
     _output
     _set_current_limit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      5F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     3E      47       6       88.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      A       A       8       12.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      5F      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Sun Apr 23 18:19:43 2017

              _current_conversion 0297                  ??_I2C_idle_check 0070                       __CFG_CP$OFF 0000  
                              l38 03F6               ?_current_conversion 007C                               _GIE 005F  
                             _RB3 006B                               _PR2 001B                               _PR4 0416  
                    __CFG_CPD$OFF 0000                      __CFG_BORV$HI 0000                               wreg 0009  
                      _I_calc$143 0043                        _I_calc$144 0045                      __CFG_LVP$OFF 0000  
                            l1465 03EE                              l1489 051D                              _PEIE 005E  
                            _TMR2 001A                              _TMR4 0415                      __CFG_WRT$OFF 0000  
                            _calc 015A                              _main 051A                      ___ftpack@arg 0070  
                            _init 03DF              ??_current_conversion 0020                              _loop 0521  
                    ___ftpack@exp 0073                              fsr1h 0007                              indf1 0001  
                            fsr1l 0006                              btemp 007E                     __CFG_BOREN$ON 0000  
                            ltemp 007E        __size_of_get_current_limit 0008        __size_of_set_current_limit 0008  
                            start 0010                              ttemp 007E                              wtemp 007E  
                   __CFG_IESO$OFF 0000                      ___ftmul@cntr 002E                      ___ftmul@sign 002F  
                    ___fttol@exp1 003D                      ___fttol@lval 0039                      ?_init_Timer4 0070  
                           ?_calc 0047                             ?_main 00A6                             ?_init 0070  
                           ?_loop 0070                     __CFG_WDTE$OFF 0000     __size_of_interrupt_controller 0050  
                 __end_of___ftmul 00D3                   __end_of___fttol 015A                             _T2CON 001C  
                           _T4CON 0417                             i1l108 01F5                             i1l118 0201  
                           i1l218 0465                             i1l226 0355                             i1l162 0413  
                           i1l505 0280                             i1l499 0269                             _PORTA 000C  
                           _PORTB 000D                             u71_25 0287                             u64_25 024B  
                           u80_25 0058                             _TRISA 008C                             _TRISB 008D  
                           u81_25 0068                             u66_25 0264                             u74_25 0463  
                           u83_25 0090                             u91_25 00F3                             u68_25 0271  
                           u84_25 0096                             u76_25 0477                             u94_25 011D  
                           u87_25 00AC                             u88_25 00B2                             u97_25 0138  
             ___lmul@multiplicand 0074                     __CFG_PWRTE$ON 0000                    __CFG_FCMEN$OFF 0000  
                   ___awtoft@sign 007D                   __end_of_measure 04D7                             _inter 0004  
                   ___ftpack@sign 0074                             init@i 00A5                             ltemp0 007E  
                           ltemp1 0082                             ltemp2 0086                             ltemp3 0080  
                           ttemp0 007E                             ttemp1 0081                             ttemp2 0084  
                           ttemp3 0087                             ttemp4 007F                             status 0003  
                           wtemp0 007E                             wtemp1 0080                             wtemp2 0082  
                           wtemp3 0084                             wtemp4 0086                             wtemp5 0088  
                           wtemp6 007F                    __CFG_MCLRE$OFF 0000                   __initialization 0012  
                    __end_of_calc 01D4                      __end_of_main 0521                      __end_of_init 040C  
                    __end_of_loop 0522                            ??_calc 004C                            ??_main 00AA  
                   ___fttol@sign1 0038                            ??_init 00A4                            ??_loop 00A0  
                  __CFG_PLLEN$OFF 0000                            _BCL1IE 0493                            _BCL1IF 0093  
                          _ADCON0 009D                            _ADCON1 009E                            ?_inter 0070  
                          _ADRESH 009C                            _ADRESL 009B                            _CCPR3H 0312  
                          _CCPR3L 0311         current_conversion@current 0025                  __end_of___awtoft 049C  
                          _ANSELA 018C                            _ANSELB 018D                  __end_of___ftpack 0297  
                   call_send@data 0020            __size_of_I2C_ack_check 0021                            i1l1201 004C  
                          i1l1131 023F                            i1l1213 0087                            u102_25 01ED  
                          i1l1135 0246                            i1l1145 026E                            i1l1137 0250  
                          i1l1225 00A3                            i1l1217 008F                            i1l1147 0276  
                          i1l1139 0255                            i1l1315 01FB                            i1l1307 01DE  
                          i1l1171 046D                            i1l1229 00AB                            i1l1245 00EC  
                          i1l1317 0207                            i1l1309 01E4                            i1l1421 019D  
                          i1l1173 0479                            i1l1271 0137                            i1l1263 011C  
                          i1l1431 01BF                            i1l1423 01A4                            i1l1159 0500  
                          i1l1185 0486                            i1l1273 0140                            i1l1265 012A  
                          i1l1433 01C6                            i1l1195 0036                            i1l1275 0143  
                          i1l1435 01CC                            i1l1427 01B5                            u112_25 01AD  
                          i1l1365 03B8                            i1l1279 0151                            i1l1359 037A  
                          i1l1369 03C2                            u106_25 035F                            u114_25 02B8  
                          u115_25 02E3                            u108_25 03C3                            u109_25 03CA  
                          _OSCCON 0099                            _TMR2IE 0489                            _TMR2IF 0089  
                          _TMR4IE 0499                            _TMR4IF 0099                            _TMR2ON 00E2  
                          _TMR4ON 20BA                            _SSP1IE 048B                            _SSP1IF 008B  
        _controller_current_limit 0062                 measure@pin_select 007B                            _I_calc 01D4  
                          _P_calc 037F                            ___lmul 03B0                            _adconv 040C  
                  __CFG_STVREN$ON 0000                         ??___ftmul 0026                         ??___fttol 0034  
                __end_of_init_PWM 04C6                            _output 049C             ___ftmul@f3_as_product 002B  
      interrupt_controller@volume 0057                         ??_measure 007D          __size_of_init_I2C_master 0010  
         __end_of__initialization 001B            __size_of_I2C_send_data 003F                        ___awtoft@c 0078  
                      ___ftmul@f1 0020                        ___ftmul@f2 0023                        ___fttol@f1 0030  
                  __pcstackCOMMON 0070                __size_of_call_send 0024                     _I2C_ack_check 045B  
                   __end_of_inter 0010              __size_of_init_Timer4 000B                           ??_inter 005D  
                      __pbssBANK0 005E                           ?_I_calc 003E                           ?_P_calc 003E  
                      __pmaintext 051A                           ?___lmul 0070                    ?_I2C_ack_check 0070  
                         ?_adconv 0070                        __pintentry 0004                           _CCP3CON 0313  
                  ___lmul@product 0078                         ?___awtoft 0078                         ?___ftpack 0070  
                         _CCPTMRS 029E                      measure@value 007D                        calc@output 004B  
                         ?_output 0070       I2C_slave_interrupt@data_ptr 0066                     _I2C_send_data 0340  
                      adconv@temp 0079                           _SSP1ADD 0212                           _SSP1BUF 0211  
             I2C_send_data@length 0075                 __end_of_call_send 045B                 ??_init_I2C_master 00A0  
    __end_of_interrupt_controller 0340                         ?_init_PWM 0070       __size_of_current_conversion 0059  
                 __size_of_I_calc 0063                   __size_of_P_calc 0031                   __size_of___lmul 002F  
                 __size_of_adconv 002B                           ___ftmul 001F                           ___fttol 00D3  
                      _init_adcon 04E7                        ??___awtoft 007B                        ??___ftpack 0075  
                         calc@mes 0049                           calc@ref 0047                           calc@res 0054  
            interrupt_I2C@counter 0064                           __ptext0 0000                           __ptext1 0521  
                         __ptext2 03DF                           __ptext3 04E7                           __ptext4 04B3  
                         __ptext5 04D7                           __ptext6 04F5                           __ptext8 02F0  
                         __ptext9 050A                   __size_of_output 0017                    ?_I2C_send_data 0074  
                         _measure 04C6           __size_of_I2C_idle_check 000A           interrupt_controller@out 005B  
     interrupt_controller@current 0059                         I_calc@res 003E                         I_calc@sum 0060  
            end_of_initialization 001B                        ??_init_PWM 00A0                   ??_I2C_ack_check 0072  
                adconv@pin_select 0070                  __CFG_FOSC$INTOSC 0000                         P_calc@res 003E  
current_conversion@measured_value 007C                       _CCP3CONbits 0313                    __end_of_I_calc 0237  
                     ___ftmul@exp 002A                    __end_of_P_calc 03B0                       ?_init_adcon 00A0  
                  __end_of___lmul 03DF                    __end_of_adconv 0437                   ??_I2C_send_data 0077  
            _interrupt_controller 02F0                    __end_of_output 04B3               start_initialization 0012  
  set_current_limit@current_limit 0070                          ??_I_calc 0040                          ??_P_calc 007E  
                        ??___lmul 0078                          ??_adconv 0072                  init_adcon@anselA 00A0  
                init_adcon@anselB 00A2                     ??_init_Timer4 00A0             ?_interrupt_controller 0070  
                        ??_output 0072                   _init_I2C_master 04D7                 __size_of___awtoft 0020  
               __size_of___ftpack 0060                    _I2C_idle_check 0500                         ___latbits 0001  
                   __pcstackBANK0 0020                     __pcstackBANK1 00A0                    I2C_ack_check@i 0072  
             __size_of_init_adcon 000E                         _call_send 0437                 __size_of_init_PWM 0013  
                        ?___ftmul 0020                          ?___fttol 0030                    D_calc@previous 005E  
          __end_of_I2C_idle_check 050A                          ?_measure 007B               __end_of_init_Timer4 0500  
                  __size_of_inter 000C                call_send@send_data 0022        __end_of_current_conversion 02F0  
                      ?_call_send 0070                          _GO_nDONE 04E9                          _SSP1CON1 0215  
                        _SSP1CON2 0216           __end_of_init_I2C_master 04E7                          _SSP1STAT 0214  
          ??_interrupt_controller 0056                   ?_I2C_idle_check 0070                 ___lmul@multiplier 0070  
           __end_of_I2C_ack_check 047C                      ??_init_adcon 00A4                          _calc$133 004E  
                        _calc$134 0050                          _calc$135 0052                  __size_of___ftmul 00B4  
                __size_of___fttol 0087                       _init_Timer4 04F5                          ___awtoft 047C  
                        ___ftpack 0237                  __size_of_measure 0011                          __ptext10 049C  
                        __ptext11 04C6                          __ptext20 015A                          __ptext12 040C  
                        __ptext21 037F                          __ptext13 0297                          __ptext22 01D4  
                        __ptext14 03B0                          __ptext23 00D3                          __ptext15 0437  
                        __ptext24 001F                          __ptext16 0512                          __ptext25 047C  
                        __ptext17 0340                          __ptext26 0237                          __ptext18 0500  
                        __ptext19 045B                      _SSP1CON2bits 0216                 I2C_send_data@addr 0078  
               I2C_send_data@data 0074                          _init_PWM 04B3                __end_of_init_adcon 04F5  
                   __size_of_calc 007A                       ??_call_send 007B                     __size_of_main 0007  
                   __size_of_init 002D                     __size_of_loop 0001                 _get_current_limit 0512  
               _set_current_limit 050A                ?_get_current_limit 0070                ?_set_current_limit 0070  
                ?_init_I2C_master 0070                        I_calc@temp 0041                          main@argc 00A6  
                        main@argv 00A8                      _SSP1STATbits 0214             __end_of_I2C_send_data 037F  
             ??_get_current_limit 0072               ??_set_current_limit 0072                       pic14e$flags 007E  
                        intlevel1 0000                         output@out 0070                 __CFG_CLKOUTEN$OFF 0000  
       __end_of_get_current_limit 051A         __end_of_set_current_limit 0512                    I2C_send_data@i 0079  
                      P_calc@temp 0040  
