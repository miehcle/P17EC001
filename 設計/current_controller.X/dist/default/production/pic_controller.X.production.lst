

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Sun Apr 23 22:41:11 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	dabs	1,0x7E,2
    35  0000                     	;# 
    36  0001                     	;# 
    37  0002                     	;# 
    38  0003                     	;# 
    39  0004                     	;# 
    40  0005                     	;# 
    41  0006                     	;# 
    42  0007                     	;# 
    43  0008                     	;# 
    44  0009                     	;# 
    45  000A                     	;# 
    46  000B                     	;# 
    47  000C                     	;# 
    48  000D                     	;# 
    49  0011                     	;# 
    50  0012                     	;# 
    51  0013                     	;# 
    52  0014                     	;# 
    53  0015                     	;# 
    54  0016                     	;# 
    55  0016                     	;# 
    56  0017                     	;# 
    57  0018                     	;# 
    58  0019                     	;# 
    59  001A                     	;# 
    60  001B                     	;# 
    61  001C                     	;# 
    62  001E                     	;# 
    63  001F                     	;# 
    64  008C                     	;# 
    65  008D                     	;# 
    66  0091                     	;# 
    67  0092                     	;# 
    68  0093                     	;# 
    69  0094                     	;# 
    70  0095                     	;# 
    71  0096                     	;# 
    72  0097                     	;# 
    73  0098                     	;# 
    74  0099                     	;# 
    75  009A                     	;# 
    76  009B                     	;# 
    77  009B                     	;# 
    78  009C                     	;# 
    79  009D                     	;# 
    80  009E                     	;# 
    81  010C                     	;# 
    82  010D                     	;# 
    83  0111                     	;# 
    84  0112                     	;# 
    85  0113                     	;# 
    86  0114                     	;# 
    87  0115                     	;# 
    88  0116                     	;# 
    89  0117                     	;# 
    90  0118                     	;# 
    91  0119                     	;# 
    92  011A                     	;# 
    93  011B                     	;# 
    94  011D                     	;# 
    95  011E                     	;# 
    96  018C                     	;# 
    97  018D                     	;# 
    98  0191                     	;# 
    99  0191                     	;# 
   100  0192                     	;# 
   101  0193                     	;# 
   102  0193                     	;# 
   103  0193                     	;# 
   104  0194                     	;# 
   105  0195                     	;# 
   106  0196                     	;# 
   107  0199                     	;# 
   108  019A                     	;# 
   109  019B                     	;# 
   110  019B                     	;# 
   111  019B                     	;# 
   112  019B                     	;# 
   113  019C                     	;# 
   114  019C                     	;# 
   115  019D                     	;# 
   116  019E                     	;# 
   117  019F                     	;# 
   118  020C                     	;# 
   119  020D                     	;# 
   120  0211                     	;# 
   121  0211                     	;# 
   122  0212                     	;# 
   123  0212                     	;# 
   124  0213                     	;# 
   125  0213                     	;# 
   126  0214                     	;# 
   127  0214                     	;# 
   128  0215                     	;# 
   129  0215                     	;# 
   130  0215                     	;# 
   131  0216                     	;# 
   132  0216                     	;# 
   133  0217                     	;# 
   134  0217                     	;# 
   135  0219                     	;# 
   136  021A                     	;# 
   137  021B                     	;# 
   138  021C                     	;# 
   139  021D                     	;# 
   140  021E                     	;# 
   141  021F                     	;# 
   142  0291                     	;# 
   143  0291                     	;# 
   144  0292                     	;# 
   145  0293                     	;# 
   146  0294                     	;# 
   147  0295                     	;# 
   148  0295                     	;# 
   149  0296                     	;# 
   150  0298                     	;# 
   151  0298                     	;# 
   152  0299                     	;# 
   153  029A                     	;# 
   154  029B                     	;# 
   155  029C                     	;# 
   156  029C                     	;# 
   157  029D                     	;# 
   158  029E                     	;# 
   159  029E                     	;# 
   160  0311                     	;# 
   161  0311                     	;# 
   162  0312                     	;# 
   163  0313                     	;# 
   164  0318                     	;# 
   165  0318                     	;# 
   166  0319                     	;# 
   167  031A                     	;# 
   168  0394                     	;# 
   169  0395                     	;# 
   170  0396                     	;# 
   171  039A                     	;# 
   172  039C                     	;# 
   173  039D                     	;# 
   174  039E                     	;# 
   175  039F                     	;# 
   176  0415                     	;# 
   177  0416                     	;# 
   178  0417                     	;# 
   179  041C                     	;# 
   180  041D                     	;# 
   181  041E                     	;# 
   182  0FE4                     	;# 
   183  0FE5                     	;# 
   184  0FE6                     	;# 
   185  0FE7                     	;# 
   186  0FE8                     	;# 
   187  0FE9                     	;# 
   188  0FEA                     	;# 
   189  0FEB                     	;# 
   190  0FED                     	;# 
   191  0FEE                     	;# 
   192  0FEF                     	;# 
   193  0000                     	;# 
   194  0001                     	;# 
   195  0002                     	;# 
   196  0003                     	;# 
   197  0004                     	;# 
   198  0005                     	;# 
   199  0006                     	;# 
   200  0007                     	;# 
   201  0008                     	;# 
   202  0009                     	;# 
   203  000A                     	;# 
   204  000B                     	;# 
   205  000C                     	;# 
   206  000D                     	;# 
   207  0011                     	;# 
   208  0012                     	;# 
   209  0013                     	;# 
   210  0014                     	;# 
   211  0015                     	;# 
   212  0016                     	;# 
   213  0016                     	;# 
   214  0017                     	;# 
   215  0018                     	;# 
   216  0019                     	;# 
   217  001A                     	;# 
   218  001B                     	;# 
   219  001C                     	;# 
   220  001E                     	;# 
   221  001F                     	;# 
   222  008C                     	;# 
   223  008D                     	;# 
   224  0091                     	;# 
   225  0092                     	;# 
   226  0093                     	;# 
   227  0094                     	;# 
   228  0095                     	;# 
   229  0096                     	;# 
   230  0097                     	;# 
   231  0098                     	;# 
   232  0099                     	;# 
   233  009A                     	;# 
   234  009B                     	;# 
   235  009B                     	;# 
   236  009C                     	;# 
   237  009D                     	;# 
   238  009E                     	;# 
   239  010C                     	;# 
   240  010D                     	;# 
   241  0111                     	;# 
   242  0112                     	;# 
   243  0113                     	;# 
   244  0114                     	;# 
   245  0115                     	;# 
   246  0116                     	;# 
   247  0117                     	;# 
   248  0118                     	;# 
   249  0119                     	;# 
   250  011A                     	;# 
   251  011B                     	;# 
   252  011D                     	;# 
   253  011E                     	;# 
   254  018C                     	;# 
   255  018D                     	;# 
   256  0191                     	;# 
   257  0191                     	;# 
   258  0192                     	;# 
   259  0193                     	;# 
   260  0193                     	;# 
   261  0193                     	;# 
   262  0194                     	;# 
   263  0195                     	;# 
   264  0196                     	;# 
   265  0199                     	;# 
   266  019A                     	;# 
   267  019B                     	;# 
   268  019B                     	;# 
   269  019B                     	;# 
   270  019B                     	;# 
   271  019C                     	;# 
   272  019C                     	;# 
   273  019D                     	;# 
   274  019E                     	;# 
   275  019F                     	;# 
   276  020C                     	;# 
   277  020D                     	;# 
   278  0211                     	;# 
   279  0211                     	;# 
   280  0212                     	;# 
   281  0212                     	;# 
   282  0213                     	;# 
   283  0213                     	;# 
   284  0214                     	;# 
   285  0214                     	;# 
   286  0215                     	;# 
   287  0215                     	;# 
   288  0215                     	;# 
   289  0216                     	;# 
   290  0216                     	;# 
   291  0217                     	;# 
   292  0217                     	;# 
   293  0219                     	;# 
   294  021A                     	;# 
   295  021B                     	;# 
   296  021C                     	;# 
   297  021D                     	;# 
   298  021E                     	;# 
   299  021F                     	;# 
   300  0291                     	;# 
   301  0291                     	;# 
   302  0292                     	;# 
   303  0293                     	;# 
   304  0294                     	;# 
   305  0295                     	;# 
   306  0295                     	;# 
   307  0296                     	;# 
   308  0298                     	;# 
   309  0298                     	;# 
   310  0299                     	;# 
   311  029A                     	;# 
   312  029B                     	;# 
   313  029C                     	;# 
   314  029C                     	;# 
   315  029D                     	;# 
   316  029E                     	;# 
   317  029E                     	;# 
   318  0311                     	;# 
   319  0311                     	;# 
   320  0312                     	;# 
   321  0313                     	;# 
   322  0318                     	;# 
   323  0318                     	;# 
   324  0319                     	;# 
   325  031A                     	;# 
   326  0394                     	;# 
   327  0395                     	;# 
   328  0396                     	;# 
   329  039A                     	;# 
   330  039C                     	;# 
   331  039D                     	;# 
   332  039E                     	;# 
   333  039F                     	;# 
   334  0415                     	;# 
   335  0416                     	;# 
   336  0417                     	;# 
   337  041C                     	;# 
   338  041D                     	;# 
   339  041E                     	;# 
   340  0FE4                     	;# 
   341  0FE5                     	;# 
   342  0FE6                     	;# 
   343  0FE7                     	;# 
   344  0FE8                     	;# 
   345  0FE9                     	;# 
   346  0FEA                     	;# 
   347  0FEB                     	;# 
   348  0FED                     	;# 
   349  0FEE                     	;# 
   350  0FEF                     	;# 
   351  0000                     	;# 
   352  0001                     	;# 
   353  0002                     	;# 
   354  0003                     	;# 
   355  0004                     	;# 
   356  0005                     	;# 
   357  0006                     	;# 
   358  0007                     	;# 
   359  0008                     	;# 
   360  0009                     	;# 
   361  000A                     	;# 
   362  000B                     	;# 
   363  000C                     	;# 
   364  000D                     	;# 
   365  0011                     	;# 
   366  0012                     	;# 
   367  0013                     	;# 
   368  0014                     	;# 
   369  0015                     	;# 
   370  0016                     	;# 
   371  0016                     	;# 
   372  0017                     	;# 
   373  0018                     	;# 
   374  0019                     	;# 
   375  001A                     	;# 
   376  001B                     	;# 
   377  001C                     	;# 
   378  001E                     	;# 
   379  001F                     	;# 
   380  008C                     	;# 
   381  008D                     	;# 
   382  0091                     	;# 
   383  0092                     	;# 
   384  0093                     	;# 
   385  0094                     	;# 
   386  0095                     	;# 
   387  0096                     	;# 
   388  0097                     	;# 
   389  0098                     	;# 
   390  0099                     	;# 
   391  009A                     	;# 
   392  009B                     	;# 
   393  009B                     	;# 
   394  009C                     	;# 
   395  009D                     	;# 
   396  009E                     	;# 
   397  010C                     	;# 
   398  010D                     	;# 
   399  0111                     	;# 
   400  0112                     	;# 
   401  0113                     	;# 
   402  0114                     	;# 
   403  0115                     	;# 
   404  0116                     	;# 
   405  0117                     	;# 
   406  0118                     	;# 
   407  0119                     	;# 
   408  011A                     	;# 
   409  011B                     	;# 
   410  011D                     	;# 
   411  011E                     	;# 
   412  018C                     	;# 
   413  018D                     	;# 
   414  0191                     	;# 
   415  0191                     	;# 
   416  0192                     	;# 
   417  0193                     	;# 
   418  0193                     	;# 
   419  0193                     	;# 
   420  0194                     	;# 
   421  0195                     	;# 
   422  0196                     	;# 
   423  0199                     	;# 
   424  019A                     	;# 
   425  019B                     	;# 
   426  019B                     	;# 
   427  019B                     	;# 
   428  019B                     	;# 
   429  019C                     	;# 
   430  019C                     	;# 
   431  019D                     	;# 
   432  019E                     	;# 
   433  019F                     	;# 
   434  020C                     	;# 
   435  020D                     	;# 
   436  0211                     	;# 
   437  0211                     	;# 
   438  0212                     	;# 
   439  0212                     	;# 
   440  0213                     	;# 
   441  0213                     	;# 
   442  0214                     	;# 
   443  0214                     	;# 
   444  0215                     	;# 
   445  0215                     	;# 
   446  0215                     	;# 
   447  0216                     	;# 
   448  0216                     	;# 
   449  0217                     	;# 
   450  0217                     	;# 
   451  0219                     	;# 
   452  021A                     	;# 
   453  021B                     	;# 
   454  021C                     	;# 
   455  021D                     	;# 
   456  021E                     	;# 
   457  021F                     	;# 
   458  0291                     	;# 
   459  0291                     	;# 
   460  0292                     	;# 
   461  0293                     	;# 
   462  0294                     	;# 
   463  0295                     	;# 
   464  0295                     	;# 
   465  0296                     	;# 
   466  0298                     	;# 
   467  0298                     	;# 
   468  0299                     	;# 
   469  029A                     	;# 
   470  029B                     	;# 
   471  029C                     	;# 
   472  029C                     	;# 
   473  029D                     	;# 
   474  029E                     	;# 
   475  029E                     	;# 
   476  0311                     	;# 
   477  0311                     	;# 
   478  0312                     	;# 
   479  0313                     	;# 
   480  0318                     	;# 
   481  0318                     	;# 
   482  0319                     	;# 
   483  031A                     	;# 
   484  0394                     	;# 
   485  0395                     	;# 
   486  0396                     	;# 
   487  039A                     	;# 
   488  039C                     	;# 
   489  039D                     	;# 
   490  039E                     	;# 
   491  039F                     	;# 
   492  0415                     	;# 
   493  0416                     	;# 
   494  0417                     	;# 
   495  041C                     	;# 
   496  041D                     	;# 
   497  041E                     	;# 
   498  0FE4                     	;# 
   499  0FE5                     	;# 
   500  0FE6                     	;# 
   501  0FE7                     	;# 
   502  0FE8                     	;# 
   503  0FE9                     	;# 
   504  0FEA                     	;# 
   505  0FEB                     	;# 
   506  0FED                     	;# 
   507  0FEE                     	;# 
   508  0FEF                     	;# 
   509  0000                     	;# 
   510  0001                     	;# 
   511  0002                     	;# 
   512  0003                     	;# 
   513  0004                     	;# 
   514  0005                     	;# 
   515  0006                     	;# 
   516  0007                     	;# 
   517  0008                     	;# 
   518  0009                     	;# 
   519  000A                     	;# 
   520  000B                     	;# 
   521  000C                     	;# 
   522  000D                     	;# 
   523  0011                     	;# 
   524  0012                     	;# 
   525  0013                     	;# 
   526  0014                     	;# 
   527  0015                     	;# 
   528  0016                     	;# 
   529  0016                     	;# 
   530  0017                     	;# 
   531  0018                     	;# 
   532  0019                     	;# 
   533  001A                     	;# 
   534  001B                     	;# 
   535  001C                     	;# 
   536  001E                     	;# 
   537  001F                     	;# 
   538  008C                     	;# 
   539  008D                     	;# 
   540  0091                     	;# 
   541  0092                     	;# 
   542  0093                     	;# 
   543  0094                     	;# 
   544  0095                     	;# 
   545  0096                     	;# 
   546  0097                     	;# 
   547  0098                     	;# 
   548  0099                     	;# 
   549  009A                     	;# 
   550  009B                     	;# 
   551  009B                     	;# 
   552  009C                     	;# 
   553  009D                     	;# 
   554  009E                     	;# 
   555  010C                     	;# 
   556  010D                     	;# 
   557  0111                     	;# 
   558  0112                     	;# 
   559  0113                     	;# 
   560  0114                     	;# 
   561  0115                     	;# 
   562  0116                     	;# 
   563  0117                     	;# 
   564  0118                     	;# 
   565  0119                     	;# 
   566  011A                     	;# 
   567  011B                     	;# 
   568  011D                     	;# 
   569  011E                     	;# 
   570  018C                     	;# 
   571  018D                     	;# 
   572  0191                     	;# 
   573  0191                     	;# 
   574  0192                     	;# 
   575  0193                     	;# 
   576  0193                     	;# 
   577  0193                     	;# 
   578  0194                     	;# 
   579  0195                     	;# 
   580  0196                     	;# 
   581  0199                     	;# 
   582  019A                     	;# 
   583  019B                     	;# 
   584  019B                     	;# 
   585  019B                     	;# 
   586  019B                     	;# 
   587  019C                     	;# 
   588  019C                     	;# 
   589  019D                     	;# 
   590  019E                     	;# 
   591  019F                     	;# 
   592  020C                     	;# 
   593  020D                     	;# 
   594  0211                     	;# 
   595  0211                     	;# 
   596  0212                     	;# 
   597  0212                     	;# 
   598  0213                     	;# 
   599  0213                     	;# 
   600  0214                     	;# 
   601  0214                     	;# 
   602  0215                     	;# 
   603  0215                     	;# 
   604  0215                     	;# 
   605  0216                     	;# 
   606  0216                     	;# 
   607  0217                     	;# 
   608  0217                     	;# 
   609  0219                     	;# 
   610  021A                     	;# 
   611  021B                     	;# 
   612  021C                     	;# 
   613  021D                     	;# 
   614  021E                     	;# 
   615  021F                     	;# 
   616  0291                     	;# 
   617  0291                     	;# 
   618  0292                     	;# 
   619  0293                     	;# 
   620  0294                     	;# 
   621  0295                     	;# 
   622  0295                     	;# 
   623  0296                     	;# 
   624  0298                     	;# 
   625  0298                     	;# 
   626  0299                     	;# 
   627  029A                     	;# 
   628  029B                     	;# 
   629  029C                     	;# 
   630  029C                     	;# 
   631  029D                     	;# 
   632  029E                     	;# 
   633  029E                     	;# 
   634  0311                     	;# 
   635  0311                     	;# 
   636  0312                     	;# 
   637  0313                     	;# 
   638  0318                     	;# 
   639  0318                     	;# 
   640  0319                     	;# 
   641  031A                     	;# 
   642  0394                     	;# 
   643  0395                     	;# 
   644  0396                     	;# 
   645  039A                     	;# 
   646  039C                     	;# 
   647  039D                     	;# 
   648  039E                     	;# 
   649  039F                     	;# 
   650  0415                     	;# 
   651  0416                     	;# 
   652  0417                     	;# 
   653  041C                     	;# 
   654  041D                     	;# 
   655  041E                     	;# 
   656  0FE4                     	;# 
   657  0FE5                     	;# 
   658  0FE6                     	;# 
   659  0FE7                     	;# 
   660  0FE8                     	;# 
   661  0FE9                     	;# 
   662  0FEA                     	;# 
   663  0FEB                     	;# 
   664  0FED                     	;# 
   665  0FEE                     	;# 
   666  0FEF                     	;# 
   667  0000                     	;# 
   668  0001                     	;# 
   669  0002                     	;# 
   670  0003                     	;# 
   671  0004                     	;# 
   672  0005                     	;# 
   673  0006                     	;# 
   674  0007                     	;# 
   675  0008                     	;# 
   676  0009                     	;# 
   677  000A                     	;# 
   678  000B                     	;# 
   679  000C                     	;# 
   680  000D                     	;# 
   681  0011                     	;# 
   682  0012                     	;# 
   683  0013                     	;# 
   684  0014                     	;# 
   685  0015                     	;# 
   686  0016                     	;# 
   687  0016                     	;# 
   688  0017                     	;# 
   689  0018                     	;# 
   690  0019                     	;# 
   691  001A                     	;# 
   692  001B                     	;# 
   693  001C                     	;# 
   694  001E                     	;# 
   695  001F                     	;# 
   696  008C                     	;# 
   697  008D                     	;# 
   698  0091                     	;# 
   699  0092                     	;# 
   700  0093                     	;# 
   701  0094                     	;# 
   702  0095                     	;# 
   703  0096                     	;# 
   704  0097                     	;# 
   705  0098                     	;# 
   706  0099                     	;# 
   707  009A                     	;# 
   708  009B                     	;# 
   709  009B                     	;# 
   710  009C                     	;# 
   711  009D                     	;# 
   712  009E                     	;# 
   713  010C                     	;# 
   714  010D                     	;# 
   715  0111                     	;# 
   716  0112                     	;# 
   717  0113                     	;# 
   718  0114                     	;# 
   719  0115                     	;# 
   720  0116                     	;# 
   721  0117                     	;# 
   722  0118                     	;# 
   723  0119                     	;# 
   724  011A                     	;# 
   725  011B                     	;# 
   726  011D                     	;# 
   727  011E                     	;# 
   728  018C                     	;# 
   729  018D                     	;# 
   730  0191                     	;# 
   731  0191                     	;# 
   732  0192                     	;# 
   733  0193                     	;# 
   734  0193                     	;# 
   735  0193                     	;# 
   736  0194                     	;# 
   737  0195                     	;# 
   738  0196                     	;# 
   739  0199                     	;# 
   740  019A                     	;# 
   741  019B                     	;# 
   742  019B                     	;# 
   743  019B                     	;# 
   744  019B                     	;# 
   745  019C                     	;# 
   746  019C                     	;# 
   747  019D                     	;# 
   748  019E                     	;# 
   749  019F                     	;# 
   750  020C                     	;# 
   751  020D                     	;# 
   752  0211                     	;# 
   753  0211                     	;# 
   754  0212                     	;# 
   755  0212                     	;# 
   756  0213                     	;# 
   757  0213                     	;# 
   758  0214                     	;# 
   759  0214                     	;# 
   760  0215                     	;# 
   761  0215                     	;# 
   762  0215                     	;# 
   763  0216                     	;# 
   764  0216                     	;# 
   765  0217                     	;# 
   766  0217                     	;# 
   767  0219                     	;# 
   768  021A                     	;# 
   769  021B                     	;# 
   770  021C                     	;# 
   771  021D                     	;# 
   772  021E                     	;# 
   773  021F                     	;# 
   774  0291                     	;# 
   775  0291                     	;# 
   776  0292                     	;# 
   777  0293                     	;# 
   778  0294                     	;# 
   779  0295                     	;# 
   780  0295                     	;# 
   781  0296                     	;# 
   782  0298                     	;# 
   783  0298                     	;# 
   784  0299                     	;# 
   785  029A                     	;# 
   786  029B                     	;# 
   787  029C                     	;# 
   788  029C                     	;# 
   789  029D                     	;# 
   790  029E                     	;# 
   791  029E                     	;# 
   792  0311                     	;# 
   793  0311                     	;# 
   794  0312                     	;# 
   795  0313                     	;# 
   796  0318                     	;# 
   797  0318                     	;# 
   798  0319                     	;# 
   799  031A                     	;# 
   800  0394                     	;# 
   801  0395                     	;# 
   802  0396                     	;# 
   803  039A                     	;# 
   804  039C                     	;# 
   805  039D                     	;# 
   806  039E                     	;# 
   807  039F                     	;# 
   808  0415                     	;# 
   809  0416                     	;# 
   810  0417                     	;# 
   811  041C                     	;# 
   812  041D                     	;# 
   813  041E                     	;# 
   814  0FE4                     	;# 
   815  0FE5                     	;# 
   816  0FE6                     	;# 
   817  0FE7                     	;# 
   818  0FE8                     	;# 
   819  0FE9                     	;# 
   820  0FEA                     	;# 
   821  0FEB                     	;# 
   822  0FED                     	;# 
   823  0FEE                     	;# 
   824  0FEF                     	;# 
   825  000C                     _PORTA	set	12
   826  000D                     _PORTB	set	13
   827  001B                     _PR2	set	27
   828  001C                     _T2CON	set	28
   829  001A                     _TMR2	set	26
   830  0093                     _BCL1IF	set	147
   831  005F                     _GIE	set	95
   832  005E                     _PEIE	set	94
   833  0062                     _RA2	set	98
   834  0066                     _RA6	set	102
   835  006B                     _RB3	set	107
   836  008B                     _SSP1IF	set	139
   837  0089                     _TMR2IF	set	137
   838  00E2                     _TMR2ON	set	226
   839  0099                     _TMR4IF	set	153
   840  009D                     _ADCON0	set	157
   841  009E                     _ADCON1	set	158
   842  009C                     _ADRESH	set	156
   843  009B                     _ADRESL	set	155
   844  0099                     _OSCCON	set	153
   845  008C                     _TRISA	set	140
   846  008D                     _TRISB	set	141
   847  0493                     _BCL1IE	set	1171
   848  04E9                     _GO_nDONE	set	1257
   849  048B                     _SSP1IE	set	1163
   850  0489                     _TMR2IE	set	1161
   851  0499                     _TMR4IE	set	1177
   852  018C                     _ANSELA	set	396
   853  018D                     _ANSELB	set	397
   854  0212                     _SSP1ADD	set	530
   855  0211                     _SSP1BUF	set	529
   856  0215                     _SSP1CON1	set	533
   857  0216                     _SSP1CON2	set	534
   858  0216                     _SSP1CON2bits	set	534
   859  0214                     _SSP1STAT	set	532
   860  029E                     _CCPTMRS	set	670
   861  0313                     _CCP3CON	set	787
   862  0313                     _CCP3CONbits	set	787
   863  0312                     _CCPR3H	set	786
   864  0311                     _CCPR3L	set	785
   865  0417                     _T4CON	set	1047
   866  0415                     _TMR4	set	1045
   867  20BA                     _TMR4ON	set	8378
   868                           
   869                           	psect	text0
   870  0000                     __ptext0:	
   871                           ; #config settings
   872                           
   873                           
   874                           ;psect for function _I2C_ack_check
   875  0000                     
   876                           	psect	cinit
   877  0084                     start_initialization:	
   878  0084                     __initialization:	
   879                           
   880                           ; Clear objects allocated to BANK0
   881  0084  303C               	movlw	low __pbssBANK0
   882  0085  0084               	movwf	4
   883  0086  3000               	movlw	high __pbssBANK0
   884  0087  0085               	movwf	5
   885  0088  3015               	movlw	21
   886  0089  3183  23B4         	fcall	clear_ram0
   887  008B                     end_of_initialization:	
   888                           ;End of C runtime variable initialization code
   889                           
   890  008B                     __end_of__initialization:	
   891  008B  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   892  008C  0020               	movlb	0
   893  008D  3183  2BAD         	ljmp	_main	;jump to C main() function
   894                           
   895                           	psect	bssBANK0
   896  003C                     __pbssBANK0:	
   897  003C                     calc_I@i:	
   898  003C                     	ds	4
   899  0040                     calc_D@d:	
   900  0040                     	ds	2
   901  0042                     calc_D@d_bef:	
   902  0042                     	ds	2
   903  0044                     calc_D@d_sum:	
   904  0044                     	ds	2
   905  0046                     inter@cnt_tmr2:	
   906  0046                     	ds	2
   907  0048                     inter@cnt_tmr4:	
   908  0048                     	ds	2
   909  004A                     _current:	
   910  004A                     	ds	3
   911  004D                     _power:	
   912  004D                     	ds	2
   913  004F                     _volume:	
   914  004F                     	ds	2
   915                           
   916                           	psect	clrtext
   917  03B4                     clear_ram0:	
   918                           ;	Called with FSR0 containing the base address, and
   919                           ;	WREG with the size to clear
   920                           
   921  03B4  0064               	clrwdt	;clear the watchdog before getting into this loop
   922  03B5                     clrloop0:	
   923  03B5  0180               	clrf	0	;clear RAM location pointed to by FSR
   924  03B6  3101               	addfsr 0,1
   925  03B7  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   926  03B8  2BB5               	goto	clrloop0	;have we reached the end yet?
   927  03B9  3400               	retlw	0	;all done for this memory range, return
   928                           
   929                           	psect	cstackCOMMON
   930  0070                     __pcstackCOMMON:	
   931  0070                     ?_init:	
   932  0070                     ?_loop:	
   933                           ; 0 bytes @ 0x0
   934                           
   935  0070                     ?_init_PWM:	
   936                           ; 0 bytes @ 0x0
   937                           
   938  0070                     ?_init_I2C_master:	
   939                           ; 0 bytes @ 0x0
   940                           
   941  0070                     ?_init_Timer2:	
   942                           ; 0 bytes @ 0x0
   943                           
   944  0070                     ?_init_Timer4:	
   945                           ; 0 bytes @ 0x0
   946                           
   947  0070                     ?_init_interruption:	
   948                           ; 0 bytes @ 0x0
   949                           
   950  0070                     ?_output_PWM:	
   951                           ; 0 bytes @ 0x0
   952                           
   953  0070                     ?_inter:	
   954                           ; 0 bytes @ 0x0
   955                           
   956  0070                     ?_I2C_idle_check:	
   957                           ; 0 bytes @ 0x0
   958                           
   959  0070                     ??_I2C_idle_check:	
   960                           ; 0 bytes @ 0x0
   961                           
   962  0070                     ?_safety_check:	
   963                           ; 0 bytes @ 0x0
   964                           
   965  0070                     ?_main:	
   966                           ; 2 bytes @ 0x0
   967                           
   968  0070                     ?_adconv:	
   969                           ; 2 bytes @ 0x0
   970                           
   971  0070                     ?_I2C_ack_check:	
   972                           ; 2 bytes @ 0x0
   973                           
   974  0070                     ?___wmul:	
   975                           ; 2 bytes @ 0x0
   976                           
   977  0070                     ?___ftpack:	
   978                           ; 2 bytes @ 0x0
   979                           
   980  0070                     adconv@pin_select:	
   981                           ; 3 bytes @ 0x0
   982                           
   983  0070                     output_PWM@out:	
   984                           ; 2 bytes @ 0x0
   985                           
   986  0070                     ___wmul@multiplier:	
   987                           ; 2 bytes @ 0x0
   988                           
   989  0070                     ___ftpack@arg:	
   990                           ; 2 bytes @ 0x0
   991                           
   992                           
   993                           ; 3 bytes @ 0x0
   994  0070                     	ds	2
   995  0072                     ??_safety_check:	
   996  0072                     ??_output_PWM:	
   997                           ; 0 bytes @ 0x2
   998                           
   999  0072                     ??_adconv:	
  1000                           ; 0 bytes @ 0x2
  1001                           
  1002  0072                     ??_I2C_ack_check:	
  1003                           ; 0 bytes @ 0x2
  1004                           
  1005  0072                     I2C_ack_check@i:	
  1006                           ; 0 bytes @ 0x2
  1007                           
  1008  0072                     ___wmul@multiplicand:	
  1009                           ; 2 bytes @ 0x2
  1010                           
  1011                           
  1012                           ; 2 bytes @ 0x2
  1013  0072                     	ds	1
  1014  0073                     ___ftpack@exp:	
  1015                           
  1016                           ; 1 bytes @ 0x3
  1017  0073                     	ds	1
  1018  0074                     ?_I2C_send_data:	
  1019  0074                     ??___wmul:	
  1020                           ; 0 bytes @ 0x4
  1021                           
  1022  0074                     I2C_send_data@data:	
  1023                           ; 0 bytes @ 0x4
  1024                           
  1025  0074                     ___ftpack@sign:	
  1026                           ; 1 bytes @ 0x4
  1027                           
  1028  0074                     ___wmul@product:	
  1029                           ; 1 bytes @ 0x4
  1030                           
  1031                           
  1032                           ; 2 bytes @ 0x4
  1033  0074                     	ds	1
  1034  0075                     ??___ftpack:	
  1035  0075                     I2C_send_data@length:	
  1036                           ; 0 bytes @ 0x5
  1037                           
  1038                           
  1039                           ; 2 bytes @ 0x5
  1040  0075                     	ds	1
  1041  0076                     ?_calc_P:	
  1042  0076                     ?_calc_I:	
  1043                           ; 2 bytes @ 0x6
  1044                           
  1045  0076                     ?_calc_D:	
  1046                           ; 2 bytes @ 0x6
  1047                           
  1048  0076                     calc_P@res:	
  1049                           ; 2 bytes @ 0x6
  1050                           
  1051  0076                     calc_I@res:	
  1052                           ; 2 bytes @ 0x6
  1053                           
  1054  0076                     calc_D@res:	
  1055                           ; 2 bytes @ 0x6
  1056                           
  1057                           
  1058                           ; 2 bytes @ 0x6
  1059  0076                     	ds	1
  1060  0077                     ??_I2C_send_data:	
  1061                           
  1062                           ; 0 bytes @ 0x7
  1063  0077                     	ds	1
  1064  0078                     ??_calc_P:	
  1065  0078                     ??_calc_I:	
  1066                           ; 0 bytes @ 0x8
  1067                           
  1068  0078                     ??_calc_D:	
  1069                           ; 0 bytes @ 0x8
  1070                           
  1071  0078                     ?___awtoft:	
  1072                           ; 0 bytes @ 0x8
  1073                           
  1074  0078                     I2C_send_data@addr:	
  1075                           ; 3 bytes @ 0x8
  1076                           
  1077  0078                     calc_P@p:	
  1078                           ; 1 bytes @ 0x8
  1079                           
  1080  0078                     ___awtoft@c:	
  1081                           ; 2 bytes @ 0x8
  1082                           
  1083                           
  1084                           ; 2 bytes @ 0x8
  1085  0078                     	ds	1
  1086  0079                     adconv@temp:	
  1087  0079                     I2C_send_data@i:	
  1088                           ; 2 bytes @ 0x9
  1089                           
  1090                           
  1091                           ; 2 bytes @ 0x9
  1092  0079                     	ds	1
  1093  007A                     _calc_D$645:	
  1094                           
  1095                           ; 2 bytes @ 0xA
  1096  007A                     	ds	1
  1097  007B                     ??___awtoft:	
  1098                           
  1099                           ; 0 bytes @ 0xB
  1100  007B                     	ds	2
  1101  007D                     ___awtoft@sign:	
  1102                           
  1103                           ; 1 bytes @ 0xD
  1104  007D                     	ds	1
  1105  007E                     ??_measure:	
  1106                           
  1107                           	psect	cstackBANK0
  1108  0020                     __pcstackBANK0:	
  1109                           ; 0 bytes @ 0xE
  1110                           
  1111  0020                     ?_measure:	
  1112  0020                     ?_PID:	
  1113                           ; 0 bytes @ 0x0
  1114                           
  1115  0020                     measure@current:	
  1116                           ; 0 bytes @ 0x0
  1117                           
  1118  0020                     PID@ref:	
  1119                           ; 1 bytes @ 0x0
  1120                           
  1121                           
  1122                           ; 2 bytes @ 0x0
  1123  0020                     	ds	1
  1124  0021                     measure@current_sens:	
  1125                           
  1126                           ; 2 bytes @ 0x1
  1127  0021                     	ds	1
  1128  0022                     PID@mes:	
  1129                           
  1130                           ; 2 bytes @ 0x2
  1131  0022                     	ds	1
  1132  0023                     measure@volume:	
  1133                           
  1134                           ; 1 bytes @ 0x3
  1135  0023                     	ds	1
  1136  0024                     PID@power:	
  1137                           
  1138                           ; 1 bytes @ 0x4
  1139  0024                     	ds	1
  1140  0025                     ??_PID:	
  1141                           
  1142                           ; 0 bytes @ 0x5
  1143  0025                     	ds	4
  1144  0029                     _PID$242:	
  1145                           
  1146                           ; 2 bytes @ 0x9
  1147  0029                     	ds	2
  1148  002B                     _PID$243:	
  1149                           
  1150                           ; 2 bytes @ 0xB
  1151  002B                     	ds	2
  1152  002D                     _PID$244:	
  1153                           
  1154                           ; 2 bytes @ 0xD
  1155  002D                     	ds	2
  1156  002F                     PID@res:	
  1157                           
  1158                           ; 2 bytes @ 0xF
  1159  002F                     	ds	2
  1160  0031                     PID@temp:	
  1161                           
  1162                           ; 2 bytes @ 0x11
  1163  0031                     	ds	2
  1164  0033                     ??_inter:	
  1165                           
  1166                           ; 0 bytes @ 0x13
  1167  0033                     	ds	4
  1168  0037                     inter@data:	
  1169                           
  1170                           ; 1 bytes @ 0x17
  1171  0037                     	ds	1
  1172  0038                     ??_loop:	
  1173  0038                     ?_init_adcon:	
  1174                           ; 0 bytes @ 0x18
  1175                           
  1176  0038                     ??_init_PWM:	
  1177                           ; 0 bytes @ 0x18
  1178                           
  1179  0038                     ??_init_I2C_master:	
  1180                           ; 0 bytes @ 0x18
  1181                           
  1182  0038                     ??_init_Timer2:	
  1183                           ; 0 bytes @ 0x18
  1184                           
  1185  0038                     ??_init_Timer4:	
  1186                           ; 0 bytes @ 0x18
  1187                           
  1188  0038                     ??_init_interruption:	
  1189                           ; 0 bytes @ 0x18
  1190                           
  1191  0038                     init_adcon@anselA:	
  1192                           ; 0 bytes @ 0x18
  1193                           
  1194                           
  1195                           ; 2 bytes @ 0x18
  1196  0038                     	ds	2
  1197  003A                     init_adcon@anselB:	
  1198                           
  1199                           ; 2 bytes @ 0x1A
  1200  003A                     	ds	2
  1201  003C                     ??_init:	
  1202  003C                     ??_init_adcon:	
  1203                           ; 0 bytes @ 0x1C
  1204                           
  1205  003C                     ??_main:	
  1206                           ; 0 bytes @ 0x1C
  1207                           
  1208                           
  1209                           	psect	maintext
  1210  03AD                     __pmaintext:	
  1211                           ; 0 bytes @ 0x1C
  1212 ;;
  1213 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1214 ;;
  1215 ;; *************** function _main *****************
  1216 ;; Defined at:
  1217 ;;		line 30 in file "main.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;		None
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;		None
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  2   74[COMMON] int 
  1224 ;; Registers used:
  1225 ;;		wreg, status,2, status,0, pclath, cstack
  1226 ;; Tracked objects:
  1227 ;;		On entry : 17F/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1231 ;;      Params:         0       0       0       0       0       0
  1232 ;;      Locals:         0       0       0       0       0       0
  1233 ;;      Temps:          0       0       0       0       0       0
  1234 ;;      Totals:         0       0       0       0       0       0
  1235 ;;Total ram usage:        0 bytes
  1236 ;; Hardware stack levels required when called:    6
  1237 ;; This function calls:
  1238 ;;		_init
  1239 ;;		_loop
  1240 ;; This function is called by:
  1241 ;;		Startup code after reset
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245                           
  1246                           ;psect for function _main
  1247  03AD                     _main:	
  1248                           
  1249                           ;main.c: 31: init();
  1250                           
  1251                           ;incstack = 0
  1252                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1253  03AD  3182  2288  3183   	fcall	_init
  1254  03B0                     l1235:	
  1255                           ;main.c: 33: while(1) {
  1256                           
  1257                           
  1258                           ;main.c: 34: loop();
  1259  03B0  3183  23C5  3183   	fcall	_loop
  1260  03B3  2BB0               	goto	l1235
  1261  03B4                     __end_of_main:	
  1262                           ;main.c: 35: }
  1263                           ;main.c: 37: return (0);
  1264                           ;	Return value of _main is never used
  1265                           
  1266                           
  1267                           	psect	text1
  1268  03C5                     __ptext1:	
  1269 ;; *************** function _loop *****************
  1270 ;; Defined at:
  1271 ;;		line 86 in file "main.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;		None
  1274 ;; Auto vars:     Size  Location     Type
  1275 ;;		None
  1276 ;; Return value:  Size  Location     Type
  1277 ;;		None               void
  1278 ;; Registers used:
  1279 ;;		None
  1280 ;; Tracked objects:
  1281 ;;		On entry : 0/0
  1282 ;;		On exit  : 0/0
  1283 ;;		Unchanged: 0/0
  1284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1285 ;;      Params:         0       0       0       0       0       0
  1286 ;;      Locals:         0       0       0       0       0       0
  1287 ;;      Temps:          0       0       0       0       0       0
  1288 ;;      Totals:         0       0       0       0       0       0
  1289 ;;Total ram usage:        0 bytes
  1290 ;; Hardware stack levels used:    1
  1291 ;; Hardware stack levels required when called:    4
  1292 ;; This function calls:
  1293 ;;		Nothing
  1294 ;; This function is called by:
  1295 ;;		_main
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299                           
  1300                           ;psect for function _loop
  1301  03C5                     _loop:	
  1302                           
  1303                           ;incstack = 0
  1304                           ; Regs used in _loop: []
  1305  03C5  0008               	return
  1306  03C6                     __end_of_loop:	
  1307                           
  1308                           	psect	text2
  1309  0288                     __ptext2:	
  1310 ;; *************** function _init *****************
  1311 ;; Defined at:
  1312 ;;		line 40 in file "main.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;		None
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;		None
  1317 ;; Return value:  Size  Location     Type
  1318 ;;		None               void
  1319 ;; Registers used:
  1320 ;;		wreg, status,2, status,0, pclath, cstack
  1321 ;; Tracked objects:
  1322 ;;		On entry : 0/0
  1323 ;;		On exit  : 0/0
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1326 ;;      Params:         0       0       0       0       0       0
  1327 ;;      Locals:         0       0       0       0       0       0
  1328 ;;      Temps:          0       0       0       0       0       0
  1329 ;;      Totals:         0       0       0       0       0       0
  1330 ;;Total ram usage:        0 bytes
  1331 ;; Hardware stack levels used:    1
  1332 ;; Hardware stack levels required when called:    5
  1333 ;; This function calls:
  1334 ;;		_init_I2C_master
  1335 ;;		_init_PWM
  1336 ;;		_init_Timer2
  1337 ;;		_init_Timer4
  1338 ;;		_init_adcon
  1339 ;;		_init_interruption
  1340 ;; This function is called by:
  1341 ;;		_main
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           
  1345                           
  1346                           ;psect for function _init
  1347  0288                     _init:	
  1348                           
  1349                           ;main.c: 41: OSCCON = 0b01111010;
  1350                           
  1351                           ;incstack = 0
  1352                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  1353  0288  307A               	movlw	122
  1354  0289  0021               	movlb	1	; select bank1
  1355  028A  0099               	movwf	25	;volatile
  1356                           
  1357                           ;main.c: 42: ANSELA = 0b00000011;
  1358  028B  3003               	movlw	3
  1359  028C  0023               	movlb	3	; select bank3
  1360  028D  008C               	movwf	12	;volatile
  1361                           
  1362                           ;main.c: 43: ANSELB = 0b00000000;
  1363  028E  018D               	clrf	13	;volatile
  1364                           
  1365                           ;main.c: 44: TRISA = 0b11000011;
  1366  028F  30C3               	movlw	195
  1367  0290  0021               	movlb	1	; select bank1
  1368  0291  008C               	movwf	12	;volatile
  1369                           
  1370                           ;main.c: 45: TRISB = 0b00010010;
  1371  0292  3012               	movlw	18
  1372  0293  008D               	movwf	13	;volatile
  1373                           
  1374                           ;main.c: 46: PORTA = 0b00000000;
  1375  0294  0020               	movlb	0	; select bank0
  1376  0295  018C               	clrf	12	;volatile
  1377                           
  1378                           ;main.c: 47: PORTB = 0b00000000;
  1379  0296  018D               	clrf	13	;volatile
  1380                           
  1381                           ;main.c: 49: init_adcon(0b00000011, 0b00000000);
  1382  0297  3003               	movlw	3
  1383  0298  00B8               	movwf	init_adcon@anselA
  1384  0299  3000               	movlw	0
  1385  029A  00B9               	movwf	init_adcon@anselA+1
  1386  029B  3000               	movlw	0
  1387  029C  00BA               	movwf	init_adcon@anselB
  1388  029D  3000               	movlw	0
  1389  029E  00BB               	movwf	init_adcon@anselB+1
  1390  029F  3183  2366  3182   	fcall	_init_adcon
  1391                           
  1392                           ;main.c: 50: init_PWM();
  1393  02A2  3183  238D  3182   	fcall	_init_PWM
  1394                           
  1395                           ;main.c: 51: init_I2C_master();
  1396  02A5  3183  2374  3182   	fcall	_init_I2C_master
  1397                           
  1398                           ;main.c: 52: init_Timer2();
  1399  02A8  3183  23C0  3182   	fcall	_init_Timer2
  1400                           
  1401                           ;main.c: 53: init_Timer4();
  1402  02AB  3183  23BA  3182   	fcall	_init_Timer4
  1403                           
  1404                           ;main.c: 54: init_interruption();
  1405  02AE  3183  2382         	fcall	_init_interruption
  1406                           
  1407                           ;main.c: 56: RB3 = 1;
  1408  02B0  0020               	movlb	0	; select bank0
  1409  02B1  158D               	bsf	13,3	;volatile
  1410  02B2  0008               	return
  1411  02B3                     __end_of_init:	
  1412                           
  1413                           	psect	text3
  1414  0382                     __ptext3:	
  1415 ;; *************** function _init_interruption *****************
  1416 ;; Defined at:
  1417 ;;		line 77 in file "main.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;		None
  1420 ;; Auto vars:     Size  Location     Type
  1421 ;;		None
  1422 ;; Return value:  Size  Location     Type
  1423 ;;		None               void
  1424 ;; Registers used:
  1425 ;;		None
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 0/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1431 ;;      Params:         0       0       0       0       0       0
  1432 ;;      Locals:         0       0       0       0       0       0
  1433 ;;      Temps:          0       0       0       0       0       0
  1434 ;;      Totals:         0       0       0       0       0       0
  1435 ;;Total ram usage:        0 bytes
  1436 ;; Hardware stack levels used:    1
  1437 ;; Hardware stack levels required when called:    4
  1438 ;; This function calls:
  1439 ;;		Nothing
  1440 ;; This function is called by:
  1441 ;;		_init
  1442 ;; This function uses a non-reentrant model
  1443 ;;
  1444                           
  1445                           
  1446                           ;psect for function _init_interruption
  1447  0382                     _init_interruption:	
  1448                           
  1449                           ;main.c: 78: TMR2IE = 1;
  1450                           
  1451                           ;incstack = 0
  1452                           ; Regs used in _init_interruption: []
  1453  0382  0021               	movlb	1	; select bank1
  1454  0383  1491               	bsf	17,1	;volatile
  1455                           
  1456                           ;main.c: 79: TMR2IF = 0;
  1457  0384  0020               	movlb	0	; select bank0
  1458  0385  1091               	bcf	17,1	;volatile
  1459                           
  1460                           ;main.c: 80: TMR4IE = 1;
  1461  0386  0021               	movlb	1	; select bank1
  1462  0387  1493               	bsf	19,1	;volatile
  1463                           
  1464                           ;main.c: 81: TMR4IF = 0;
  1465  0388  0020               	movlb	0	; select bank0
  1466  0389  1093               	bcf	19,1	;volatile
  1467                           
  1468                           ;main.c: 82: GIE = 1;
  1469  038A  178B               	bsf	11,7	;volatile
  1470                           
  1471                           ;main.c: 83: PEIE = 1;
  1472  038B  170B               	bsf	11,6	;volatile
  1473  038C  0008               	return
  1474  038D                     __end_of_init_interruption:	
  1475                           
  1476                           	psect	text4
  1477  0366                     __ptext4:	
  1478 ;; *************** function _init_adcon *****************
  1479 ;; Defined at:
  1480 ;;		line 12 in file "adcon.c"
  1481 ;; Parameters:    Size  Location     Type
  1482 ;;  anselA          2   24[BANK0 ] int 
  1483 ;;  anselB          2   26[BANK0 ] int 
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;		None
  1486 ;; Return value:  Size  Location     Type
  1487 ;;		None               void
  1488 ;; Registers used:
  1489 ;;		wreg
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1495 ;;      Params:         0       4       0       0       0       0
  1496 ;;      Locals:         0       0       0       0       0       0
  1497 ;;      Temps:          0       0       0       0       0       0
  1498 ;;      Totals:         0       4       0       0       0       0
  1499 ;;Total ram usage:        4 bytes
  1500 ;; Hardware stack levels used:    1
  1501 ;; Hardware stack levels required when called:    4
  1502 ;; This function calls:
  1503 ;;		Nothing
  1504 ;; This function is called by:
  1505 ;;		_init
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           
  1510                           ;psect for function _init_adcon
  1511  0366                     _init_adcon:	
  1512                           
  1513                           ;adcon.c: 13: ANSELA = anselA;
  1514                           
  1515                           ;incstack = 0
  1516                           ; Regs used in _init_adcon: [wreg]
  1517  0366  0020               	movlb	0	; select bank0
  1518  0367  0838               	movf	init_adcon@anselA,w
  1519  0368  0023               	movlb	3	; select bank3
  1520  0369  008C               	movwf	12	;volatile
  1521                           
  1522                           ;adcon.c: 14: ANSELB = anselB;
  1523  036A  0020               	movlb	0	; select bank0
  1524  036B  083A               	movf	init_adcon@anselB,w
  1525  036C  0023               	movlb	3	; select bank3
  1526  036D  008D               	movwf	13	;volatile
  1527                           
  1528                           ;adcon.c: 21: ADCON1 = 0b10010000;
  1529  036E  3090               	movlw	144
  1530  036F  0021               	movlb	1	; select bank1
  1531  0370  009E               	movwf	30	;volatile
  1532                           
  1533                           ;adcon.c: 26: ADCON0 = 0b00000001;
  1534  0371  3001               	movlw	1
  1535  0372  009D               	movwf	29	;volatile
  1536  0373  0008               	return
  1537  0374                     __end_of_init_adcon:	
  1538                           
  1539                           	psect	text5
  1540  03BA                     __ptext5:	
  1541 ;; *************** function _init_Timer4 *****************
  1542 ;; Defined at:
  1543 ;;		line 71 in file "main.c"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;		None
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;		None
  1548 ;; Return value:  Size  Location     Type
  1549 ;;		None               void
  1550 ;; Registers used:
  1551 ;;		wreg, status,2
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1557 ;;      Params:         0       0       0       0       0       0
  1558 ;;      Locals:         0       0       0       0       0       0
  1559 ;;      Temps:          0       0       0       0       0       0
  1560 ;;      Totals:         0       0       0       0       0       0
  1561 ;;Total ram usage:        0 bytes
  1562 ;; Hardware stack levels used:    1
  1563 ;; Hardware stack levels required when called:    4
  1564 ;; This function calls:
  1565 ;;		Nothing
  1566 ;; This function is called by:
  1567 ;;		_init
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           
  1572                           ;psect for function _init_Timer4
  1573  03BA                     _init_Timer4:	
  1574                           
  1575                           ;main.c: 72: T4CON = 0b00000001;
  1576                           
  1577                           ;incstack = 0
  1578                           ; Regs used in _init_Timer4: [wreg+status,2]
  1579  03BA  3001               	movlw	1
  1580  03BB  0028               	movlb	8	; select bank8
  1581  03BC  0097               	movwf	23	;volatile
  1582                           
  1583                           ;main.c: 73: TMR4 = 0b00000000;
  1584  03BD  0195               	clrf	21	;volatile
  1585                           
  1586                           ;main.c: 74: TMR4ON = 1;
  1587  03BE  1517               	bsf	23,2	;volatile
  1588  03BF  0008               	return
  1589  03C0                     __end_of_init_Timer4:	
  1590                           
  1591                           	psect	text6
  1592  03C0                     __ptext6:	
  1593 ;; *************** function _init_Timer2 *****************
  1594 ;; Defined at:
  1595 ;;		line 62 in file "main.c"
  1596 ;; Parameters:    Size  Location     Type
  1597 ;;		None
  1598 ;; Auto vars:     Size  Location     Type
  1599 ;;		None
  1600 ;; Return value:  Size  Location     Type
  1601 ;;		None               void
  1602 ;; Registers used:
  1603 ;;		status,2
  1604 ;; Tracked objects:
  1605 ;;		On entry : 0/0
  1606 ;;		On exit  : 0/0
  1607 ;;		Unchanged: 0/0
  1608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1609 ;;      Params:         0       0       0       0       0       0
  1610 ;;      Locals:         0       0       0       0       0       0
  1611 ;;      Temps:          0       0       0       0       0       0
  1612 ;;      Totals:         0       0       0       0       0       0
  1613 ;;Total ram usage:        0 bytes
  1614 ;; Hardware stack levels used:    1
  1615 ;; Hardware stack levels required when called:    4
  1616 ;; This function calls:
  1617 ;;		Nothing
  1618 ;; This function is called by:
  1619 ;;		_init
  1620 ;; This function uses a non-reentrant model
  1621 ;;
  1622                           
  1623                           
  1624                           ;psect for function _init_Timer2
  1625  03C0                     _init_Timer2:	
  1626                           
  1627                           ;main.c: 63: T2CON = 0b00000000;
  1628                           
  1629                           ;incstack = 0
  1630                           ; Regs used in _init_Timer2: [status,2]
  1631  03C0  0020               	movlb	0	; select bank0
  1632  03C1  019C               	clrf	28	;volatile
  1633                           
  1634                           ;main.c: 64: TMR2 = 0b00000000;
  1635  03C2  019A               	clrf	26	;volatile
  1636                           
  1637                           ;main.c: 65: TMR2ON = 1;
  1638  03C3  151C               	bsf	28,2	;volatile
  1639  03C4  0008               	return
  1640  03C5                     __end_of_init_Timer2:	
  1641                           
  1642                           	psect	text7
  1643  038D                     __ptext7:	
  1644 ;; *************** function _init_PWM *****************
  1645 ;; Defined at:
  1646 ;;		line 15 in file "pwm.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;		None
  1649 ;; Auto vars:     Size  Location     Type
  1650 ;;		None
  1651 ;; Return value:  Size  Location     Type
  1652 ;;		None               void
  1653 ;; Registers used:
  1654 ;;		wreg, status,2
  1655 ;; Tracked objects:
  1656 ;;		On entry : 0/0
  1657 ;;		On exit  : 0/0
  1658 ;;		Unchanged: 0/0
  1659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1660 ;;      Params:         0       0       0       0       0       0
  1661 ;;      Locals:         0       0       0       0       0       0
  1662 ;;      Temps:          0       0       0       0       0       0
  1663 ;;      Totals:         0       0       0       0       0       0
  1664 ;;Total ram usage:        0 bytes
  1665 ;; Hardware stack levels used:    1
  1666 ;; Hardware stack levels required when called:    4
  1667 ;; This function calls:
  1668 ;;		Nothing
  1669 ;; This function is called by:
  1670 ;;		_init
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674                           
  1675                           ;psect for function _init_PWM
  1676  038D                     _init_PWM:	
  1677                           
  1678                           ;pwm.c: 16: CCPTMRS = 0b00000000;
  1679                           
  1680                           ;incstack = 0
  1681                           ; Regs used in _init_PWM: [wreg+status,2]
  1682  038D  0025               	movlb	5	; select bank5
  1683  038E  019E               	clrf	30	;volatile
  1684                           
  1685                           ;pwm.c: 17: CCP3CON = 0b00001100;
  1686  038F  300C               	movlw	12
  1687  0390  0026               	movlb	6	; select bank6
  1688  0391  0093               	movwf	19	;volatile
  1689                           
  1690                           ;pwm.c: 18: CCPR3L = 0;
  1691  0392  0191               	clrf	17	;volatile
  1692                           
  1693                           ;pwm.c: 19: CCPR3H = 0;
  1694  0393  0192               	clrf	18	;volatile
  1695                           
  1696                           ;pwm.c: 20: PR2 = 255;
  1697  0394  30FF               	movlw	255
  1698  0395  0020               	movlb	0	; select bank0
  1699  0396  009B               	movwf	27	;volatile
  1700  0397  0008               	return
  1701  0398                     __end_of_init_PWM:	
  1702                           
  1703                           	psect	text8
  1704  0374                     __ptext8:	
  1705 ;; *************** function _init_I2C_master *****************
  1706 ;; Defined at:
  1707 ;;		line 15 in file "I2C.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;		None
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;		None
  1712 ;; Return value:  Size  Location     Type
  1713 ;;		None               void
  1714 ;; Registers used:
  1715 ;;		wreg
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/0
  1718 ;;		On exit  : 0/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1721 ;;      Params:         0       0       0       0       0       0
  1722 ;;      Locals:         0       0       0       0       0       0
  1723 ;;      Temps:          0       0       0       0       0       0
  1724 ;;      Totals:         0       0       0       0       0       0
  1725 ;;Total ram usage:        0 bytes
  1726 ;; Hardware stack levels used:    1
  1727 ;; Hardware stack levels required when called:    4
  1728 ;; This function calls:
  1729 ;;		Nothing
  1730 ;; This function is called by:
  1731 ;;		_init
  1732 ;; This function uses a non-reentrant model
  1733 ;;
  1734                           
  1735                           
  1736                           ;psect for function _init_I2C_master
  1737  0374                     _init_I2C_master:	
  1738                           
  1739                           ;I2C.c: 16: SSP1STAT = 0b10000000;
  1740                           
  1741                           ;incstack = 0
  1742                           ; Regs used in _init_I2C_master: [wreg]
  1743  0374  3080               	movlw	128
  1744  0375  0024               	movlb	4	; select bank4
  1745  0376  0094               	movwf	20	;volatile
  1746                           
  1747                           ;I2C.c: 17: SSP1CON1 = 0b00101000;
  1748  0377  3028               	movlw	40
  1749  0378  0095               	movwf	21	;volatile
  1750                           
  1751                           ;I2C.c: 18: SSP1ADD = 0x27;
  1752  0379  3027               	movlw	39
  1753  037A  0092               	movwf	18	;volatile
  1754                           
  1755                           ;I2C.c: 19: SSP1IE = 1;
  1756  037B  0021               	movlb	1	; select bank1
  1757  037C  1591               	bsf	17,3	;volatile
  1758                           
  1759                           ;I2C.c: 20: BCL1IE = 1;
  1760  037D  1592               	bsf	18,3	;volatile
  1761                           
  1762                           ;I2C.c: 21: SSP1IF = 0;
  1763  037E  0020               	movlb	0	; select bank0
  1764  037F  1191               	bcf	17,3	;volatile
  1765                           
  1766                           ;I2C.c: 22: BCL1IF = 0;
  1767  0380  1192               	bcf	18,3	;volatile
  1768  0381  0008               	return
  1769  0382                     __end_of_init_I2C_master:	
  1770                           
  1771                           	psect	intentry
  1772  0004                     __pintentry:	
  1773 ;; *************** function _inter *****************
  1774 ;; Defined at:
  1775 ;;		line 90 in file "main.c"
  1776 ;; Parameters:    Size  Location     Type
  1777 ;;		None
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;  data            1   23[BANK0 ] unsigned char 
  1780 ;; Return value:  Size  Location     Type
  1781 ;;		None               void
  1782 ;; Registers used:
  1783 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1784 ;; Tracked objects:
  1785 ;;		On entry : 0/0
  1786 ;;		On exit  : 0/0
  1787 ;;		Unchanged: 0/0
  1788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1789 ;;      Params:         0       0       0       0       0       0
  1790 ;;      Locals:         0       1       0       0       0       0
  1791 ;;      Temps:          0       4       0       0       0       0
  1792 ;;      Totals:         0       5       0       0       0       0
  1793 ;;Total ram usage:        5 bytes
  1794 ;; Hardware stack levels used:    1
  1795 ;; Hardware stack levels required when called:    3
  1796 ;; This function calls:
  1797 ;;		_I2C_send_data
  1798 ;;		_PID
  1799 ;;		_measure
  1800 ;;		_output_PWM
  1801 ;;		_safety_check
  1802 ;; This function is called by:
  1803 ;;		Interrupt level 1
  1804 ;; This function uses a non-reentrant model
  1805 ;;
  1806                           
  1807  0004                     _inter:	
  1808                           
  1809                           ;incstack = 0
  1810                           ; Regs used in _inter: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1811  0004  147E               	bsf	126,0	;set compiler interrupt flag
  1812  0005  3180               	pagesel	$
  1813  0006  0020               	movlb	0	; select bank0
  1814  0007  087F               	movf	127,w
  1815  0008  00B6               	movwf	??_inter+3
  1816                           
  1817                           ;main.c: 91: static int cnt_tmr2 = 0;
  1818                           ;main.c: 92: static int cnt_tmr4 = 0;
  1819                           ;main.c: 94: if (TMR2IF == 1) {
  1820  0009  1C91               	btfss	17,1	;volatile
  1821  000A  284F               	goto	i1l1253
  1822                           
  1823                           ;main.c: 95: if (cnt_tmr2++ > 8) {
  1824  000B  3001               	movlw	1
  1825  000C  07C6               	addwf	inter@cnt_tmr2,f
  1826  000D  3000               	movlw	0
  1827  000E  3DC7               	addwfc	inter@cnt_tmr2+1,f
  1828  000F  0847               	movf	inter@cnt_tmr2+1,w
  1829  0010  3A80               	xorlw	128
  1830  0011  00B3               	movwf	??_inter
  1831  0012  3080               	movlw	128
  1832  0013  0233               	subwf	??_inter,w
  1833  0014  1D03               	skipz
  1834  0015  2818               	goto	u67_25
  1835  0016  300A               	movlw	10
  1836  0017  0246               	subwf	inter@cnt_tmr2,w
  1837  0018                     u67_25:	
  1838  0018  1C03               	skipc
  1839  0019  284D               	goto	i1l1251
  1840                           
  1841                           ;main.c: 96: cnt_tmr2 = 0;
  1842  001A  0020               	movlb	0	; select bank0
  1843  001B  01C6               	clrf	inter@cnt_tmr2
  1844  001C  01C7               	clrf	inter@cnt_tmr2+1
  1845                           
  1846                           ;main.c: 97: if (safety_check()) {
  1847  001D  3183  2398  3180   	fcall	_safety_check
  1848  0020  0871               	movf	?_safety_check+1,w
  1849  0021  0470               	iorwf	?_safety_check,w
  1850  0022  1903               	skipnz
  1851  0023  2840               	goto	i1l1247
  1852                           
  1853                           ;main.c: 99: measure(&volume, &current);
  1854  0024  304A               	movlw	_current& (0+255)
  1855  0025  0020               	movlb	0	; select bank0
  1856  0026  00B3               	movwf	??_inter
  1857  0027  0833               	movf	??_inter,w
  1858  0028  00A0               	movwf	measure@current
  1859  0029  304F               	movlw	_volume& (0+255)
  1860  002A  3182  2249  3180   	fcall	_measure
  1861                           
  1862                           ;main.c: 100: PID(volume, 0, &power);
  1863  002D  0020               	movlb	0	; select bank0
  1864  002E  0850               	movf	_volume+1,w
  1865  002F  01A1               	clrf	PID@ref+1
  1866  0030  07A1               	addwf	PID@ref+1,f
  1867  0031  084F               	movf	_volume,w
  1868  0032  01A0               	clrf	PID@ref
  1869  0033  07A0               	addwf	PID@ref,f
  1870  0034  3000               	movlw	0
  1871  0035  00A2               	movwf	PID@mes
  1872  0036  3000               	movlw	0
  1873  0037  00A3               	movwf	PID@mes+1
  1874  0038  304D               	movlw	_power& (0+255)
  1875  0039  00B3               	movwf	??_inter
  1876  003A  0833               	movf	??_inter,w
  1877  003B  00A4               	movwf	PID@power
  1878  003C  3180  208F  3180   	fcall	_PID
  1879                           
  1880                           ;main.c: 101: }
  1881  003F  2843               	goto	i1l1249
  1882  0040                     i1l1247:	
  1883                           
  1884                           ;main.c: 102: else {
  1885                           ;main.c: 104: power = 0;
  1886  0040  0020               	movlb	0	; select bank0
  1887  0041  01CD               	clrf	_power
  1888  0042  01CE               	clrf	_power+1
  1889  0043                     i1l1249:	
  1890                           
  1891                           ;main.c: 105: }
  1892                           ;main.c: 106: output_PWM(power);
  1893  0043  0020               	movlb	0	; select bank0
  1894  0044  084E               	movf	_power+1,w
  1895  0045  01F1               	clrf	output_PWM@out+1
  1896  0046  07F1               	addwf	output_PWM@out+1,f
  1897  0047  084D               	movf	_power,w
  1898  0048  01F0               	clrf	output_PWM@out
  1899  0049  07F0               	addwf	output_PWM@out,f
  1900  004A  3183  234F  3180   	fcall	_output_PWM
  1901  004D                     i1l1251:	
  1902                           
  1903                           ;main.c: 107: }
  1904                           ;main.c: 108: TMR2IF = 0;
  1905  004D  0020               	movlb	0	; select bank0
  1906  004E  1091               	bcf	17,1	;volatile
  1907  004F                     i1l1253:	
  1908                           
  1909                           ;main.c: 109: }
  1910                           ;main.c: 111: if (TMR4IF == 1) {
  1911  004F  1C93               	btfss	19,1	;volatile
  1912  0050  287E               	goto	i1l106
  1913                           
  1914                           ;main.c: 112: if (cnt_tmr4++ > 1024) {
  1915  0051  3001               	movlw	1
  1916  0052  07C8               	addwf	inter@cnt_tmr4,f
  1917  0053  3000               	movlw	0
  1918  0054  3DC9               	addwfc	inter@cnt_tmr4+1,f
  1919  0055  0849               	movf	inter@cnt_tmr4+1,w
  1920  0056  3A80               	xorlw	128
  1921  0057  00B3               	movwf	??_inter
  1922  0058  3084               	movlw	132
  1923  0059  0233               	subwf	??_inter,w
  1924  005A  1D03               	skipz
  1925  005B  285E               	goto	u70_25
  1926  005C  3002               	movlw	2
  1927  005D  0248               	subwf	inter@cnt_tmr4,w
  1928  005E                     u70_25:	
  1929  005E  1C03               	skipc
  1930  005F  287C               	goto	i1l1263
  1931                           
  1932                           ;main.c: 113: cnt_tmr4 = 0;
  1933  0060  0020               	movlb	0	; select bank0
  1934  0061  01C8               	clrf	inter@cnt_tmr4
  1935  0062  01C9               	clrf	inter@cnt_tmr4+1
  1936                           
  1937                           ;main.c: 114: char data = (power >> 2) & 0xFF;
  1938  0063  084E               	movf	_power+1,w
  1939  0064  00B4               	movwf	??_inter+1
  1940  0065  084D               	movf	_power,w
  1941  0066  00B3               	movwf	??_inter
  1942  0067  0D34               	rlf	??_inter+1,w
  1943  0068  0CB4               	rrf	??_inter+1,f
  1944  0069  0CB3               	rrf	??_inter,f
  1945  006A  0D34               	rlf	??_inter+1,w
  1946  006B  0CB4               	rrf	??_inter+1,f
  1947  006C  0CB3               	rrf	??_inter,f
  1948  006D  0833               	movf	??_inter,w
  1949  006E  00B5               	movwf	??_inter+2
  1950  006F  0835               	movf	??_inter+2,w
  1951  0070  00B7               	movwf	inter@data
  1952                           
  1953                           ;main.c: 115: I2C_send_data((0x02), &data, 1);
  1954  0071  3037               	movlw	inter@data& (0+255)
  1955  0072  00B3               	movwf	??_inter
  1956  0073  0833               	movf	??_inter,w
  1957  0074  00F4               	movwf	I2C_send_data@data
  1958  0075  3001               	movlw	1
  1959  0076  00F5               	movwf	I2C_send_data@length
  1960  0077  3000               	movlw	0
  1961  0078  00F6               	movwf	I2C_send_data@length+1
  1962  0079  3002               	movlw	2
  1963  007A  3182  2208         	fcall	_I2C_send_data
  1964  007C                     i1l1263:	
  1965                           
  1966                           ;main.c: 116: }
  1967                           ;main.c: 117: TMR4IF = 0;
  1968  007C  0020               	movlb	0	; select bank0
  1969  007D  1093               	bcf	19,1	;volatile
  1970  007E                     i1l106:	
  1971  007E  0836               	movf	??_inter+3,w
  1972  007F  00FF               	movwf	127
  1973  0080  107E               	bcf	126,0	;clear compiler interrupt flag
  1974  0081  0009               	retfie
  1975  0082                     __end_of_inter:	
  1976                           
  1977                           	psect	text10
  1978  0398                     __ptext10:	
  1979 ;; *************** function _safety_check *****************
  1980 ;; Defined at:
  1981 ;;		line 18 in file "controller.c"
  1982 ;; Parameters:    Size  Location     Type
  1983 ;;		None
  1984 ;; Auto vars:     Size  Location     Type
  1985 ;;		None
  1986 ;; Return value:  Size  Location     Type
  1987 ;;                  2    0[COMMON] int 
  1988 ;; Registers used:
  1989 ;;		wreg, status,2
  1990 ;; Tracked objects:
  1991 ;;		On entry : 0/0
  1992 ;;		On exit  : 0/0
  1993 ;;		Unchanged: 0/0
  1994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1995 ;;      Params:         2       0       0       0       0       0
  1996 ;;      Locals:         0       0       0       0       0       0
  1997 ;;      Temps:          0       0       0       0       0       0
  1998 ;;      Totals:         2       0       0       0       0       0
  1999 ;;Total ram usage:        2 bytes
  2000 ;; Hardware stack levels used:    1
  2001 ;; This function calls:
  2002 ;;		Nothing
  2003 ;; This function is called by:
  2004 ;;		_inter
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           
  2009                           ;psect for function _safety_check
  2010  0398                     _safety_check:	
  2011                           
  2012                           ;controller.c: 20: if (RA6 == 1) {
  2013                           
  2014                           ;incstack = 0
  2015                           ; Regs used in _safety_check: [wreg+status,2]
  2016  0398  0020               	movlb	0	; select bank0
  2017  0399  1F0C               	btfss	12,6	;volatile
  2018  039A  2B9E               	goto	i1l1163
  2019                           
  2020                           ;controller.c: 21: return 0;
  2021  039B  01F0               	clrf	?_safety_check
  2022  039C  01F1               	clrf	?_safety_check+1
  2023                           
  2024                           ;controller.c: 22: }
  2025  039D  0008               	return
  2026  039E                     i1l1163:	
  2027                           
  2028                           ;controller.c: 23: else {
  2029                           ;controller.c: 24: return 1;
  2030  039E  3001               	movlw	1
  2031  039F  00F0               	movwf	?_safety_check
  2032  03A0  3000               	movlw	0
  2033  03A1  00F1               	movwf	?_safety_check+1
  2034  03A2  0008               	return
  2035  03A3                     __end_of_safety_check:	
  2036                           
  2037                           	psect	text11
  2038  034F                     __ptext11:	
  2039 ;; *************** function _output_PWM *****************
  2040 ;; Defined at:
  2041 ;;		line 32 in file "pwm.c"
  2042 ;; Parameters:    Size  Location     Type
  2043 ;;  out             2    0[COMMON] int 
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;		None
  2046 ;; Return value:  Size  Location     Type
  2047 ;;		None               void
  2048 ;; Registers used:
  2049 ;;		wreg, status,2, status,0
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2055 ;;      Params:         2       0       0       0       0       0
  2056 ;;      Locals:         0       0       0       0       0       0
  2057 ;;      Temps:          2       0       0       0       0       0
  2058 ;;      Totals:         4       0       0       0       0       0
  2059 ;;Total ram usage:        4 bytes
  2060 ;; Hardware stack levels used:    1
  2061 ;; This function calls:
  2062 ;;		Nothing
  2063 ;; This function is called by:
  2064 ;;		_inter
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           
  2069                           ;psect for function _output_PWM
  2070  034F                     _output_PWM:	
  2071                           
  2072                           ;pwm.c: 33: CCPR3L = out >> 2;
  2073                           
  2074                           ;incstack = 0
  2075                           ; Regs used in _output_PWM: [wreg+status,2+status,0]
  2076  034F  0871               	movf	output_PWM@out+1,w
  2077  0350  00F3               	movwf	??_output_PWM+1
  2078  0351  0870               	movf	output_PWM@out,w
  2079  0352  00F2               	movwf	??_output_PWM
  2080  0353  0D73               	rlf	??_output_PWM+1,w
  2081  0354  0CF3               	rrf	??_output_PWM+1,f
  2082  0355  0CF2               	rrf	??_output_PWM,f
  2083  0356  0D73               	rlf	??_output_PWM+1,w
  2084  0357  0CF3               	rrf	??_output_PWM+1,f
  2085  0358  0CF2               	rrf	??_output_PWM,f
  2086  0359  0872               	movf	??_output_PWM,w
  2087  035A  0026               	movlb	6	; select bank6
  2088  035B  0091               	movwf	17	;volatile
  2089                           
  2090                           ;pwm.c: 34: CCP3CONbits.DC3B = out & 0x03;
  2091  035C  0870               	movf	output_PWM@out,w
  2092  035D  3903               	andlw	3
  2093  035E  00F2               	movwf	??_output_PWM
  2094  035F  0EF2               	swapf	??_output_PWM,f
  2095  0360  0813               	movf	19,w	;volatile
  2096  0361  0672               	xorwf	??_output_PWM,w
  2097  0362  39CF               	andlw	-49
  2098  0363  0672               	xorwf	??_output_PWM,w
  2099  0364  0093               	movwf	19	;volatile
  2100  0365  0008               	return
  2101  0366                     __end_of_output_PWM:	
  2102                           
  2103                           	psect	text12
  2104  0249                     __ptext12:	
  2105 ;; *************** function _measure *****************
  2106 ;; Defined at:
  2107 ;;		line 35 in file "controller.c"
  2108 ;; Parameters:    Size  Location     Type
  2109 ;;  volume          1    wreg     PTR int 
  2110 ;;		 -> volume(2), 
  2111 ;;  current         1    0[BANK0 ] PTR float 
  2112 ;;		 -> current(3), 
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;  volume          1    3[BANK0 ] PTR int 
  2115 ;;		 -> volume(2), 
  2116 ;;  current_sens    2    1[BANK0 ] int 
  2117 ;; Return value:  Size  Location     Type
  2118 ;;		None               void
  2119 ;; Registers used:
  2120 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2126 ;;      Params:         0       1       0       0       0       0
  2127 ;;      Locals:         0       3       0       0       0       0
  2128 ;;      Temps:          0       0       0       0       0       0
  2129 ;;      Totals:         0       4       0       0       0       0
  2130 ;;Total ram usage:        4 bytes
  2131 ;; Hardware stack levels used:    1
  2132 ;; Hardware stack levels required when called:    2
  2133 ;; This function calls:
  2134 ;;		___awtoft
  2135 ;;		___wmul
  2136 ;;		_adconv
  2137 ;; This function is called by:
  2138 ;;		_inter
  2139 ;; This function uses a non-reentrant model
  2140 ;;
  2141                           
  2142                           
  2143                           ;psect for function _measure
  2144  0249                     _measure:	
  2145                           
  2146                           ;incstack = 0
  2147                           ; Regs used in _measure: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2148                           ;measure@volume stored from wreg
  2149  0249  0020               	movlb	0	; select bank0
  2150  024A  00A3               	movwf	measure@volume
  2151                           
  2152                           ;controller.c: 36: *volume = adconv(0b00000001);
  2153  024B  3001               	movlw	1
  2154  024C  00F0               	movwf	adconv@pin_select
  2155  024D  3000               	movlw	0
  2156  024E  00F1               	movwf	adconv@pin_select+1
  2157  024F  3181  2182  3182   	fcall	_adconv
  2158  0252  0020               	movlb	0	; select bank0
  2159  0253  0823               	movf	measure@volume,w
  2160  0254  0086               	movwf	6
  2161  0255  0187               	clrf	7
  2162  0256  0870               	movf	?_adconv,w
  2163  0257  3FC0               	movwi [0]fsr1
  2164  0258  0871               	movf	?_adconv+1,w
  2165  0259  3FC1               	movwi [1]fsr1
  2166                           
  2167                           ;controller.c: 37: int current_sens = adconv(0b00000101);
  2168  025A  3005               	movlw	5
  2169  025B  00F0               	movwf	adconv@pin_select
  2170  025C  3000               	movlw	0
  2171  025D  00F1               	movwf	adconv@pin_select+1
  2172  025E  3181  2182  3182   	fcall	_adconv
  2173  0261  0871               	movf	?_adconv+1,w
  2174  0262  0020               	movlb	0	; select bank0
  2175  0263  01A2               	clrf	measure@current_sens+1
  2176  0264  07A2               	addwf	measure@current_sens+1,f
  2177  0265  0870               	movf	?_adconv,w
  2178  0266  01A1               	clrf	measure@current_sens
  2179  0267  07A1               	addwf	measure@current_sens,f
  2180                           
  2181                           ;controller.c: 40: *current = 0 * current_sens;
  2182  0268  0822               	movf	measure@current_sens+1,w
  2183  0269  01F1               	clrf	___wmul@multiplier+1
  2184  026A  07F1               	addwf	___wmul@multiplier+1,f
  2185  026B  0821               	movf	measure@current_sens,w
  2186  026C  01F0               	clrf	___wmul@multiplier
  2187  026D  07F0               	addwf	___wmul@multiplier,f
  2188  026E  3000               	movlw	0
  2189  026F  00F2               	movwf	___wmul@multiplicand
  2190  0270  3000               	movlw	0
  2191  0271  00F3               	movwf	___wmul@multiplicand+1
  2192  0272  3183  2319  3182   	fcall	___wmul
  2193  0275  0871               	movf	?___wmul+1,w
  2194  0276  01F9               	clrf	___awtoft@c+1
  2195  0277  07F9               	addwf	___awtoft@c+1,f
  2196  0278  0870               	movf	?___wmul,w
  2197  0279  01F8               	clrf	___awtoft@c
  2198  027A  07F8               	addwf	___awtoft@c,f
  2199  027B  3182  22F9         	fcall	___awtoft
  2200  027D  0020               	movlb	0	; select bank0
  2201  027E  0820               	movf	measure@current,w
  2202  027F  0086               	movwf	6
  2203  0280  0187               	clrf	7
  2204  0281  0878               	movf	?___awtoft,w
  2205  0282  3FC0               	movwi [0]fsr1
  2206  0283  0879               	movf	?___awtoft+1,w
  2207  0284  3FC1               	movwi [1]fsr1
  2208  0285  087A               	movf	?___awtoft+2,w
  2209  0286  3FC2               	movwi [2]fsr1
  2210  0287  0008               	return
  2211  0288                     __end_of_measure:	
  2212                           
  2213                           	psect	text13
  2214  0182                     __ptext13:	
  2215 ;; *************** function _adconv *****************
  2216 ;; Defined at:
  2217 ;;		line 29 in file "adcon.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;  pin_select      2    0[COMMON] int 
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;  temp            2    9[COMMON] int 
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  2    0[COMMON] int 
  2224 ;; Registers used:
  2225 ;;		wreg, status,2, status,0
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2231 ;;      Params:         2       0       0       0       0       0
  2232 ;;      Locals:         2       0       0       0       0       0
  2233 ;;      Temps:          7       0       0       0       0       0
  2234 ;;      Totals:        11       0       0       0       0       0
  2235 ;;Total ram usage:       11 bytes
  2236 ;; Hardware stack levels used:    1
  2237 ;; This function calls:
  2238 ;;		Nothing
  2239 ;; This function is called by:
  2240 ;;		_measure
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244                           
  2245                           ;psect for function _adconv
  2246  0182                     _adconv:	
  2247                           
  2248                           ;adcon.c: 30: int temp;
  2249                           ;adcon.c: 33: ADCON0 = pin_select;
  2250                           
  2251                           ;incstack = 0
  2252                           ; Regs used in _adconv: [wreg+status,2+status,0]
  2253  0182  0870               	movf	adconv@pin_select,w
  2254  0183  0021               	movlb	1	; select bank1
  2255  0184  009D               	movwf	29	;volatile
  2256                           
  2257                           ;adcon.c: 36: for (temp = 0; temp < 10; temp++) { }
  2258  0185  01F9               	clrf	adconv@temp
  2259  0186  01FA               	clrf	adconv@temp+1
  2260  0187  087A               	movf	adconv@temp+1,w
  2261  0188  3A80               	xorlw	128
  2262  0189  00F2               	movwf	??_adconv
  2263  018A  3080               	movlw	128
  2264  018B  0272               	subwf	??_adconv,w
  2265  018C  1D03               	skipz
  2266  018D  2990               	goto	u51_25
  2267  018E  300A               	movlw	10
  2268  018F  0279               	subwf	adconv@temp,w
  2269  0190                     u51_25:	
  2270  0190  1803               	btfsc	3,0
  2271  0191  29A1               	goto	i1l127
  2272  0192                     i1l1069:	
  2273  0192  3001               	movlw	1
  2274  0193  07F9               	addwf	adconv@temp,f
  2275  0194  3000               	movlw	0
  2276  0195  3DFA               	addwfc	adconv@temp+1,f
  2277  0196  087A               	movf	adconv@temp+1,w
  2278  0197  3A80               	xorlw	128
  2279  0198  00F2               	movwf	??_adconv
  2280  0199  3080               	movlw	128
  2281  019A  0272               	subwf	??_adconv,w
  2282  019B  1D03               	skipz
  2283  019C  299F               	goto	u52_25
  2284  019D  300A               	movlw	10
  2285  019E  0279               	subwf	adconv@temp,w
  2286  019F                     u52_25:	
  2287  019F  1C03               	skipc
  2288  01A0  2992               	goto	i1l1069
  2289  01A1                     i1l127:	
  2290                           
  2291                           ;adcon.c: 38: GO_nDONE = 1;
  2292  01A1  0021               	movlb	1	; select bank1
  2293  01A2  149D               	bsf	29,1	;volatile
  2294  01A3                     i1l128:	
  2295                           ;adcon.c: 39: while(GO_nDONE);
  2296                           
  2297  01A3  189D               	btfsc	29,1	;volatile
  2298  01A4  29A3               	goto	i1l128
  2299                           
  2300                           ;adcon.c: 40: temp = ADRESH;
  2301  01A5  081C               	movf	28,w	;volatile
  2302  01A6  00F2               	movwf	??_adconv
  2303  01A7  01F3               	clrf	??_adconv+1
  2304  01A8  0872               	movf	??_adconv,w
  2305  01A9  00F9               	movwf	adconv@temp
  2306  01AA  0873               	movf	??_adconv+1,w
  2307  01AB  00FA               	movwf	adconv@temp+1
  2308                           
  2309                           ;adcon.c: 41: temp = (temp << 8) | ADRESL;
  2310  01AC  081B               	movf	27,w	;volatile
  2311  01AD  00F2               	movwf	??_adconv
  2312  01AE  01F3               	clrf	??_adconv+1
  2313  01AF  087A               	movf	adconv@temp+1,w
  2314  01B0  00F5               	movwf	??_adconv+3
  2315  01B1  0879               	movf	adconv@temp,w
  2316  01B2  00F4               	movwf	??_adconv+2
  2317  01B3  0874               	movf	??_adconv+2,w
  2318  01B4  00F5               	movwf	??_adconv+3
  2319  01B5  01F4               	clrf	??_adconv+2
  2320  01B6  0872               	movf	??_adconv,w
  2321  01B7  0474               	iorwf	??_adconv+2,w
  2322  01B8  00F7               	movwf	??_adconv+5
  2323  01B9  0873               	movf	??_adconv+1,w
  2324  01BA  0475               	iorwf	??_adconv+3,w
  2325  01BB  00F8               	movwf	??_adconv+6
  2326  01BC  0877               	movf	??_adconv+5,w
  2327  01BD  00F9               	movwf	adconv@temp
  2328  01BE  0878               	movf	??_adconv+6,w
  2329  01BF  00FA               	movwf	adconv@temp+1
  2330                           
  2331                           ;adcon.c: 42: return temp;
  2332  01C0  087A               	movf	adconv@temp+1,w
  2333  01C1  01F1               	clrf	?_adconv+1
  2334  01C2  07F1               	addwf	?_adconv+1,f
  2335  01C3  0879               	movf	adconv@temp,w
  2336  01C4  01F0               	clrf	?_adconv
  2337  01C5  07F0               	addwf	?_adconv,f
  2338  01C6  0008               	return
  2339  01C7                     __end_of_adconv:	
  2340                           
  2341                           	psect	text14
  2342  02F9                     __ptext14:	
  2343 ;; *************** function ___awtoft *****************
  2344 ;; Defined at:
  2345 ;;		line 32 in file "C:\isaka\application\compiler\xc\xc8\sources\common\awtoft.c"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;  c               2    8[COMMON] int 
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;  sign            1   13[COMMON] unsigned char 
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  3    8[COMMON] float 
  2352 ;; Registers used:
  2353 ;;		wreg, status,2, status,0, pclath, cstack
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2359 ;;      Params:         3       0       0       0       0       0
  2360 ;;      Locals:         1       0       0       0       0       0
  2361 ;;      Temps:          2       0       0       0       0       0
  2362 ;;      Totals:         6       0       0       0       0       0
  2363 ;;Total ram usage:        6 bytes
  2364 ;; Hardware stack levels used:    1
  2365 ;; Hardware stack levels required when called:    1
  2366 ;; This function calls:
  2367 ;;		___ftpack
  2368 ;; This function is called by:
  2369 ;;		_measure
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373                           
  2374                           ;psect for function ___awtoft
  2375  02F9                     ___awtoft:	
  2376                           
  2377                           ;incstack = 0
  2378                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  2379  02F9  01FD               	clrf	___awtoft@sign
  2380  02FA  1FF9               	btfss	___awtoft@c+1,7
  2381  02FB  2B03               	goto	i1l1125
  2382  02FC  09F8               	comf	___awtoft@c,f
  2383  02FD  09F9               	comf	___awtoft@c+1,f
  2384  02FE  0AF8               	incf	___awtoft@c,f
  2385  02FF  1903               	skipnz
  2386  0300  0AF9               	incf	___awtoft@c+1,f
  2387  0301  01FD               	clrf	___awtoft@sign
  2388  0302  0AFD               	incf	___awtoft@sign,f
  2389  0303                     i1l1125:	
  2390  0303  0878               	movf	___awtoft@c,w
  2391  0304  00F0               	movwf	___ftpack@arg
  2392  0305  0879               	movf	___awtoft@c+1,w
  2393  0306  00F1               	movwf	___ftpack@arg+1
  2394  0307  01F2               	clrf	___ftpack@arg+2
  2395  0308  308E               	movlw	142
  2396  0309  00FB               	movwf	??___awtoft
  2397  030A  087B               	movf	??___awtoft,w
  2398  030B  00F3               	movwf	___ftpack@exp
  2399  030C  087D               	movf	___awtoft@sign,w
  2400  030D  00FC               	movwf	??___awtoft+1
  2401  030E  087C               	movf	??___awtoft+1,w
  2402  030F  00F4               	movwf	___ftpack@sign
  2403  0310  3181  2122         	fcall	___ftpack
  2404  0312  0870               	movf	?___ftpack,w
  2405  0313  00F8               	movwf	?___awtoft
  2406  0314  0871               	movf	?___ftpack+1,w
  2407  0315  00F9               	movwf	?___awtoft+1
  2408  0316  0872               	movf	?___ftpack+2,w
  2409  0317  00FA               	movwf	?___awtoft+2
  2410  0318  0008               	return
  2411  0319                     __end_of___awtoft:	
  2412                           
  2413                           	psect	text15
  2414  0122                     __ptext15:	
  2415 ;; *************** function ___ftpack *****************
  2416 ;; Defined at:
  2417 ;;		line 62 in file "C:\isaka\application\compiler\xc\xc8\sources\common\float.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;  arg             3    0[COMMON] unsigned um
  2420 ;;  exp             1    3[COMMON] unsigned char 
  2421 ;;  sign            1    4[COMMON] unsigned char 
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;		None
  2424 ;; Return value:  Size  Location     Type
  2425 ;;                  3    0[COMMON] float 
  2426 ;; Registers used:
  2427 ;;		wreg, status,2, status,0
  2428 ;; Tracked objects:
  2429 ;;		On entry : 0/0
  2430 ;;		On exit  : 0/0
  2431 ;;		Unchanged: 0/0
  2432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2433 ;;      Params:         5       0       0       0       0       0
  2434 ;;      Locals:         0       0       0       0       0       0
  2435 ;;      Temps:          3       0       0       0       0       0
  2436 ;;      Totals:         8       0       0       0       0       0
  2437 ;;Total ram usage:        8 bytes
  2438 ;; Hardware stack levels used:    1
  2439 ;; This function calls:
  2440 ;;		Nothing
  2441 ;; This function is called by:
  2442 ;;		___awtoft
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446                           
  2447                           ;psect for function ___ftpack
  2448  0122                     ___ftpack:	
  2449                           
  2450                           ;incstack = 0
  2451                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2452  0122  0873               	movf	___ftpack@exp,w
  2453  0123  1903               	btfsc	3,2
  2454  0124  292A               	goto	i1l1001
  2455  0125  0872               	movf	___ftpack@arg+2,w
  2456  0126  0471               	iorwf	___ftpack@arg+1,w
  2457  0127  0470               	iorwf	___ftpack@arg,w
  2458  0128  1D03               	skipz
  2459  0129  293B               	goto	i1l1007
  2460  012A                     i1l1001:	
  2461  012A  3000               	movlw	0
  2462  012B  00F0               	movwf	?___ftpack
  2463  012C  3000               	movlw	0
  2464  012D  00F1               	movwf	?___ftpack+1
  2465  012E  3000               	movlw	0
  2466  012F  00F2               	movwf	?___ftpack+2
  2467  0130  0008               	return
  2468  0131                     i1l1005:	
  2469  0131  3001               	movlw	1
  2470  0132  00F5               	movwf	??___ftpack
  2471  0133  0875               	movf	??___ftpack,w
  2472  0134  07F3               	addwf	___ftpack@exp,f
  2473  0135  3001               	movlw	1
  2474  0136                     u42_25:	
  2475  0136  36F2               	lsrf	___ftpack@arg+2,f
  2476  0137  0CF1               	rrf	___ftpack@arg+1,f
  2477  0138  0CF0               	rrf	___ftpack@arg,f
  2478  0139  0B89               	decfsz	9,f
  2479  013A  2936               	goto	u42_25
  2480  013B                     i1l1007:	
  2481  013B  30FE               	movlw	254
  2482  013C  0572               	andwf	___ftpack@arg+2,w
  2483  013D  1903               	btfsc	3,2
  2484  013E  2954               	goto	i1l489
  2485  013F  2931               	goto	i1l1005
  2486  0140                     i1l1009:	
  2487  0140  3001               	movlw	1
  2488  0141  00F5               	movwf	??___ftpack
  2489  0142  0875               	movf	??___ftpack,w
  2490  0143  07F3               	addwf	___ftpack@exp,f
  2491  0144  3001               	movlw	1
  2492  0145  07F0               	addwf	___ftpack@arg,f
  2493  0146  3000               	movlw	0
  2494  0147  1803               	skipnc
  2495  0148  3001               	movlw	1
  2496  0149  07F1               	addwf	___ftpack@arg+1,f
  2497  014A  3000               	movlw	0
  2498  014B  1803               	skipnc
  2499  014C  3001               	movlw	1
  2500  014D  07F2               	addwf	___ftpack@arg+2,f
  2501  014E  3001               	movlw	1
  2502  014F                     u44_25:	
  2503  014F  36F2               	lsrf	___ftpack@arg+2,f
  2504  0150  0CF1               	rrf	___ftpack@arg+1,f
  2505  0151  0CF0               	rrf	___ftpack@arg,f
  2506  0152  0B89               	decfsz	9,f
  2507  0153  294F               	goto	u44_25
  2508  0154                     i1l489:	
  2509  0154  30FF               	movlw	255
  2510  0155  0572               	andwf	___ftpack@arg+2,w
  2511  0156  1903               	btfsc	3,2
  2512  0157  2961               	goto	i1l1017
  2513  0158  2940               	goto	i1l1009
  2514  0159                     i1l1015:	
  2515  0159  3001               	movlw	1
  2516  015A  02F3               	subwf	___ftpack@exp,f
  2517  015B  3001               	movlw	1
  2518  015C                     u46_25:	
  2519  015C  35F0               	lslf	___ftpack@arg,f
  2520  015D  0DF1               	rlf	___ftpack@arg+1,f
  2521  015E  0DF2               	rlf	___ftpack@arg+2,f
  2522  015F  0B89               	decfsz	9,f
  2523  0160  295C               	goto	u46_25
  2524  0161                     i1l1017:	
  2525  0161  1FF1               	btfss	___ftpack@arg+1,7
  2526  0162  2959               	goto	i1l1015
  2527  0163  1873               	btfsc	___ftpack@exp,0
  2528  0164  296B               	goto	i1l495
  2529  0165  30FF               	movlw	255
  2530  0166  05F0               	andwf	___ftpack@arg,f
  2531  0167  307F               	movlw	127
  2532  0168  05F1               	andwf	___ftpack@arg+1,f
  2533  0169  30FF               	movlw	255
  2534  016A  05F2               	andwf	___ftpack@arg+2,f
  2535  016B                     i1l495:	
  2536  016B  1003               	clrc
  2537  016C  0CF3               	rrf	___ftpack@exp,f
  2538  016D  0873               	movf	___ftpack@exp,w
  2539  016E  00F5               	movwf	??___ftpack
  2540  016F  01F6               	clrf	??___ftpack+1
  2541  0170  01F7               	clrf	??___ftpack+2
  2542  0171  3010               	movlw	16
  2543  0172                     u49_25:	
  2544  0172  35F5               	lslf	??___ftpack,f
  2545  0173  0DF6               	rlf	??___ftpack+1,f
  2546  0174  0DF7               	rlf	??___ftpack+2,f
  2547  0175  0B89               	decfsz	9,f
  2548  0176  2972               	goto	u49_25
  2549  0177  0875               	movf	??___ftpack,w
  2550  0178  04F0               	iorwf	___ftpack@arg,f
  2551  0179  0876               	movf	??___ftpack+1,w
  2552  017A  04F1               	iorwf	___ftpack@arg+1,f
  2553  017B  0877               	movf	??___ftpack+2,w
  2554  017C  04F2               	iorwf	___ftpack@arg+2,f
  2555  017D  0874               	movf	___ftpack@sign,w
  2556  017E  1903               	btfsc	3,2
  2557  017F  0008               	return
  2558  0180  17F2               	bsf	___ftpack@arg+2,7
  2559  0181  0008               	return
  2560  0182                     __end_of___ftpack:	
  2561                           
  2562                           	psect	text16
  2563  008F                     __ptext16:	
  2564 ;; *************** function _PID *****************
  2565 ;; Defined at:
  2566 ;;		line 44 in file "controller.c"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;  ref             2    0[BANK0 ] int 
  2569 ;;  mes             2    2[BANK0 ] int 
  2570 ;;  power           1    4[BANK0 ] PTR int 
  2571 ;;		 -> power(2), 
  2572 ;; Auto vars:     Size  Location     Type
  2573 ;;  temp            2   17[BANK0 ] int 
  2574 ;;  res             2   15[BANK0 ] int 
  2575 ;; Return value:  Size  Location     Type
  2576 ;;		None               void
  2577 ;; Registers used:
  2578 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2584 ;;      Params:         0       5       0       0       0       0
  2585 ;;      Locals:         0      10       0       0       0       0
  2586 ;;      Temps:          0       4       0       0       0       0
  2587 ;;      Totals:         0      19       0       0       0       0
  2588 ;;Total ram usage:       19 bytes
  2589 ;; Hardware stack levels used:    1
  2590 ;; Hardware stack levels required when called:    2
  2591 ;; This function calls:
  2592 ;;		_calc_D
  2593 ;;		_calc_I
  2594 ;;		_calc_P
  2595 ;; This function is called by:
  2596 ;;		_inter
  2597 ;; This function uses a non-reentrant model
  2598 ;;
  2599                           
  2600                           
  2601                           ;psect for function _PID
  2602  008F                     _PID:	
  2603                           
  2604                           ;controller.c: 45: int temp = 0;
  2605                           
  2606                           ;incstack = 0
  2607                           ; Regs used in _PID: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2608  008F  0020               	movlb	0	; select bank0
  2609  0090  01B1               	clrf	PID@temp
  2610  0091  01B2               	clrf	PID@temp+1
  2611                           
  2612                           ;controller.c: 46: int res = ref - mes;
  2613  0092  0922               	comf	PID@mes,w
  2614  0093  00A5               	movwf	??_PID
  2615  0094  0923               	comf	PID@mes+1,w
  2616  0095  00A6               	movwf	??_PID+1
  2617  0096  0AA5               	incf	??_PID,f
  2618  0097  1903               	skipnz
  2619  0098  0AA6               	incf	??_PID+1,f
  2620  0099  0820               	movf	PID@ref,w
  2621  009A  0725               	addwf	??_PID,w
  2622  009B  00AF               	movwf	PID@res
  2623  009C  0821               	movf	PID@ref+1,w
  2624  009D  3D26               	addwfc	??_PID+1,w
  2625  009E  00B0               	movwf	PID@res+1
  2626                           
  2627                           ;controller.c: 48: temp = calc_P(res) + calc_I(res) + calc_D(res);
  2628  009F  0830               	movf	PID@res+1,w
  2629  00A0  01F7               	clrf	calc_P@res+1
  2630  00A1  07F7               	addwf	calc_P@res+1,f
  2631  00A2  082F               	movf	PID@res,w
  2632  00A3  01F6               	clrf	calc_P@res
  2633  00A4  07F6               	addwf	calc_P@res,f
  2634  00A5  3183  2336  3180   	fcall	_calc_P
  2635  00A8  0876               	movf	?_calc_P,w
  2636  00A9  0020               	movlb	0	; select bank0
  2637  00AA  00A5               	movwf	??_PID
  2638  00AB  0877               	movf	?_calc_P+1,w
  2639  00AC  00A6               	movwf	??_PID+1
  2640  00AD  0830               	movf	PID@res+1,w
  2641  00AE  01F7               	clrf	calc_I@res+1
  2642  00AF  07F7               	addwf	calc_I@res+1,f
  2643  00B0  082F               	movf	PID@res,w
  2644  00B1  01F6               	clrf	calc_I@res
  2645  00B2  07F6               	addwf	calc_I@res,f
  2646  00B3  3182  22B3  3180   	fcall	_calc_I
  2647  00B6  0876               	movf	?_calc_I,w
  2648  00B7  0020               	movlb	0	; select bank0
  2649  00B8  0725               	addwf	??_PID,w
  2650  00B9  00A7               	movwf	??_PID+2
  2651  00BA  0877               	movf	?_calc_I+1,w
  2652  00BB  3D26               	addwfc	??_PID+1,w
  2653  00BC  00A8               	movwf	??_PID+3
  2654  00BD  0830               	movf	PID@res+1,w
  2655  00BE  01F7               	clrf	calc_D@res+1
  2656  00BF  07F7               	addwf	calc_D@res+1,f
  2657  00C0  082F               	movf	PID@res,w
  2658  00C1  01F6               	clrf	calc_D@res
  2659  00C2  07F6               	addwf	calc_D@res,f
  2660  00C3  3181  21C7  3180   	fcall	_calc_D
  2661  00C6  0876               	movf	?_calc_D,w
  2662  00C7  0020               	movlb	0	; select bank0
  2663  00C8  0727               	addwf	??_PID+2,w
  2664  00C9  00B1               	movwf	PID@temp
  2665  00CA  0877               	movf	?_calc_D+1,w
  2666  00CB  3D28               	addwfc	??_PID+3,w
  2667  00CC  00B2               	movwf	PID@temp+1
  2668                           
  2669                           ;controller.c: 50: *power = ((((((temp)) > ((255)) ? ((255)):((temp)))) > ((0)) ? ((((te
      +                          mp)) > ((255)) ? ((255)):((temp)))):((0))));
  2670  00CD  0832               	movf	PID@temp+1,w
  2671  00CE  3A80               	xorlw	128
  2672  00CF  00A5               	movwf	??_PID
  2673  00D0  3081               	movlw	129
  2674  00D1  0225               	subwf	??_PID,w
  2675  00D2  1D03               	skipz
  2676  00D3  28D6               	goto	u60_25
  2677  00D4  3000               	movlw	0
  2678  00D5  0231               	subwf	PID@temp,w
  2679  00D6                     u60_25:	
  2680  00D6  1803               	skipnc
  2681  00D7  28E0               	goto	i1l1183
  2682  00D8  0020               	movlb	0	; select bank0
  2683  00D9  0832               	movf	PID@temp+1,w
  2684  00DA  01AC               	clrf	_PID$243+1
  2685  00DB  07AC               	addwf	_PID$243+1,f
  2686  00DC  0831               	movf	PID@temp,w
  2687  00DD  01AB               	clrf	_PID$243
  2688  00DE  07AB               	addwf	_PID$243,f
  2689  00DF  28E5               	goto	i1l222
  2690  00E0                     i1l1183:	
  2691  00E0  30FF               	movlw	255
  2692  00E1  0020               	movlb	0	; select bank0
  2693  00E2  00AB               	movwf	_PID$243
  2694  00E3  3000               	movlw	0
  2695  00E4  00AC               	movwf	_PID$243+1
  2696  00E5                     i1l222:	
  2697  00E5  082C               	movf	_PID$243+1,w
  2698  00E6  3A80               	xorlw	128
  2699  00E7  00A5               	movwf	??_PID
  2700  00E8  3080               	movlw	128
  2701  00E9  0225               	subwf	??_PID,w
  2702  00EA  1D03               	skipz
  2703  00EB  28EE               	goto	u61_25
  2704  00EC  3001               	movlw	1
  2705  00ED  022B               	subwf	_PID$243,w
  2706  00EE                     u61_25:	
  2707  00EE  1803               	skipnc
  2708  00EF  28F4               	goto	i1l1187
  2709  00F0  0020               	movlb	0	; select bank0
  2710  00F1  01A9               	clrf	_PID$242
  2711  00F2  01AA               	clrf	_PID$242+1
  2712  00F3  2913               	goto	i1l1195
  2713  00F4                     i1l1187:	
  2714  00F4  0020               	movlb	0	; select bank0
  2715  00F5  0832               	movf	PID@temp+1,w
  2716  00F6  3A80               	xorlw	128
  2717  00F7  00A5               	movwf	??_PID
  2718  00F8  3081               	movlw	129
  2719  00F9  0225               	subwf	??_PID,w
  2720  00FA  1D03               	skipz
  2721  00FB  28FE               	goto	u62_25
  2722  00FC  3000               	movlw	0
  2723  00FD  0231               	subwf	PID@temp,w
  2724  00FE                     u62_25:	
  2725  00FE  1803               	skipnc
  2726  00FF  2908               	goto	i1l1191
  2727  0100  0020               	movlb	0	; select bank0
  2728  0101  0832               	movf	PID@temp+1,w
  2729  0102  01AE               	clrf	_PID$244+1
  2730  0103  07AE               	addwf	_PID$244+1,f
  2731  0104  0831               	movf	PID@temp,w
  2732  0105  01AD               	clrf	_PID$244
  2733  0106  07AD               	addwf	_PID$244,f
  2734  0107  290D               	goto	i1l1193
  2735  0108                     i1l1191:	
  2736  0108  30FF               	movlw	255
  2737  0109  0020               	movlb	0	; select bank0
  2738  010A  00AD               	movwf	_PID$244
  2739  010B  3000               	movlw	0
  2740  010C  00AE               	movwf	_PID$244+1
  2741  010D                     i1l1193:	
  2742  010D  082E               	movf	_PID$244+1,w
  2743  010E  01AA               	clrf	_PID$242+1
  2744  010F  07AA               	addwf	_PID$242+1,f
  2745  0110  082D               	movf	_PID$244,w
  2746  0111  01A9               	clrf	_PID$242
  2747  0112  07A9               	addwf	_PID$242,f
  2748  0113                     i1l1195:	
  2749  0113  0824               	movf	PID@power,w
  2750  0114  0086               	movwf	6
  2751  0115  0187               	clrf	7
  2752  0116  0829               	movf	_PID$242,w
  2753  0117  3FC0               	movwi [0]fsr1
  2754  0118  082A               	movf	_PID$242+1,w
  2755  0119  3FC1               	movwi [1]fsr1
  2756                           
  2757                           ;controller.c: 53: *power = ref;
  2758  011A  0824               	movf	PID@power,w
  2759  011B  0086               	movwf	6
  2760  011C  0187               	clrf	7
  2761  011D  0820               	movf	PID@ref,w
  2762  011E  3FC0               	movwi [0]fsr1
  2763  011F  0821               	movf	PID@ref+1,w
  2764  0120  3FC1               	movwi [1]fsr1
  2765  0121  0008               	return
  2766  0122                     __end_of_PID:	
  2767                           
  2768                           	psect	text17
  2769  0336                     __ptext17:	
  2770 ;; *************** function _calc_P *****************
  2771 ;; Defined at:
  2772 ;;		line 57 in file "controller.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;  res             2    6[COMMON] int 
  2775 ;; Auto vars:     Size  Location     Type
  2776 ;;  p               2    8[COMMON] int 
  2777 ;; Return value:  Size  Location     Type
  2778 ;;                  2    6[COMMON] int 
  2779 ;; Registers used:
  2780 ;;		wreg, status,2, status,0, pclath, cstack
  2781 ;; Tracked objects:
  2782 ;;		On entry : 0/0
  2783 ;;		On exit  : 0/0
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2786 ;;      Params:         2       0       0       0       0       0
  2787 ;;      Locals:         2       0       0       0       0       0
  2788 ;;      Temps:          0       0       0       0       0       0
  2789 ;;      Totals:         4       0       0       0       0       0
  2790 ;;Total ram usage:        4 bytes
  2791 ;; Hardware stack levels used:    1
  2792 ;; Hardware stack levels required when called:    1
  2793 ;; This function calls:
  2794 ;;		___wmul
  2795 ;; This function is called by:
  2796 ;;		_PID
  2797 ;; This function uses a non-reentrant model
  2798 ;;
  2799                           
  2800                           
  2801                           ;psect for function _calc_P
  2802  0336                     _calc_P:	
  2803                           
  2804                           ;controller.c: 58: int p = res * 7;
  2805                           
  2806                           ;incstack = 0
  2807                           ; Regs used in _calc_P: [wreg+status,2+status,0+pclath+cstack]
  2808  0336  0877               	movf	calc_P@res+1,w
  2809  0337  01F1               	clrf	___wmul@multiplier+1
  2810  0338  07F1               	addwf	___wmul@multiplier+1,f
  2811  0339  0876               	movf	calc_P@res,w
  2812  033A  01F0               	clrf	___wmul@multiplier
  2813  033B  07F0               	addwf	___wmul@multiplier,f
  2814  033C  3007               	movlw	7
  2815  033D  00F2               	movwf	___wmul@multiplicand
  2816  033E  3000               	movlw	0
  2817  033F  00F3               	movwf	___wmul@multiplicand+1
  2818  0340  3183  2319         	fcall	___wmul
  2819  0342  0871               	movf	?___wmul+1,w
  2820  0343  01F9               	clrf	calc_P@p+1
  2821  0344  07F9               	addwf	calc_P@p+1,f
  2822  0345  0870               	movf	?___wmul,w
  2823  0346  01F8               	clrf	calc_P@p
  2824  0347  07F8               	addwf	calc_P@p,f
  2825                           
  2826                           ;controller.c: 60: return p;
  2827  0348  0879               	movf	calc_P@p+1,w
  2828  0349  01F7               	clrf	?_calc_P+1
  2829  034A  07F7               	addwf	?_calc_P+1,f
  2830  034B  0878               	movf	calc_P@p,w
  2831  034C  01F6               	clrf	?_calc_P
  2832  034D  07F6               	addwf	?_calc_P,f
  2833  034E  0008               	return
  2834  034F                     __end_of_calc_P:	
  2835                           
  2836                           	psect	text18
  2837  02B3                     __ptext18:	
  2838 ;; *************** function _calc_I *****************
  2839 ;; Defined at:
  2840 ;;		line 63 in file "controller.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;  res             2    6[COMMON] int 
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;		None
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  2    6[COMMON] int 
  2847 ;; Registers used:
  2848 ;;		wreg, status,2, status,0, pclath, cstack
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2854 ;;      Params:         2       0       0       0       0       0
  2855 ;;      Locals:         0       0       0       0       0       0
  2856 ;;      Temps:          4       0       0       0       0       0
  2857 ;;      Totals:         6       0       0       0       0       0
  2858 ;;Total ram usage:        6 bytes
  2859 ;; Hardware stack levels used:    1
  2860 ;; Hardware stack levels required when called:    1
  2861 ;; This function calls:
  2862 ;;		___wmul
  2863 ;; This function is called by:
  2864 ;;		_PID
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           
  2869                           ;psect for function _calc_I
  2870  02B3                     _calc_I:	
  2871                           
  2872                           ;controller.c: 64: static long long int i = 0;
  2873                           ;controller.c: 66: i += res * 0;
  2874                           
  2875                           ;incstack = 0
  2876                           ; Regs used in _calc_I: [wreg+status,2+status,0+pclath+cstack]
  2877  02B3  0877               	movf	calc_I@res+1,w
  2878  02B4  01F1               	clrf	___wmul@multiplier+1
  2879  02B5  07F1               	addwf	___wmul@multiplier+1,f
  2880  02B6  0876               	movf	calc_I@res,w
  2881  02B7  01F0               	clrf	___wmul@multiplier
  2882  02B8  07F0               	addwf	___wmul@multiplier,f
  2883  02B9  3000               	movlw	0
  2884  02BA  00F2               	movwf	___wmul@multiplicand
  2885  02BB  3000               	movlw	0
  2886  02BC  00F3               	movwf	___wmul@multiplicand+1
  2887  02BD  3183  2319         	fcall	___wmul
  2888  02BF  0870               	movf	?___wmul,w
  2889  02C0  00F8               	movwf	??_calc_I
  2890  02C1  0871               	movf	?___wmul+1,w
  2891  02C2  00F9               	movwf	??_calc_I+1
  2892  02C3  3000               	movlw	0
  2893  02C4  1BF9               	btfsc	??_calc_I+1,7
  2894  02C5  30FF               	movlw	255
  2895  02C6  00FA               	movwf	??_calc_I+2
  2896  02C7  00FB               	movwf	??_calc_I+3
  2897  02C8  0878               	movf	??_calc_I,w
  2898  02C9  0020               	movlb	0	; select bank0
  2899  02CA  07BC               	addwf	calc_I@i,f
  2900  02CB  0879               	movf	??_calc_I+1,w
  2901  02CC  3DBD               	addwfc	calc_I@i+1,f
  2902  02CD  087A               	movf	??_calc_I+2,w
  2903  02CE  3DBE               	addwfc	calc_I@i+2,f
  2904  02CF  087B               	movf	??_calc_I+3,w
  2905  02D0  3DBF               	addwfc	calc_I@i+3,f
  2906                           
  2907                           ;controller.c: 68: return i;
  2908  02D1  083D               	movf	calc_I@i+1,w
  2909  02D2  01F7               	clrf	?_calc_I+1
  2910  02D3  07F7               	addwf	?_calc_I+1,f
  2911  02D4  083C               	movf	calc_I@i,w
  2912  02D5  01F6               	clrf	?_calc_I
  2913  02D6  07F6               	addwf	?_calc_I,f
  2914  02D7  0008               	return
  2915  02D8                     __end_of_calc_I:	
  2916                           
  2917                           	psect	text19
  2918  01C7                     __ptext19:	
  2919 ;; *************** function _calc_D *****************
  2920 ;; Defined at:
  2921 ;;		line 71 in file "controller.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;  res             2    6[COMMON] int 
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;		None
  2926 ;; Return value:  Size  Location     Type
  2927 ;;                  2    6[COMMON] int 
  2928 ;; Registers used:
  2929 ;;		wreg, status,2, status,0, pclath, cstack
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2935 ;;      Params:         2       0       0       0       0       0
  2936 ;;      Locals:         2       0       0       0       0       0
  2937 ;;      Temps:          2       0       0       0       0       0
  2938 ;;      Totals:         6       0       0       0       0       0
  2939 ;;Total ram usage:        6 bytes
  2940 ;; Hardware stack levels used:    1
  2941 ;; Hardware stack levels required when called:    1
  2942 ;; This function calls:
  2943 ;;		___wmul
  2944 ;; This function is called by:
  2945 ;;		_PID
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           
  2950                           ;psect for function _calc_D
  2951  01C7                     _calc_D:	
  2952                           
  2953                           ;controller.c: 72: static int d = 0;
  2954                           ;controller.c: 73: static int d_bef = 0;
  2955                           ;controller.c: 74: static int d_sum = 0;
  2956                           ;controller.c: 76: d_sum = d_sum + d_bef;
  2957                           
  2958                           ;incstack = 0
  2959                           ; Regs used in _calc_D: [wreg+status,2+status,0+pclath+cstack]
  2960  01C7  0020               	movlb	0	; select bank0
  2961  01C8  0842               	movf	calc_D@d_bef,w
  2962  01C9  0744               	addwf	calc_D@d_sum,w
  2963  01CA  00C4               	movwf	calc_D@d_sum
  2964  01CB  0843               	movf	calc_D@d_bef+1,w
  2965  01CC  3D45               	addwfc	calc_D@d_sum+1,w
  2966  01CD  00C5               	movwf	calc_D@d_sum+1
  2967                           
  2968                           ;controller.c: 77: d = (res * 0 - d_sum) * 5;
  2969  01CE  0944               	comf	calc_D@d_sum,w
  2970  01CF  00F8               	movwf	??_calc_D
  2971  01D0  0945               	comf	calc_D@d_sum+1,w
  2972  01D1  00F9               	movwf	??_calc_D+1
  2973  01D2  0AF8               	incf	??_calc_D,f
  2974  01D3  1903               	skipnz
  2975  01D4  0AF9               	incf	??_calc_D+1,f
  2976  01D5  0877               	movf	calc_D@res+1,w
  2977  01D6  01F1               	clrf	___wmul@multiplier+1
  2978  01D7  07F1               	addwf	___wmul@multiplier+1,f
  2979  01D8  0876               	movf	calc_D@res,w
  2980  01D9  01F0               	clrf	___wmul@multiplier
  2981  01DA  07F0               	addwf	___wmul@multiplier,f
  2982  01DB  3000               	movlw	0
  2983  01DC  00F2               	movwf	___wmul@multiplicand
  2984  01DD  3000               	movlw	0
  2985  01DE  00F3               	movwf	___wmul@multiplicand+1
  2986  01DF  3183  2319  3181   	fcall	___wmul
  2987  01E2  0878               	movf	??_calc_D,w
  2988  01E3  0770               	addwf	?___wmul,w
  2989  01E4  00FA               	movwf	_calc_D$645
  2990  01E5  0879               	movf	??_calc_D+1,w
  2991  01E6  3D71               	addwfc	?___wmul+1,w
  2992  01E7  00FB               	movwf	_calc_D$645+1
  2993                           
  2994                           ;controller.c: 77: d = (res * 0 - d_sum) * 5;
  2995  01E8  087B               	movf	_calc_D$645+1,w
  2996  01E9  01F1               	clrf	___wmul@multiplier+1
  2997  01EA  07F1               	addwf	___wmul@multiplier+1,f
  2998  01EB  087A               	movf	_calc_D$645,w
  2999  01EC  01F0               	clrf	___wmul@multiplier
  3000  01ED  07F0               	addwf	___wmul@multiplier,f
  3001  01EE  3005               	movlw	5
  3002  01EF  00F2               	movwf	___wmul@multiplicand
  3003  01F0  3000               	movlw	0
  3004  01F1  00F3               	movwf	___wmul@multiplicand+1
  3005  01F2  3183  2319         	fcall	___wmul
  3006  01F4  0871               	movf	?___wmul+1,w
  3007  01F5  0020               	movlb	0	; select bank0
  3008  01F6  01C1               	clrf	calc_D@d+1
  3009  01F7  07C1               	addwf	calc_D@d+1,f
  3010  01F8  0870               	movf	?___wmul,w
  3011  01F9  01C0               	clrf	calc_D@d
  3012  01FA  07C0               	addwf	calc_D@d,f
  3013                           
  3014                           ;controller.c: 78: d_bef = d;
  3015  01FB  0841               	movf	calc_D@d+1,w
  3016  01FC  01C3               	clrf	calc_D@d_bef+1
  3017  01FD  07C3               	addwf	calc_D@d_bef+1,f
  3018  01FE  0840               	movf	calc_D@d,w
  3019  01FF  01C2               	clrf	calc_D@d_bef
  3020  0200  07C2               	addwf	calc_D@d_bef,f
  3021                           
  3022                           ;controller.c: 80: return d;
  3023  0201  0841               	movf	calc_D@d+1,w
  3024  0202  01F7               	clrf	?_calc_D+1
  3025  0203  07F7               	addwf	?_calc_D+1,f
  3026  0204  0840               	movf	calc_D@d,w
  3027  0205  01F6               	clrf	?_calc_D
  3028  0206  07F6               	addwf	?_calc_D,f
  3029  0207  0008               	return
  3030  0208                     __end_of_calc_D:	
  3031                           
  3032                           	psect	text20
  3033  0319                     __ptext20:	
  3034 ;; *************** function ___wmul *****************
  3035 ;; Defined at:
  3036 ;;		line 15 in file "C:\isaka\application\compiler\xc\xc8\sources\common\Umul16.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;  multiplier      2    0[COMMON] unsigned int 
  3039 ;;  multiplicand    2    2[COMMON] unsigned int 
  3040 ;; Auto vars:     Size  Location     Type
  3041 ;;  product         2    4[COMMON] unsigned int 
  3042 ;; Return value:  Size  Location     Type
  3043 ;;                  2    0[COMMON] unsigned int 
  3044 ;; Registers used:
  3045 ;;		wreg, status,2, status,0
  3046 ;; Tracked objects:
  3047 ;;		On entry : 0/0
  3048 ;;		On exit  : 0/0
  3049 ;;		Unchanged: 0/0
  3050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3051 ;;      Params:         4       0       0       0       0       0
  3052 ;;      Locals:         2       0       0       0       0       0
  3053 ;;      Temps:          0       0       0       0       0       0
  3054 ;;      Totals:         6       0       0       0       0       0
  3055 ;;Total ram usage:        6 bytes
  3056 ;; Hardware stack levels used:    1
  3057 ;; This function calls:
  3058 ;;		Nothing
  3059 ;; This function is called by:
  3060 ;;		_measure
  3061 ;;		_calc_P
  3062 ;;		_calc_I
  3063 ;;		_calc_D
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067                           
  3068                           ;psect for function ___wmul
  3069  0319                     ___wmul:	
  3070                           
  3071                           ;incstack = 0
  3072                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3073  0319  01F4               	clrf	___wmul@product
  3074  031A  01F5               	clrf	___wmul@product+1
  3075  031B                     i1l987:	
  3076  031B  1C70               	btfss	___wmul@multiplier,0
  3077  031C  2B21               	goto	i1l328
  3078  031D  0872               	movf	___wmul@multiplicand,w
  3079  031E  07F4               	addwf	___wmul@product,f
  3080  031F  0873               	movf	___wmul@multiplicand+1,w
  3081  0320  3DF5               	addwfc	___wmul@product+1,f
  3082  0321                     i1l328:	
  3083  0321  3001               	movlw	1
  3084  0322                     u37_25:	
  3085  0322  35F2               	lslf	___wmul@multiplicand,f
  3086  0323  0DF3               	rlf	___wmul@multiplicand+1,f
  3087  0324  0B89               	decfsz	9,f
  3088  0325  2B22               	goto	u37_25
  3089  0326  3001               	movlw	1
  3090  0327                     u38_25:	
  3091  0327  36F1               	lsrf	___wmul@multiplier+1,f
  3092  0328  0CF0               	rrf	___wmul@multiplier,f
  3093  0329  0B89               	decfsz	9,f
  3094  032A  2B27               	goto	u38_25
  3095  032B  0871               	movf	___wmul@multiplier+1,w
  3096  032C  0470               	iorwf	___wmul@multiplier,w
  3097  032D  1D03               	skipz
  3098  032E  2B1B               	goto	i1l987
  3099  032F  0875               	movf	___wmul@product+1,w
  3100  0330  01F1               	clrf	?___wmul+1
  3101  0331  07F1               	addwf	?___wmul+1,f
  3102  0332  0874               	movf	___wmul@product,w
  3103  0333  01F0               	clrf	?___wmul
  3104  0334  07F0               	addwf	?___wmul,f
  3105  0335  0008               	return
  3106  0336                     __end_of___wmul:	
  3107                           
  3108                           	psect	text21
  3109  0208                     __ptext21:	
  3110 ;; *************** function _I2C_send_data *****************
  3111 ;; Defined at:
  3112 ;;		line 48 in file "I2C.c"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;  addr            1    wreg     unsigned char 
  3115 ;;  data            1    4[COMMON] PTR unsigned char 
  3116 ;;		 -> inter@data(1), 
  3117 ;;  length          2    5[COMMON] int 
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;  addr            1    8[COMMON] unsigned char 
  3120 ;;  i               2    9[COMMON] int 
  3121 ;; Return value:  Size  Location     Type
  3122 ;;		None               void
  3123 ;; Registers used:
  3124 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3125 ;; Tracked objects:
  3126 ;;		On entry : 0/0
  3127 ;;		On exit  : 0/0
  3128 ;;		Unchanged: 0/0
  3129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3130 ;;      Params:         3       0       0       0       0       0
  3131 ;;      Locals:         3       0       0       0       0       0
  3132 ;;      Temps:          1       0       0       0       0       0
  3133 ;;      Totals:         7       0       0       0       0       0
  3134 ;;Total ram usage:        7 bytes
  3135 ;; Hardware stack levels used:    1
  3136 ;; Hardware stack levels required when called:    1
  3137 ;; This function calls:
  3138 ;;		_I2C_ack_check
  3139 ;;		_I2C_idle_check
  3140 ;; This function is called by:
  3141 ;;		_inter
  3142 ;; This function uses a non-reentrant model
  3143 ;;
  3144                           
  3145                           
  3146                           ;psect for function _I2C_send_data
  3147  0208                     _I2C_send_data:	
  3148                           
  3149                           ;incstack = 0
  3150                           ; Regs used in _I2C_send_data: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3151                           ;I2C_send_data@addr stored from wreg
  3152  0208  00F8               	movwf	I2C_send_data@addr
  3153                           
  3154                           ;I2C.c: 49: int i;
  3155                           ;I2C.c: 51: I2C_idle_check();
  3156  0209  3183  23A3  3182   	fcall	_I2C_idle_check
  3157                           
  3158                           ;I2C.c: 52: SSP1CON2bits.SEN = 1;
  3159  020C  0024               	movlb	4	; select bank4
  3160  020D  1416               	bsf	22,0	;volatile
  3161                           
  3162                           ;I2C.c: 54: I2C_idle_check();
  3163  020E  3183  23A3  3182   	fcall	_I2C_idle_check
  3164                           
  3165                           ;I2C.c: 55: SSP1BUF = addr << 1;
  3166  0211  3578               	lslf	I2C_send_data@addr,w
  3167  0212  0024               	movlb	4	; select bank4
  3168  0213  0091               	movwf	17	;volatile
  3169                           
  3170                           ;I2C.c: 58: for (i=0; i<length; i++) {
  3171  0214  01F9               	clrf	I2C_send_data@i
  3172  0215  01FA               	clrf	I2C_send_data@i+1
  3173  0216                     i1l189:	
  3174  0216  087A               	movf	I2C_send_data@i+1,w
  3175  0217  3A80               	xorlw	128
  3176  0218  00F7               	movwf	??_I2C_send_data
  3177  0219  0876               	movf	I2C_send_data@length+1,w
  3178  021A  3A80               	xorlw	128
  3179  021B  0277               	subwf	??_I2C_send_data,w
  3180  021C  1D03               	skipz
  3181  021D  2A20               	goto	u65_25
  3182  021E  0875               	movf	I2C_send_data@length,w
  3183  021F  0279               	subwf	I2C_send_data@i,w
  3184  0220                     u65_25:	
  3185  0220  1803               	btfsc	3,0
  3186  0221  2A42               	goto	i1l1227
  3187                           
  3188                           ;I2C.c: 59: if (!I2C_ack_check()) { return; }
  3189  0222  3182  22D8  3182   	fcall	_I2C_ack_check
  3190  0225  0871               	movf	?_I2C_ack_check+1,w
  3191  0226  0470               	iorwf	?_I2C_ack_check,w
  3192  0227  1903               	btfsc	3,2
  3193  0228  0008               	return
  3194                           
  3195                           ;I2C.c: 60: I2C_idle_check();
  3196  0229  3183  23A3  3182   	fcall	_I2C_idle_check
  3197                           
  3198                           ;I2C.c: 61: SSP1BUF = *data;
  3199  022C  0874               	movf	I2C_send_data@data,w
  3200  022D  0086               	movwf	6
  3201  022E  0187               	clrf	7
  3202  022F  0801               	movf	1,w
  3203  0230  0024               	movlb	4	; select bank4
  3204  0231  0091               	movwf	17	;volatile
  3205                           
  3206                           ;I2C.c: 62: data++;
  3207  0232  3001               	movlw	1
  3208  0233  00F7               	movwf	??_I2C_send_data
  3209  0234  0877               	movf	??_I2C_send_data,w
  3210  0235  07F4               	addwf	I2C_send_data@data,f
  3211                           
  3212                           ;I2C.c: 63: if (!I2C_ack_check()) { return; }
  3213  0236  3182  22D8  3182   	fcall	_I2C_ack_check
  3214  0239  0871               	movf	?_I2C_ack_check+1,w
  3215  023A  0470               	iorwf	?_I2C_ack_check,w
  3216  023B  1903               	btfsc	3,2
  3217  023C  0008               	return
  3218  023D  3001               	movlw	1
  3219  023E  07F9               	addwf	I2C_send_data@i,f
  3220  023F  3000               	movlw	0
  3221  0240  3DFA               	addwfc	I2C_send_data@i+1,f
  3222  0241  2A16               	goto	i1l189
  3223  0242                     i1l1227:	
  3224                           
  3225                           ;I2C.c: 64: }
  3226                           ;I2C.c: 67: I2C_idle_check();
  3227  0242  3183  23A3         	fcall	_I2C_idle_check
  3228                           
  3229                           ;I2C.c: 68: SSP1CON2bits.PEN = 1;
  3230  0244  0024               	movlb	4	; select bank4
  3231  0245  1516               	bsf	22,2	;volatile
  3232                           
  3233                           ;I2C.c: 70: RA2 = 1;
  3234  0246  0020               	movlb	0	; select bank0
  3235  0247  150C               	bsf	12,2	;volatile
  3236  0248  0008               	return
  3237  0249                     __end_of_I2C_send_data:	
  3238                           
  3239                           	psect	text22
  3240  03A3                     __ptext22:	
  3241 ;; *************** function _I2C_idle_check *****************
  3242 ;; Defined at:
  3243 ;;		line 28 in file "I2C.c"
  3244 ;; Parameters:    Size  Location     Type
  3245 ;;		None
  3246 ;; Auto vars:     Size  Location     Type
  3247 ;;		None
  3248 ;; Return value:  Size  Location     Type
  3249 ;;		None               void
  3250 ;; Registers used:
  3251 ;;		wreg, status,2, status,0
  3252 ;; Tracked objects:
  3253 ;;		On entry : 0/0
  3254 ;;		On exit  : 0/0
  3255 ;;		Unchanged: 0/0
  3256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3257 ;;      Params:         0       0       0       0       0       0
  3258 ;;      Locals:         0       0       0       0       0       0
  3259 ;;      Temps:          1       0       0       0       0       0
  3260 ;;      Totals:         1       0       0       0       0       0
  3261 ;;Total ram usage:        1 bytes
  3262 ;; Hardware stack levels used:    1
  3263 ;; This function calls:
  3264 ;;		Nothing
  3265 ;; This function is called by:
  3266 ;;		_I2C_send_data
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           
  3270                           
  3271                           ;psect for function _I2C_idle_check
  3272  03A3                     _I2C_idle_check:	
  3273  03A3                     i1l1079:	
  3274                           ;I2C.c: 29: while (( SSP1CON2 & 0x1F ) | (SSP1STAT & 0x05)) ;
  3275                           
  3276                           ;incstack = 0
  3277                           ; Regs used in _I2C_idle_check: [wreg+status,2+status,0]
  3278                           
  3279  03A3  3005               	movlw	5
  3280  03A4  0024               	movlb	4	; select bank4
  3281  03A5  0514               	andwf	20,w	;volatile
  3282  03A6  00F0               	movwf	??_I2C_idle_check
  3283  03A7  0816               	movf	22,w	;volatile
  3284  03A8  391F               	andlw	31
  3285  03A9  0470               	iorwf	??_I2C_idle_check,w
  3286  03AA  1903               	btfsc	3,2
  3287  03AB  0008               	return
  3288  03AC  2BA3               	goto	i1l1079
  3289  03AD                     __end_of_I2C_idle_check:	
  3290                           
  3291                           	psect	text23
  3292  02D8                     __ptext23:	
  3293 ;; *************** function _I2C_ack_check *****************
  3294 ;; Defined at:
  3295 ;;		line 38 in file "I2C.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;		None
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;  i               2    2[COMMON] unsigned int 
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  2    0[COMMON] int 
  3302 ;; Registers used:
  3303 ;;		wreg, status,2
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3309 ;;      Params:         2       0       0       0       0       0
  3310 ;;      Locals:         2       0       0       0       0       0
  3311 ;;      Temps:          0       0       0       0       0       0
  3312 ;;      Totals:         4       0       0       0       0       0
  3313 ;;Total ram usage:        4 bytes
  3314 ;; Hardware stack levels used:    1
  3315 ;; This function calls:
  3316 ;;		Nothing
  3317 ;; This function is called by:
  3318 ;;		_I2C_send_data
  3319 ;; This function uses a non-reentrant model
  3320 ;;
  3321                           
  3322                           
  3323                           ;psect for function _I2C_ack_check
  3324  02D8                     _I2C_ack_check:	
  3325                           
  3326                           ;I2C.c: 39: unsigned int i;
  3327                           ;I2C.c: 40: for (i = 0; i < 65535; i++) {
  3328                           
  3329                           ;incstack = 0
  3330                           ; Regs used in _I2C_ack_check: [wreg+status,2]
  3331  02D8  01F2               	clrf	I2C_ack_check@i
  3332  02D9  01F3               	clrf	I2C_ack_check@i+1
  3333  02DA  30FF               	movlw	255
  3334  02DB  0673               	xorwf	I2C_ack_check@i+1,w
  3335  02DC  1D03               	skipz
  3336  02DD  2AE0               	goto	u55_25
  3337  02DE  30FF               	movlw	255
  3338  02DF  0672               	xorwf	I2C_ack_check@i,w
  3339  02E0                     u55_25:	
  3340  02E0  1903               	btfsc	3,2
  3341  02E1  2AF6               	goto	i1l1093
  3342  02E2                     i1l183:	
  3343                           
  3344                           ;I2C.c: 41: if (SSP1CON2bits.ACKSTAT == 0) {
  3345  02E2  0024               	movlb	4	; select bank4
  3346  02E3  1B16               	btfsc	22,6	;volatile
  3347  02E4  2AEA               	goto	i1l1091
  3348                           
  3349                           ;I2C.c: 42: return 1;
  3350  02E5  3001               	movlw	1
  3351  02E6  00F0               	movwf	?_I2C_ack_check
  3352  02E7  3000               	movlw	0
  3353  02E8  00F1               	movwf	?_I2C_ack_check+1
  3354  02E9  0008               	return
  3355  02EA                     i1l1091:	
  3356  02EA  3001               	movlw	1
  3357  02EB  07F2               	addwf	I2C_ack_check@i,f
  3358  02EC  3000               	movlw	0
  3359  02ED  3DF3               	addwfc	I2C_ack_check@i+1,f
  3360  02EE  30FF               	movlw	255
  3361  02EF  0673               	xorwf	I2C_ack_check@i+1,w
  3362  02F0  1D03               	skipz
  3363  02F1  2AF4               	goto	u57_25
  3364  02F2  30FF               	movlw	255
  3365  02F3  0672               	xorwf	I2C_ack_check@i,w
  3366  02F4                     u57_25:	
  3367  02F4  1D03               	skipz
  3368  02F5  2AE2               	goto	i1l183
  3369  02F6                     i1l1093:	
  3370                           
  3371                           ;I2C.c: 43: }
  3372                           ;I2C.c: 44: }
  3373                           ;I2C.c: 45: return 0;
  3374  02F6  01F0               	clrf	?_I2C_ack_check
  3375  02F7  01F1               	clrf	?_I2C_ack_check+1
  3376  02F8  0008               	return
  3377  02F9                     __end_of_I2C_ack_check:	
  3378  007E                     btemp	set	126	;btemp
  3379  007E                     pic14e$flags	set	126
  3380  007E                     wtemp	set	126
  3381  007E                     wtemp0	set	126
  3382  0080                     wtemp1	set	128
  3383  0082                     wtemp2	set	130
  3384  0084                     wtemp3	set	132
  3385  0086                     wtemp4	set	134
  3386  0088                     wtemp5	set	136
  3387  007F                     wtemp6	set	127
  3388  007E                     ttemp	set	126
  3389  007E                     ttemp0	set	126
  3390  0081                     ttemp1	set	129
  3391  0084                     ttemp2	set	132
  3392  0087                     ttemp3	set	135
  3393  007F                     ttemp4	set	127
  3394  007E                     ltemp	set	126
  3395  007E                     ltemp0	set	126
  3396  0082                     ltemp1	set	130
  3397  0086                     ltemp2	set	134
  3398  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     28      49
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    PID@power	PTR int  size(1) Largest target is 2
		 -> power(BANK0[2]), 

    measure@current	PTR float  size(1) Largest target is 3
		 -> current(BANK0[3]), 

    measure@volume	PTR int  size(1) Largest target is 2
		 -> volume(BANK0[2]), 

    I2C_send_data@data	PTR unsigned char  size(1) Largest target is 1
		 -> inter@data(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _inter in COMMON

    _measure->___awtoft
    ___awtoft->___ftpack
    _PID->_calc_D
    _PID->_calc_I
    _calc_P->___wmul
    _calc_I->___wmul
    _calc_D->___wmul
    _I2C_send_data->_I2C_ack_check

Critical Paths under _main in BANK0

    _init->_init_adcon

Critical Paths under _inter in BANK0

    _inter->_PID

Critical Paths under _main in BANK1

    None.

Critical Paths under _inter in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _inter in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _inter in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _inter in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     172
                               _init
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     172
                    _init_I2C_master
                           _init_PWM
                        _init_Timer2
                        _init_Timer4
                         _init_adcon
                  _init_interruption
 ---------------------------------------------------------------------------------
 (2) _init_interruption                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_adcon                                           4     0      4     172
                                             24 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _init_Timer4                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_Timer2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_PWM                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_I2C_master                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _inter                                                5     5      0    6657
                                             19 BANK0      5     5      0
                      _I2C_send_data
                                _PID
                            _measure
                         _output_PWM
                       _safety_check
 ---------------------------------------------------------------------------------
 (4) _safety_check                                         2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _output_PWM                                           4     2      2     108
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) _measure                                              4     3      1    3229
                                              0 BANK0      4     3      1
                           ___awtoft
                             ___wmul
                             _adconv
 ---------------------------------------------------------------------------------
 (5) _adconv                                              11     9      2     242
                                              0 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (5) ___awtoft                                             6     3      3    2086
                                              8 COMMON     6     3      3
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    1931
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (4) _PID                                                 19    14      5    3031
                                              0 BANK0     19    14      5
                             _calc_D
                             _calc_I
                             _calc_P
 ---------------------------------------------------------------------------------
 (5) _calc_P                                               4     2      2     841
                                              6 COMMON     4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _calc_I                                               6     4      2     818
                                              6 COMMON     6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _calc_D                                               6     4      2     841
                                              6 COMMON     6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     732
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2C_send_data                                        7     4      3     265
                                              4 COMMON     7     4      3
                      _I2C_ack_check
                     _I2C_idle_check
 ---------------------------------------------------------------------------------
 (5) _I2C_idle_check                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C_ack_check                                        4     2      2      46
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _init_I2C_master
     _init_PWM
     _init_Timer2
     _init_Timer4
     _init_adcon
     _init_interruption
   _loop

 _inter (ROOT)
   _I2C_send_data
     _I2C_ack_check
     _I2C_idle_check
   _PID
     _calc_D
       ___wmul
     _calc_I
       ___wmul
     _calc_P
       ___wmul
   _measure
     ___awtoft
       ___ftpack
       ___wmul (ARG)
     ___wmul
     _adconv
   _output_PWM
   _safety_check

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      3F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1C      31       6       61.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      3F      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Sun Apr 23 22:41:11 2017

          ??_I2C_idle_check 0070                 __CFG_CP$OFF 0000         ___wmul@multiplicand 0072  
                       _GIE 005F                         _RA2 0062                         _RB3 006B  
                       _RA6 0066                         _PR2 001B                         _PID 008F  
              __CFG_CPD$OFF 0000                __CFG_BORV$HI 0000                         wreg 0009  
              __CFG_LVP$OFF 0000                        ?_PID 0020                        l1235 03B0  
                      _PEIE 005E                        _TMR2 001A                        _TMR4 0415  
              __CFG_WRT$OFF 0000                        _main 03AD                ___ftpack@arg 0070  
                      _init 0288                        _loop 03C5                ___ftpack@exp 0073  
                      fsr0h 0005                        fsr1h 0007                        fsr0l 0004  
                      indf0 0000                        indf1 0001                        fsr1l 0006  
                      btemp 007E               __CFG_BOREN$ON 0000                        ltemp 007E  
                      start 0082                        ttemp 007E                        wtemp 007E  
             __CFG_IESO$OFF 0000           _init_interruption 0382                       ??_PID 0025  
        ?_init_interruption 0070                ?_init_Timer2 0070                ?_init_Timer4 0070  
                     ?_main 0070                       ?_init 0070                       ?_loop 0070  
             __CFG_WDTE$OFF 0000                       _T2CON 001C                       _T4CON 0417  
       ??_init_interruption 0038                       i1l106 007E                       i1l222 00E5  
                     i1l127 01A1                       i1l128 01A3                       i1l183 02E2  
                     i1l328 0321                       i1l189 0216                       i1l495 016B  
                     i1l489 0154                       i1l987 031B                       u42_25 0136  
                     _PORTA 000C                       _PORTB 000D                       u51_25 0190  
                     u60_25 00D6                       u44_25 014F                       u52_25 019F  
                     u37_25 0322                       u61_25 00EE                       u38_25 0327  
                     u62_25 00FE                       u46_25 015C                       u70_25 005E  
                     u55_25 02E0                       _TRISA 008C                       _TRISB 008D  
                     u57_25 02F4                       u65_25 0220                       u49_25 0172  
                     u67_25 0018               __CFG_PWRTE$ON 0000              __CFG_FCMEN$OFF 0000  
             ___awtoft@sign 007D             __end_of_measure 0288                       _inter 0004  
             ___ftpack@sign 0074                       _power 004D                       ltemp0 007E  
                     ltemp1 0082                       ltemp2 0086                       ltemp3 0080  
                     ttemp0 007E                       ttemp1 0081                       ttemp2 0084  
                     ttemp3 0087                       ttemp4 007F                       status 0003  
                     wtemp0 007E                       wtemp1 0080                       wtemp2 0082  
                     wtemp3 0084                       wtemp4 0086                       wtemp5 0088  
                     wtemp6 007F   __end_of_init_interruption 038D              __CFG_MCLRE$OFF 0000  
           __initialization 0084                __end_of_main 03B4                __end_of_init 02B3  
              __end_of_loop 03C6                      ??_main 003C                      ??_init 003C  
                    ??_loop 0038              __CFG_PLLEN$OFF 0000                      PID@mes 0022  
                    PID@ref 0020                      PID@res 002F                      _BCL1IE 0493  
                    _BCL1IF 0093                      _ADCON0 009D                      _ADCON1 009E  
                    ?_inter 0070                      _ADRESH 009C                      _ADRESL 009B  
                    _CCPR3H 0312                      _CCPR3L 0311            __end_of___awtoft 0319  
                    _ANSELA 018C                      _ANSELB 018D            __end_of___ftpack 0182  
    __size_of_I2C_ack_check 0021                      i1l1001 012A                      i1l1005 0131  
                    i1l1015 0159                      i1l1007 013B                      i1l1017 0161  
                    i1l1009 0140                      i1l1125 0303                      i1l1091 02EA  
                    i1l1227 0242                      i1l1163 039E                      i1l1251 004D  
                    i1l1093 02F6                      i1l1069 0192                      i1l1253 004F  
                    i1l1079 03A3                      i1l1191 0108                      i1l1183 00E0  
                    i1l1263 007C                      i1l1247 0040                      i1l1193 010D  
                    i1l1249 0043                      i1l1195 0113                      i1l1187 00F4  
                    _OSCCON 0099                      _TMR2IE 0489                      _TMR2IF 0089  
                    _TMR4IE 0499                      _TMR4IF 0099                      _TMR2ON 00E2  
                    _TMR4ON 20BA                      _SSP1IE 048B                      _SSP1IF 008B  
                    _calc_D 01C7                      _calc_I 02B3                      _calc_P 0336  
                    _adconv 0182                      ___wmul 0319              __CFG_STVREN$ON 0000  
          __end_of_init_PWM 0398                      _volume 004F                   ??_measure 007E  
  __size_of_init_I2C_master 000E     __end_of__initialization 008B  __size_of_init_interruption 000B  
    __size_of_I2C_send_data 0041                  ___awtoft@c 0078               ?_safety_check 0070  
            __pcstackCOMMON 0070                  _calc_D$645 007A               _I2C_ack_check 02D8  
             __end_of_inter 0082        __size_of_init_Timer2 0005        __size_of_init_Timer4 0006  
                   ??_inter 0033                  __pbssBANK0 003C                     PID@temp 0031  
            ??_safety_check 0072                  __pmaintext 03AD              ?_I2C_ack_check 0070  
                   ?_calc_D 0076                     ?_calc_I 0076                     ?_calc_P 0076  
                   ?_adconv 0070                     ?___wmul 0070                  __pintentry 0004  
                   _CCP3CON 0313                   ?___awtoft 0078                   ?___ftpack 0070  
                   _CCPTMRS 029E                     _PID$242 0029                     _PID$243 002B  
                   _PID$244 002D               _I2C_send_data 0208                  adconv@temp 0079  
                   _SSP1ADD 0212                     _SSP1BUF 0211         I2C_send_data@length 0075  
         ??_init_I2C_master 0038                   ?_init_PWM 0070              measure@current 0020  
           __size_of_calc_D 0041             __size_of_calc_I 0025             __size_of_calc_P 0019  
           __size_of_adconv 0045             __size_of___wmul 001D                  _init_adcon 0366  
                ??___awtoft 007B                  ??___ftpack 0075                     calc_D@d 0040  
                   calc_I@i 003C                     calc_P@p 0078                     __ptext0 0000  
                   __ptext1 03C5                     __ptext2 0288                     __ptext3 0382  
                   __ptext4 0366                     __ptext5 03BA                     __ptext6 03C0  
                   __ptext7 038D                     __ptext8 0374              ?_I2C_send_data 0074  
              __size_of_PID 0093                     _measure 0249                     _current 004A  
   __size_of_I2C_idle_check 000A                     clrloop0 03B5        end_of_initialization 008B  
                ??_init_PWM 0038             ??_I2C_ack_check 0072            adconv@pin_select 0070  
          __CFG_FOSC$INTOSC 0000        __end_of_safety_check 03A3                  _output_PWM 034F  
               _CCP3CONbits 0313                 ?_init_adcon 0038              __end_of_calc_D 0208  
            __end_of_calc_I 02D8              __end_of_calc_P 034F              __end_of_adconv 01C7  
            __end_of___wmul 0336             ??_I2C_send_data 0077         start_initialization 0084  
               __end_of_PID 0122                    ??_calc_D 0078                    ??_calc_I 0078  
                  ??_calc_P 0078                    ??_adconv 0072                    ??___wmul 0074  
          init_adcon@anselA 0038            init_adcon@anselB 003A               ??_init_Timer2 0038  
             ??_init_Timer4 0038         measure@current_sens 0021             _init_I2C_master 0374  
         __size_of___awtoft 0020           __size_of___ftpack 0060              _I2C_idle_check 03A3  
                 ___latbits 0001               __pcstackBANK0 0020               output_PWM@out 0070  
            I2C_ack_check@i 0072         __size_of_init_adcon 000E                 ?_output_PWM 0070  
                  PID@power 0024           __size_of_init_PWM 000B                   calc_D@res 0076  
                 calc_I@res 0076                   calc_P@res 0076                 calc_D@d_bef 0042  
     __size_of_safety_check 000B      __end_of_I2C_idle_check 03AD                 calc_D@d_sum 0044  
                  ?_measure 0020         __end_of_init_Timer2 03C5         __end_of_init_Timer4 03C0  
             measure@volume 0023              __size_of_inter 007E              ___wmul@product 0074  
                 clear_ram0 03B4                    _GO_nDONE 04E9                _safety_check 0398  
                  _SSP1CON1 0215                    _SSP1CON2 0216     __end_of_init_I2C_master 0382  
                  _SSP1STAT 0214           ___wmul@multiplier 0070             ?_I2C_idle_check 0070  
       __size_of_output_PWM 0017       __end_of_I2C_ack_check 02F9                ??_init_adcon 003C  
                 inter@data 0037                 _init_Timer2 03C0                 _init_Timer4 03BA  
                  ___awtoft 02F9                    ___ftpack 0122            __size_of_measure 003F  
                  __ptext10 0398                    __ptext11 034F                    __ptext20 0319  
                  __ptext12 0249                    __ptext21 0208                    __ptext13 0182  
                  __ptext22 03A3                    __ptext14 02F9                    __ptext23 02D8  
                  __ptext15 0122                    __ptext16 008F                    __ptext17 0336  
                  __ptext18 02B3                    __ptext19 01C7                _SSP1CON2bits 0216  
         I2C_send_data@addr 0078           I2C_send_data@data 0074                    _init_PWM 038D  
        __end_of_init_adcon 0374               __size_of_main 0007               __size_of_init 002B  
             __size_of_loop 0001            ?_init_I2C_master 0070       __end_of_I2C_send_data 0249  
               pic14e$flags 007E                    intlevel1 0000                ??_output_PWM 0072  
         __CFG_CLKOUTEN$OFF 0000          __end_of_output_PWM 0366              I2C_send_data@i 0079  
             inter@cnt_tmr2 0046               inter@cnt_tmr4 0048  
